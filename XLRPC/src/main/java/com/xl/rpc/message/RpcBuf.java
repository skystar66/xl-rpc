// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: liveme.rpc.proto

package com.xl.rpc.message;

public final class RpcBuf {
  private RpcBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *报文消息类型Type
   * </pre>
   *
   * Protobuf enum {@code RpcTypeEnum}
   */
  public enum RpcTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *0
     * </pre>
     *
     * <code>ZERO = 0;</code>
     */
    ZERO(0),
    /**
     * <pre>
     *同步im ip
     * </pre>
     *
     * <code>SYNC_ROOM = 100;</code>
     */
    SYNC_ROOM(100),
    /**
     * <pre>
     *拉取直播间消息
     * </pre>
     *
     * <code>PULL_MSG = 101;</code>
     */
    PULL_MSG(101),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *0
     * </pre>
     *
     * <code>ZERO = 0;</code>
     */
    public static final int ZERO_VALUE = 0;
    /**
     * <pre>
     *同步im ip
     * </pre>
     *
     * <code>SYNC_ROOM = 100;</code>
     */
    public static final int SYNC_ROOM_VALUE = 100;
    /**
     * <pre>
     *拉取直播间消息
     * </pre>
     *
     * <code>PULL_MSG = 101;</code>
     */
    public static final int PULL_MSG_VALUE = 101;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RpcTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static RpcTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return ZERO;
        case 100: return SYNC_ROOM;
        case 101: return PULL_MSG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RpcTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RpcTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RpcTypeEnum>() {
            public RpcTypeEnum findValueByNumber(int number) {
              return RpcTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RpcBuf.getDescriptor().getEnumTypes().get(0);
    }

    private static final RpcTypeEnum[] VALUES = values();

    public static RpcTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RpcTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RpcTypeEnum)
  }

  /**
   * <pre>
   *消息二级分类SubType
   * </pre>
   *
   * Protobuf enum {@code RpcSubTypeEnum}
   */
  public enum RpcSubTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *0
     * </pre>
     *
     * <code>ZERO1 = 0;</code>
     */
    ZERO1(0),
    /**
     * <pre>
     *添加
     * </pre>
     *
     * <code>SYNC_ROOM_ADD = 100;</code>
     */
    SYNC_ROOM_ADD(100),
    /**
     * <pre>
     *删除
     * </pre>
     *
     * <code>SYNC_ROOM_DEL = 101;</code>
     */
    SYNC_ROOM_DEL(101),
    /**
     * <pre>
     *获取rooms
     * </pre>
     *
     * <code>SYNC_ROOM_GET = 102;</code>
     */
    SYNC_ROOM_GET(102),
    /**
     * <pre>
     *批量插入
     * </pre>
     *
     * <code>SYNC_ROOM_BATCH_ADD = 103;</code>
     */
    SYNC_ROOM_BATCH_ADD(103),
    /**
     * <pre>
     *禁言
     * </pre>
     *
     * <code>GAG_ADD = 110;</code>
     */
    GAG_ADD(110),
    /**
     * <pre>
     *解除禁言
     * </pre>
     *
     * <code>GAG_DEL = 111;</code>
     */
    GAG_DEL(111),
    /**
     * <pre>
     *主播黑名单全量同步
     * </pre>
     *
     * <code>BLACK_ALL = 120;</code>
     */
    BLACK_ALL(120),
    /**
     * <pre>
     *添加黑名单
     * </pre>
     *
     * <code>BLACK_ADD = 121;</code>
     */
    BLACK_ADD(121),
    /**
     * <pre>
     *删除黑名单
     * </pre>
     *
     * <code>BLACK_DEL = 122;</code>
     */
    BLACK_DEL(122),
    /**
     * <pre>
     *直播间消息同步
     * </pre>
     *
     * <code>PULL_MSG_SNYC = 123;</code>
     */
    PULL_MSG_SNYC(123),
    /**
     * <pre>
     *删除ROOM缓存中直播间历史消息
     * </pre>
     *
     * <code>PULL_MSG_DEL = 124;</code>
     */
    PULL_MSG_DEL(124),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *0
     * </pre>
     *
     * <code>ZERO1 = 0;</code>
     */
    public static final int ZERO1_VALUE = 0;
    /**
     * <pre>
     *添加
     * </pre>
     *
     * <code>SYNC_ROOM_ADD = 100;</code>
     */
    public static final int SYNC_ROOM_ADD_VALUE = 100;
    /**
     * <pre>
     *删除
     * </pre>
     *
     * <code>SYNC_ROOM_DEL = 101;</code>
     */
    public static final int SYNC_ROOM_DEL_VALUE = 101;
    /**
     * <pre>
     *获取rooms
     * </pre>
     *
     * <code>SYNC_ROOM_GET = 102;</code>
     */
    public static final int SYNC_ROOM_GET_VALUE = 102;
    /**
     * <pre>
     *批量插入
     * </pre>
     *
     * <code>SYNC_ROOM_BATCH_ADD = 103;</code>
     */
    public static final int SYNC_ROOM_BATCH_ADD_VALUE = 103;
    /**
     * <pre>
     *禁言
     * </pre>
     *
     * <code>GAG_ADD = 110;</code>
     */
    public static final int GAG_ADD_VALUE = 110;
    /**
     * <pre>
     *解除禁言
     * </pre>
     *
     * <code>GAG_DEL = 111;</code>
     */
    public static final int GAG_DEL_VALUE = 111;
    /**
     * <pre>
     *主播黑名单全量同步
     * </pre>
     *
     * <code>BLACK_ALL = 120;</code>
     */
    public static final int BLACK_ALL_VALUE = 120;
    /**
     * <pre>
     *添加黑名单
     * </pre>
     *
     * <code>BLACK_ADD = 121;</code>
     */
    public static final int BLACK_ADD_VALUE = 121;
    /**
     * <pre>
     *删除黑名单
     * </pre>
     *
     * <code>BLACK_DEL = 122;</code>
     */
    public static final int BLACK_DEL_VALUE = 122;
    /**
     * <pre>
     *直播间消息同步
     * </pre>
     *
     * <code>PULL_MSG_SNYC = 123;</code>
     */
    public static final int PULL_MSG_SNYC_VALUE = 123;
    /**
     * <pre>
     *删除ROOM缓存中直播间历史消息
     * </pre>
     *
     * <code>PULL_MSG_DEL = 124;</code>
     */
    public static final int PULL_MSG_DEL_VALUE = 124;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RpcSubTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static RpcSubTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return ZERO1;
        case 100: return SYNC_ROOM_ADD;
        case 101: return SYNC_ROOM_DEL;
        case 102: return SYNC_ROOM_GET;
        case 103: return SYNC_ROOM_BATCH_ADD;
        case 110: return GAG_ADD;
        case 111: return GAG_DEL;
        case 120: return BLACK_ALL;
        case 121: return BLACK_ADD;
        case 122: return BLACK_DEL;
        case 123: return PULL_MSG_SNYC;
        case 124: return PULL_MSG_DEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RpcSubTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RpcSubTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RpcSubTypeEnum>() {
            public RpcSubTypeEnum findValueByNumber(int number) {
              return RpcSubTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RpcBuf.getDescriptor().getEnumTypes().get(1);
    }

    private static final RpcSubTypeEnum[] VALUES = values();

    public static RpcSubTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RpcSubTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RpcSubTypeEnum)
  }

  public interface RpcOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Rpc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *rpc服务
     * </pre>
     *
     * <code>optional string rpcServer = 1;</code>
     */
    String getRpcServer();
    /**
     * <pre>
     *rpc服务
     * </pre>
     *
     * <code>optional string rpcServer = 1;</code>
     */
    com.google.protobuf.ByteString
        getRpcServerBytes();

    /**
     * <pre>
     *rpc端口
     * </pre>
     *
     * <code>optional int32 rpcPort = 2;</code>
     */
    int getRpcPort();

    /**
     * <pre>
     *连接ID
     * </pre>
     *
     * <code>optional string channelId = 3;</code>
     */
    String getChannelId();
    /**
     * <pre>
     *连接ID
     * </pre>
     *
     * <code>optional string channelId = 3;</code>
     */
    com.google.protobuf.ByteString
        getChannelIdBytes();

    /**
     * <pre>
     *序号
     * </pre>
     *
     * <code>optional int32 index = 4;</code>
     */
    int getIndex();

    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>optional string time = 5;</code>
     */
    String getTime();
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>optional string time = 5;</code>
     */
    com.google.protobuf.ByteString
        getTimeBytes();
  }
  /**
   * <pre>
   *RPC连接登录
   * </pre>
   *
   * Protobuf type {@code Rpc}
   */
  public  static final class Rpc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Rpc)
      RpcOrBuilder {
    // Use Rpc.newBuilder() to construct.
    private Rpc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Rpc() {
      rpcServer_ = "";
      rpcPort_ = 0;
      channelId_ = "";
      index_ = 0;
      time_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Rpc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              rpcServer_ = s;
              break;
            }
            case 16: {

              rpcPort_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              channelId_ = s;
              break;
            }
            case 32: {

              index_ = input.readInt32();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              time_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RpcBuf.internal_static_Rpc_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RpcBuf.internal_static_Rpc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.class, Builder.class);
    }

    public static final int RPCSERVER_FIELD_NUMBER = 1;
    private volatile Object rpcServer_;
    /**
     * <pre>
     *rpc服务
     * </pre>
     *
     * <code>optional string rpcServer = 1;</code>
     */
    public String getRpcServer() {
      Object ref = rpcServer_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        rpcServer_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *rpc服务
     * </pre>
     *
     * <code>optional string rpcServer = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRpcServerBytes() {
      Object ref = rpcServer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        rpcServer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RPCPORT_FIELD_NUMBER = 2;
    private int rpcPort_;
    /**
     * <pre>
     *rpc端口
     * </pre>
     *
     * <code>optional int32 rpcPort = 2;</code>
     */
    public int getRpcPort() {
      return rpcPort_;
    }

    public static final int CHANNELID_FIELD_NUMBER = 3;
    private volatile Object channelId_;
    /**
     * <pre>
     *连接ID
     * </pre>
     *
     * <code>optional string channelId = 3;</code>
     */
    public String getChannelId() {
      Object ref = channelId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        channelId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *连接ID
     * </pre>
     *
     * <code>optional string channelId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getChannelIdBytes() {
      Object ref = channelId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        channelId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 4;
    private int index_;
    /**
     * <pre>
     *序号
     * </pre>
     *
     * <code>optional int32 index = 4;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int TIME_FIELD_NUMBER = 5;
    private volatile Object time_;
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>optional string time = 5;</code>
     */
    public String getTime() {
      Object ref = time_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        time_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *时间
     * </pre>
     *
     * <code>optional string time = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTimeBytes() {
      Object ref = time_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRpcServerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rpcServer_);
      }
      if (rpcPort_ != 0) {
        output.writeInt32(2, rpcPort_);
      }
      if (!getChannelIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, channelId_);
      }
      if (index_ != 0) {
        output.writeInt32(4, index_);
      }
      if (!getTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, time_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRpcServerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rpcServer_);
      }
      if (rpcPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rpcPort_);
      }
      if (!getChannelIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, channelId_);
      }
      if (index_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, index_);
      }
      if (!getTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, time_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Rpc)) {
        return super.equals(obj);
      }
      Rpc other = (Rpc) obj;

      boolean result = true;
      result = result && getRpcServer()
          .equals(other.getRpcServer());
      result = result && (getRpcPort()
          == other.getRpcPort());
      result = result && getChannelId()
          .equals(other.getChannelId());
      result = result && (getIndex()
          == other.getIndex());
      result = result && getTime()
          .equals(other.getTime());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + RPCSERVER_FIELD_NUMBER;
      hash = (53 * hash) + getRpcServer().hashCode();
      hash = (37 * hash) + RPCPORT_FIELD_NUMBER;
      hash = (53 * hash) + getRpcPort();
      hash = (37 * hash) + CHANNELID_FIELD_NUMBER;
      hash = (53 * hash) + getChannelId().hashCode();
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Rpc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Rpc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Rpc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Rpc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Rpc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Rpc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Rpc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *RPC连接登录
     * </pre>
     *
     * Protobuf type {@code Rpc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Rpc)
        RpcOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RpcBuf.internal_static_Rpc_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RpcBuf.internal_static_Rpc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.RpcBuf.Rpc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        rpcServer_ = "";

        rpcPort_ = 0;

        channelId_ = "";

        index_ = 0;

        time_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RpcBuf.internal_static_Rpc_descriptor;
      }

      public Rpc getDefaultInstanceForType() {
        return Rpc.getDefaultInstance();
      }

      public Rpc build() {
        Rpc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc buildPartial() {
        Rpc result = new Rpc(this);
        result.rpcServer_ = rpcServer_;
        result.rpcPort_ = rpcPort_;
        result.channelId_ = channelId_;
        result.index_ = index_;
        result.time_ = time_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc) {
          return mergeFrom((Rpc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc other) {
        if (other == Rpc.getDefaultInstance()) return this;
        if (!other.getRpcServer().isEmpty()) {
          rpcServer_ = other.rpcServer_;
          onChanged();
        }
        if (other.getRpcPort() != 0) {
          setRpcPort(other.getRpcPort());
        }
        if (!other.getChannelId().isEmpty()) {
          channelId_ = other.channelId_;
          onChanged();
        }
        if (other.getIndex() != 0) {
          setIndex(other.getIndex());
        }
        if (!other.getTime().isEmpty()) {
          time_ = other.time_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object rpcServer_ = "";
      /**
       * <pre>
       *rpc服务
       * </pre>
       *
       * <code>optional string rpcServer = 1;</code>
       */
      public String getRpcServer() {
        Object ref = rpcServer_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          rpcServer_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *rpc服务
       * </pre>
       *
       * <code>optional string rpcServer = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRpcServerBytes() {
        Object ref = rpcServer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          rpcServer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *rpc服务
       * </pre>
       *
       * <code>optional string rpcServer = 1;</code>
       */
      public Builder setRpcServer(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rpcServer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rpc服务
       * </pre>
       *
       * <code>optional string rpcServer = 1;</code>
       */
      public Builder clearRpcServer() {
        
        rpcServer_ = getDefaultInstance().getRpcServer();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rpc服务
       * </pre>
       *
       * <code>optional string rpcServer = 1;</code>
       */
      public Builder setRpcServerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rpcServer_ = value;
        onChanged();
        return this;
      }

      private int rpcPort_ ;
      /**
       * <pre>
       *rpc端口
       * </pre>
       *
       * <code>optional int32 rpcPort = 2;</code>
       */
      public int getRpcPort() {
        return rpcPort_;
      }
      /**
       * <pre>
       *rpc端口
       * </pre>
       *
       * <code>optional int32 rpcPort = 2;</code>
       */
      public Builder setRpcPort(int value) {
        
        rpcPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *rpc端口
       * </pre>
       *
       * <code>optional int32 rpcPort = 2;</code>
       */
      public Builder clearRpcPort() {
        
        rpcPort_ = 0;
        onChanged();
        return this;
      }

      private Object channelId_ = "";
      /**
       * <pre>
       *连接ID
       * </pre>
       *
       * <code>optional string channelId = 3;</code>
       */
      public String getChannelId() {
        Object ref = channelId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          channelId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *连接ID
       * </pre>
       *
       * <code>optional string channelId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getChannelIdBytes() {
        Object ref = channelId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          channelId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *连接ID
       * </pre>
       *
       * <code>optional string channelId = 3;</code>
       */
      public Builder setChannelId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *连接ID
       * </pre>
       *
       * <code>optional string channelId = 3;</code>
       */
      public Builder clearChannelId() {
        
        channelId_ = getDefaultInstance().getChannelId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *连接ID
       * </pre>
       *
       * <code>optional string channelId = 3;</code>
       */
      public Builder setChannelIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        channelId_ = value;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       *序号
       * </pre>
       *
       * <code>optional int32 index = 4;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       *序号
       * </pre>
       *
       * <code>optional int32 index = 4;</code>
       */
      public Builder setIndex(int value) {
        
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *序号
       * </pre>
       *
       * <code>optional int32 index = 4;</code>
       */
      public Builder clearIndex() {
        
        index_ = 0;
        onChanged();
        return this;
      }

      private Object time_ = "";
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>optional string time = 5;</code>
       */
      public String getTime() {
        Object ref = time_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          time_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>optional string time = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>optional string time = 5;</code>
       */
      public Builder setTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>optional string time = 5;</code>
       */
      public Builder clearTime() {
        
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *时间
       * </pre>
       *
       * <code>optional string time = 5;</code>
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        time_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Rpc)
    }

    // @@protoc_insertion_point(class_scope:Rpc)
    private static final Rpc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Rpc();
    }

    public static Rpc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Rpc>
        PARSER = new com.google.protobuf.AbstractParser<Rpc>() {
      public Rpc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Rpc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Rpc> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Rpc> getParserForType() {
      return PARSER;
    }

    public Rpc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SyncRoomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SyncRoom)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *直播间id
     * </pre>
     *
     * <code>optional string roomId = 1;</code>
     */
    String getRoomId();
    /**
     * <pre>
     *直播间id
     * </pre>
     *
     * <code>optional string roomId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();

    /**
     * <pre>
     *所在imip
     * </pre>
     *
     * <code>optional string imip = 2;</code>
     */
    String getImip();
    /**
     * <pre>
     *所在imip
     * </pre>
     *
     * <code>optional string imip = 2;</code>
     */
    com.google.protobuf.ByteString
        getImipBytes();

    /**
     * <pre>
     *room server
     * </pre>
     *
     * <code>optional string roomip = 3;</code>
     */
    String getRoomip();
    /**
     * <pre>
     *room server
     * </pre>
     *
     * <code>optional string roomip = 3;</code>
     */
    com.google.protobuf.ByteString
        getRoomipBytes();
  }
  /**
   * <pre>
   *同步直播所在IM IP
   * </pre>
   *
   * Protobuf type {@code SyncRoom}
   */
  public  static final class SyncRoom extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SyncRoom)
      SyncRoomOrBuilder {
    // Use SyncRoom.newBuilder() to construct.
    private SyncRoom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SyncRoom() {
      roomId_ = "";
      imip_ = "";
      roomip_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SyncRoom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              roomId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              imip_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              roomip_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RpcBuf.internal_static_SyncRoom_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RpcBuf.internal_static_SyncRoom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SyncRoom.class, Builder.class);
    }

    public static final int ROOMID_FIELD_NUMBER = 1;
    private volatile Object roomId_;
    /**
     * <pre>
     *直播间id
     * </pre>
     *
     * <code>optional string roomId = 1;</code>
     */
    public String getRoomId() {
      Object ref = roomId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        roomId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *直播间id
     * </pre>
     *
     * <code>optional string roomId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      Object ref = roomId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IMIP_FIELD_NUMBER = 2;
    private volatile Object imip_;
    /**
     * <pre>
     *所在imip
     * </pre>
     *
     * <code>optional string imip = 2;</code>
     */
    public String getImip() {
      Object ref = imip_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        imip_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *所在imip
     * </pre>
     *
     * <code>optional string imip = 2;</code>
     */
    public com.google.protobuf.ByteString
        getImipBytes() {
      Object ref = imip_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        imip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROOMIP_FIELD_NUMBER = 3;
    private volatile Object roomip_;
    /**
     * <pre>
     *room server
     * </pre>
     *
     * <code>optional string roomip = 3;</code>
     */
    public String getRoomip() {
      Object ref = roomip_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        roomip_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *room server
     * </pre>
     *
     * <code>optional string roomip = 3;</code>
     */
    public com.google.protobuf.ByteString
        getRoomipBytes() {
      Object ref = roomip_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        roomip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRoomIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, roomId_);
      }
      if (!getImipBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, imip_);
      }
      if (!getRoomipBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, roomip_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRoomIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, roomId_);
      }
      if (!getImipBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, imip_);
      }
      if (!getRoomipBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, roomip_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SyncRoom)) {
        return super.equals(obj);
      }
      SyncRoom other = (SyncRoom) obj;

      boolean result = true;
      result = result && getRoomId()
          .equals(other.getRoomId());
      result = result && getImip()
          .equals(other.getImip());
      result = result && getRoomip()
          .equals(other.getRoomip());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId().hashCode();
      hash = (37 * hash) + IMIP_FIELD_NUMBER;
      hash = (53 * hash) + getImip().hashCode();
      hash = (37 * hash) + ROOMIP_FIELD_NUMBER;
      hash = (53 * hash) + getRoomip().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SyncRoom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncRoom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncRoom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncRoom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncRoom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SyncRoom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SyncRoom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SyncRoom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SyncRoom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SyncRoom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SyncRoom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *同步直播所在IM IP
     * </pre>
     *
     * Protobuf type {@code SyncRoom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SyncRoom)
        SyncRoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RpcBuf.internal_static_SyncRoom_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RpcBuf.internal_static_SyncRoom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SyncRoom.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.RpcBuf.SyncRoom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        roomId_ = "";

        imip_ = "";

        roomip_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RpcBuf.internal_static_SyncRoom_descriptor;
      }

      public SyncRoom getDefaultInstanceForType() {
        return SyncRoom.getDefaultInstance();
      }

      public SyncRoom build() {
        SyncRoom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SyncRoom buildPartial() {
        SyncRoom result = new SyncRoom(this);
        result.roomId_ = roomId_;
        result.imip_ = imip_;
        result.roomip_ = roomip_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SyncRoom) {
          return mergeFrom((SyncRoom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SyncRoom other) {
        if (other == SyncRoom.getDefaultInstance()) return this;
        if (!other.getRoomId().isEmpty()) {
          roomId_ = other.roomId_;
          onChanged();
        }
        if (!other.getImip().isEmpty()) {
          imip_ = other.imip_;
          onChanged();
        }
        if (!other.getRoomip().isEmpty()) {
          roomip_ = other.roomip_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SyncRoom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SyncRoom) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object roomId_ = "";
      /**
       * <pre>
       *直播间id
       * </pre>
       *
       * <code>optional string roomId = 1;</code>
       */
      public String getRoomId() {
        Object ref = roomId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *直播间id
       * </pre>
       *
       * <code>optional string roomId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *直播间id
       * </pre>
       *
       * <code>optional string roomId = 1;</code>
       */
      public Builder setRoomId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *直播间id
       * </pre>
       *
       * <code>optional string roomId = 1;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *直播间id
       * </pre>
       *
       * <code>optional string roomId = 1;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        roomId_ = value;
        onChanged();
        return this;
      }

      private Object imip_ = "";
      /**
       * <pre>
       *所在imip
       * </pre>
       *
       * <code>optional string imip = 2;</code>
       */
      public String getImip() {
        Object ref = imip_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          imip_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *所在imip
       * </pre>
       *
       * <code>optional string imip = 2;</code>
       */
      public com.google.protobuf.ByteString
          getImipBytes() {
        Object ref = imip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          imip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *所在imip
       * </pre>
       *
       * <code>optional string imip = 2;</code>
       */
      public Builder setImip(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        imip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所在imip
       * </pre>
       *
       * <code>optional string imip = 2;</code>
       */
      public Builder clearImip() {
        
        imip_ = getDefaultInstance().getImip();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所在imip
       * </pre>
       *
       * <code>optional string imip = 2;</code>
       */
      public Builder setImipBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        imip_ = value;
        onChanged();
        return this;
      }

      private Object roomip_ = "";
      /**
       * <pre>
       *room server
       * </pre>
       *
       * <code>optional string roomip = 3;</code>
       */
      public String getRoomip() {
        Object ref = roomip_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          roomip_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *room server
       * </pre>
       *
       * <code>optional string roomip = 3;</code>
       */
      public com.google.protobuf.ByteString
          getRoomipBytes() {
        Object ref = roomip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          roomip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *room server
       * </pre>
       *
       * <code>optional string roomip = 3;</code>
       */
      public Builder setRoomip(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        roomip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *room server
       * </pre>
       *
       * <code>optional string roomip = 3;</code>
       */
      public Builder clearRoomip() {
        
        roomip_ = getDefaultInstance().getRoomip();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *room server
       * </pre>
       *
       * <code>optional string roomip = 3;</code>
       */
      public Builder setRoomipBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        roomip_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SyncRoom)
    }

    // @@protoc_insertion_point(class_scope:SyncRoom)
    private static final SyncRoom DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SyncRoom();
    }

    public static SyncRoom getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SyncRoom>
        PARSER = new com.google.protobuf.AbstractParser<SyncRoom>() {
      public SyncRoom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SyncRoom(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SyncRoom> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SyncRoom> getParserForType() {
      return PARSER;
    }

    public SyncRoom getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SyncRoomsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SyncRooms)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    java.util.List<SyncRoom>
        getSyncRoomList();
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    SyncRoom getSyncRoom(int index);
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    int getSyncRoomCount();
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    java.util.List<? extends SyncRoomOrBuilder>
        getSyncRoomOrBuilderList();
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    SyncRoomOrBuilder getSyncRoomOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SyncRooms}
   */
  public  static final class SyncRooms extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SyncRooms)
      SyncRoomsOrBuilder {
    // Use SyncRooms.newBuilder() to construct.
    private SyncRooms(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SyncRooms() {
      syncRoom_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SyncRooms(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                syncRoom_ = new java.util.ArrayList<SyncRoom>();
                mutable_bitField0_ |= 0x00000001;
              }
              syncRoom_.add(
                  input.readMessage(SyncRoom.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          syncRoom_ = java.util.Collections.unmodifiableList(syncRoom_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RpcBuf.internal_static_SyncRooms_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RpcBuf.internal_static_SyncRooms_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SyncRooms.class, Builder.class);
    }

    public static final int SYNCROOM_FIELD_NUMBER = 1;
    private java.util.List<SyncRoom> syncRoom_;
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    public java.util.List<SyncRoom> getSyncRoomList() {
      return syncRoom_;
    }
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    public java.util.List<? extends SyncRoomOrBuilder>
        getSyncRoomOrBuilderList() {
      return syncRoom_;
    }
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    public int getSyncRoomCount() {
      return syncRoom_.size();
    }
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    public SyncRoom getSyncRoom(int index) {
      return syncRoom_.get(index);
    }
    /**
     * <code>repeated .SyncRoom syncRoom = 1;</code>
     */
    public SyncRoomOrBuilder getSyncRoomOrBuilder(
        int index) {
      return syncRoom_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < syncRoom_.size(); i++) {
        output.writeMessage(1, syncRoom_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < syncRoom_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, syncRoom_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SyncRooms)) {
        return super.equals(obj);
      }
      SyncRooms other = (SyncRooms) obj;

      boolean result = true;
      result = result && getSyncRoomList()
          .equals(other.getSyncRoomList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getSyncRoomCount() > 0) {
        hash = (37 * hash) + SYNCROOM_FIELD_NUMBER;
        hash = (53 * hash) + getSyncRoomList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SyncRooms parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncRooms parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncRooms parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SyncRooms parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SyncRooms parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SyncRooms parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SyncRooms parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SyncRooms parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SyncRooms parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SyncRooms parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SyncRooms prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SyncRooms}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SyncRooms)
        SyncRoomsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RpcBuf.internal_static_SyncRooms_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RpcBuf.internal_static_SyncRooms_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SyncRooms.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.RpcBuf.SyncRooms.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSyncRoomFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (syncRoomBuilder_ == null) {
          syncRoom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          syncRoomBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RpcBuf.internal_static_SyncRooms_descriptor;
      }

      public SyncRooms getDefaultInstanceForType() {
        return SyncRooms.getDefaultInstance();
      }

      public SyncRooms build() {
        SyncRooms result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SyncRooms buildPartial() {
        SyncRooms result = new SyncRooms(this);
        int from_bitField0_ = bitField0_;
        if (syncRoomBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            syncRoom_ = java.util.Collections.unmodifiableList(syncRoom_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.syncRoom_ = syncRoom_;
        } else {
          result.syncRoom_ = syncRoomBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SyncRooms) {
          return mergeFrom((SyncRooms)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SyncRooms other) {
        if (other == SyncRooms.getDefaultInstance()) return this;
        if (syncRoomBuilder_ == null) {
          if (!other.syncRoom_.isEmpty()) {
            if (syncRoom_.isEmpty()) {
              syncRoom_ = other.syncRoom_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSyncRoomIsMutable();
              syncRoom_.addAll(other.syncRoom_);
            }
            onChanged();
          }
        } else {
          if (!other.syncRoom_.isEmpty()) {
            if (syncRoomBuilder_.isEmpty()) {
              syncRoomBuilder_.dispose();
              syncRoomBuilder_ = null;
              syncRoom_ = other.syncRoom_;
              bitField0_ = (bitField0_ & ~0x00000001);
              syncRoomBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSyncRoomFieldBuilder() : null;
            } else {
              syncRoomBuilder_.addAllMessages(other.syncRoom_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SyncRooms parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SyncRooms) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<SyncRoom> syncRoom_ =
        java.util.Collections.emptyList();
      private void ensureSyncRoomIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          syncRoom_ = new java.util.ArrayList<SyncRoom>(syncRoom_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SyncRoom, SyncRoom.Builder, SyncRoomOrBuilder> syncRoomBuilder_;

      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public java.util.List<SyncRoom> getSyncRoomList() {
        if (syncRoomBuilder_ == null) {
          return java.util.Collections.unmodifiableList(syncRoom_);
        } else {
          return syncRoomBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public int getSyncRoomCount() {
        if (syncRoomBuilder_ == null) {
          return syncRoom_.size();
        } else {
          return syncRoomBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public SyncRoom getSyncRoom(int index) {
        if (syncRoomBuilder_ == null) {
          return syncRoom_.get(index);
        } else {
          return syncRoomBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder setSyncRoom(
          int index, SyncRoom value) {
        if (syncRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSyncRoomIsMutable();
          syncRoom_.set(index, value);
          onChanged();
        } else {
          syncRoomBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder setSyncRoom(
          int index, SyncRoom.Builder builderForValue) {
        if (syncRoomBuilder_ == null) {
          ensureSyncRoomIsMutable();
          syncRoom_.set(index, builderForValue.build());
          onChanged();
        } else {
          syncRoomBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder addSyncRoom(SyncRoom value) {
        if (syncRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSyncRoomIsMutable();
          syncRoom_.add(value);
          onChanged();
        } else {
          syncRoomBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder addSyncRoom(
          int index, SyncRoom value) {
        if (syncRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSyncRoomIsMutable();
          syncRoom_.add(index, value);
          onChanged();
        } else {
          syncRoomBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder addSyncRoom(
          SyncRoom.Builder builderForValue) {
        if (syncRoomBuilder_ == null) {
          ensureSyncRoomIsMutable();
          syncRoom_.add(builderForValue.build());
          onChanged();
        } else {
          syncRoomBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder addSyncRoom(
          int index, SyncRoom.Builder builderForValue) {
        if (syncRoomBuilder_ == null) {
          ensureSyncRoomIsMutable();
          syncRoom_.add(index, builderForValue.build());
          onChanged();
        } else {
          syncRoomBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder addAllSyncRoom(
          Iterable<? extends SyncRoom> values) {
        if (syncRoomBuilder_ == null) {
          ensureSyncRoomIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, syncRoom_);
          onChanged();
        } else {
          syncRoomBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder clearSyncRoom() {
        if (syncRoomBuilder_ == null) {
          syncRoom_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          syncRoomBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public Builder removeSyncRoom(int index) {
        if (syncRoomBuilder_ == null) {
          ensureSyncRoomIsMutable();
          syncRoom_.remove(index);
          onChanged();
        } else {
          syncRoomBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public SyncRoom.Builder getSyncRoomBuilder(
          int index) {
        return getSyncRoomFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public SyncRoomOrBuilder getSyncRoomOrBuilder(
          int index) {
        if (syncRoomBuilder_ == null) {
          return syncRoom_.get(index);  } else {
          return syncRoomBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public java.util.List<? extends SyncRoomOrBuilder>
           getSyncRoomOrBuilderList() {
        if (syncRoomBuilder_ != null) {
          return syncRoomBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(syncRoom_);
        }
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public SyncRoom.Builder addSyncRoomBuilder() {
        return getSyncRoomFieldBuilder().addBuilder(
            SyncRoom.getDefaultInstance());
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public SyncRoom.Builder addSyncRoomBuilder(
          int index) {
        return getSyncRoomFieldBuilder().addBuilder(
            index, SyncRoom.getDefaultInstance());
      }
      /**
       * <code>repeated .SyncRoom syncRoom = 1;</code>
       */
      public java.util.List<SyncRoom.Builder>
           getSyncRoomBuilderList() {
        return getSyncRoomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SyncRoom, SyncRoom.Builder, SyncRoomOrBuilder>
          getSyncRoomFieldBuilder() {
        if (syncRoomBuilder_ == null) {
          syncRoomBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SyncRoom, SyncRoom.Builder, SyncRoomOrBuilder>(
                  syncRoom_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          syncRoom_ = null;
        }
        return syncRoomBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SyncRooms)
    }

    // @@protoc_insertion_point(class_scope:SyncRooms)
    private static final SyncRooms DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SyncRooms();
    }

    public static SyncRooms getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SyncRooms>
        PARSER = new com.google.protobuf.AbstractParser<SyncRooms>() {
      public SyncRooms parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SyncRooms(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SyncRooms> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SyncRooms> getParserForType() {
      return PARSER;
    }

    public SyncRooms getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Rpc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Rpc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncRoom_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SyncRoom_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SyncRooms_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SyncRooms_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020liveme.rpc.proto\"Y\n\003Rpc\022\021\n\trpcServer\030\001" +
      " \001(\t\022\017\n\007rpcPort\030\002 \001(\005\022\021\n\tchannelId\030\003 \001(\t" +
      "\022\r\n\005index\030\004 \001(\005\022\014\n\004time\030\005 \001(\t\"8\n\010SyncRoo" +
      "m\022\016\n\006roomId\030\001 \001(\t\022\014\n\004imip\030\002 \001(\t\022\016\n\006roomi" +
      "p\030\003 \001(\t\"(\n\tSyncRooms\022\033\n\010syncRoom\030\001 \003(\0132\t" +
      ".SyncRoom*4\n\013RpcTypeEnum\022\010\n\004ZERO\020\000\022\r\n\tSY" +
      "NC_ROOM\020d\022\014\n\010PULL_MSG\020e*\331\001\n\016RpcSubTypeEn" +
      "um\022\t\n\005ZERO1\020\000\022\021\n\rSYNC_ROOM_ADD\020d\022\021\n\rSYNC" +
      "_ROOM_DEL\020e\022\021\n\rSYNC_ROOM_GET\020f\022\027\n\023SYNC_R" +
      "OOM_BATCH_ADD\020g\022\013\n\007GAG_ADD\020n\022\013\n\007GAG_DEL\020",
      "o\022\r\n\tBLACK_ALL\020x\022\r\n\tBLACK_ADD\020y\022\r\n\tBLACK" +
      "_DEL\020z\022\021\n\rPULL_MSG_SNYC\020{\022\020\n\014PULL_MSG_DE" +
      "L\020|B\034\n\022com.xl.rpc.messageB\006RpcBufb\006proto" +
      "3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Rpc_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Rpc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Rpc_descriptor,
        new String[] { "RpcServer", "RpcPort", "ChannelId", "Index", "Time", });
    internal_static_SyncRoom_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SyncRoom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SyncRoom_descriptor,
        new String[] { "RoomId", "Imip", "Roomip", });
    internal_static_SyncRooms_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SyncRooms_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SyncRooms_descriptor,
        new String[] { "SyncRoom", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
