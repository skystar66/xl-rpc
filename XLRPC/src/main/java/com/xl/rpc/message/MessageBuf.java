// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: liveme.im.proto

package com.xl.rpc.message;

public final class MessageBuf {
  private MessageBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *报文消息类型Type
   * </pre>
   *
   * Protobuf enum {@code TypeEnum}
   */
  public enum TypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *登录
     * </pre>
     *
     * <code>LOGIN = 0;</code>
     */
    LOGIN(0),
    /**
     * <pre>
     *退出
     * </pre>
     *
     * <code>LOGOUT = 1;</code>
     */
    LOGOUT(1),
    /**
     * <pre>
     *回执
     * </pre>
     *
     * <code>ACK = 2;</code>
     */
    ACK(2),
    /**
     * <pre>
     *单聊
     * </pre>
     *
     * <code>CHAT = 10;</code>
     */
    CHAT(10),
    /**
     * <pre>
     *群聊
     * </pre>
     *
     * <code>GROUPCHAT = 11;</code>
     */
    GROUPCHAT(11),
    /**
     * <pre>
     *推送
     * </pre>
     *
     * <code>PUSH = 12;</code>
     */
    PUSH(12),
    /**
     * <pre>
     *群管理
     * </pre>
     *
     * <code>GROUPMANAGE = 13;</code>
     */
    GROUPMANAGE(13),
    /**
     * <pre>
     *群管理 list
     * </pre>
     *
     * <code>GROUPMANAGELIST = 14;</code>
     */
    GROUPMANAGELIST(14),
    /**
     * <pre>
     *直播间
     * </pre>
     *
     * <code>ROOM = 20;</code>
     */
    ROOM(20),
    /**
     * <pre>
     *直播间下行消息批量发送
     * </pre>
     *
     * <code>ROOM_BATCH = 21;</code>
     */
    ROOM_BATCH(21),
    /**
     * <pre>
     *事件       使用功能：用户禁言
     * </pre>
     *
     * <code>EVENT = 30;</code>
     */
    EVENT(30),
    /**
     * <pre>
     *官方通知
     * </pre>
     *
     * <code>OFFICIAL = 31;</code>
     */
    OFFICIAL(31),
    /**
     * <pre>
     *系统消息
     * </pre>
     *
     * <code>SYSTEM = 40;</code>
     */
    SYSTEM(40),
    /**
     * <pre>
     *repeated重复消息，即消息List。List消息需设置本属性，对应 body见MessageList对象，反之，body为普通消息Message对象
     * </pre>
     *
     * <code>LIST = 50;</code>
     */
    LIST(50),
    /**
     * <pre>
     *gateway业务消息
     * </pre>
     *
     * <code>GATEWAY = 60;</code>
     */
    GATEWAY(60),
    /**
     * <pre>
     *当前服务器链接数量超过限制 强制断开链接
     * </pre>
     *
     * <code>CLOSE = -1;</code>
     */
    CLOSE(-1),
    /**
     * <pre>
     *limit限流
     * </pre>
     *
     * <code>LIMIT_QPS_CLOSE = -2;</code>
     */
    LIMIT_QPS_CLOSE(-2),
    /**
     * <pre>
     *当前APP总链接数量超过限制 强制断开链接
     * </pre>
     *
     * <code>APP_CLOSE = -3;</code>
     */
    APP_CLOSE(-3),
    /**
     * <pre>
     *app 链接数量统计
     * </pre>
     *
     * <code>APP_STATICS = -4;</code>
     */
    APP_STATICS(-4),
    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>KEEPALIVE = -99;</code>
     */
    KEEPALIVE(-99),
    /**
     * <pre>
     *拉取消息通知，服务器广播，通知客户端批量拉取消息
     * </pre>
     *
     * <code>PULL = -100;</code>
     */
    PULL(-100),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *登录
     * </pre>
     *
     * <code>LOGIN = 0;</code>
     */
    public static final int LOGIN_VALUE = 0;
    /**
     * <pre>
     *退出
     * </pre>
     *
     * <code>LOGOUT = 1;</code>
     */
    public static final int LOGOUT_VALUE = 1;
    /**
     * <pre>
     *回执
     * </pre>
     *
     * <code>ACK = 2;</code>
     */
    public static final int ACK_VALUE = 2;
    /**
     * <pre>
     *单聊
     * </pre>
     *
     * <code>CHAT = 10;</code>
     */
    public static final int CHAT_VALUE = 10;
    /**
     * <pre>
     *群聊
     * </pre>
     *
     * <code>GROUPCHAT = 11;</code>
     */
    public static final int GROUPCHAT_VALUE = 11;
    /**
     * <pre>
     *推送
     * </pre>
     *
     * <code>PUSH = 12;</code>
     */
    public static final int PUSH_VALUE = 12;
    /**
     * <pre>
     *群管理
     * </pre>
     *
     * <code>GROUPMANAGE = 13;</code>
     */
    public static final int GROUPMANAGE_VALUE = 13;
    /**
     * <pre>
     *群管理 list
     * </pre>
     *
     * <code>GROUPMANAGELIST = 14;</code>
     */
    public static final int GROUPMANAGELIST_VALUE = 14;
    /**
     * <pre>
     *直播间
     * </pre>
     *
     * <code>ROOM = 20;</code>
     */
    public static final int ROOM_VALUE = 20;
    /**
     * <pre>
     *直播间下行消息批量发送
     * </pre>
     *
     * <code>ROOM_BATCH = 21;</code>
     */
    public static final int ROOM_BATCH_VALUE = 21;
    /**
     * <pre>
     *事件       使用功能：用户禁言
     * </pre>
     *
     * <code>EVENT = 30;</code>
     */
    public static final int EVENT_VALUE = 30;
    /**
     * <pre>
     *官方通知
     * </pre>
     *
     * <code>OFFICIAL = 31;</code>
     */
    public static final int OFFICIAL_VALUE = 31;
    /**
     * <pre>
     *系统消息
     * </pre>
     *
     * <code>SYSTEM = 40;</code>
     */
    public static final int SYSTEM_VALUE = 40;
    /**
     * <pre>
     *repeated重复消息，即消息List。List消息需设置本属性，对应 body见MessageList对象，反之，body为普通消息Message对象
     * </pre>
     *
     * <code>LIST = 50;</code>
     */
    public static final int LIST_VALUE = 50;
    /**
     * <pre>
     *gateway业务消息
     * </pre>
     *
     * <code>GATEWAY = 60;</code>
     */
    public static final int GATEWAY_VALUE = 60;
    /**
     * <pre>
     *当前服务器链接数量超过限制 强制断开链接
     * </pre>
     *
     * <code>CLOSE = -1;</code>
     */
    public static final int CLOSE_VALUE = -1;
    /**
     * <pre>
     *limit限流
     * </pre>
     *
     * <code>LIMIT_QPS_CLOSE = -2;</code>
     */
    public static final int LIMIT_QPS_CLOSE_VALUE = -2;
    /**
     * <pre>
     *当前APP总链接数量超过限制 强制断开链接
     * </pre>
     *
     * <code>APP_CLOSE = -3;</code>
     */
    public static final int APP_CLOSE_VALUE = -3;
    /**
     * <pre>
     *app 链接数量统计
     * </pre>
     *
     * <code>APP_STATICS = -4;</code>
     */
    public static final int APP_STATICS_VALUE = -4;
    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>KEEPALIVE = -99;</code>
     */
    public static final int KEEPALIVE_VALUE = -99;
    /**
     * <pre>
     *拉取消息通知，服务器广播，通知客户端批量拉取消息
     * </pre>
     *
     * <code>PULL = -100;</code>
     */
    public static final int PULL_VALUE = -100;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static TypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static TypeEnum forNumber(int value) {
      switch (value) {
        case 0: return LOGIN;
        case 1: return LOGOUT;
        case 2: return ACK;
        case 10: return CHAT;
        case 11: return GROUPCHAT;
        case 12: return PUSH;
        case 13: return GROUPMANAGE;
        case 14: return GROUPMANAGELIST;
        case 20: return ROOM;
        case 21: return ROOM_BATCH;
        case 30: return EVENT;
        case 31: return OFFICIAL;
        case 40: return SYSTEM;
        case 50: return LIST;
        case 60: return GATEWAY;
        case -1: return CLOSE;
        case -2: return LIMIT_QPS_CLOSE;
        case -3: return APP_CLOSE;
        case -4: return APP_STATICS;
        case -99: return KEEPALIVE;
        case -100: return PULL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TypeEnum>() {
            public TypeEnum findValueByNumber(int number) {
              return TypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(0);
    }

    private static final TypeEnum[] VALUES = values();

    public static TypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TypeEnum)
  }

  /**
   * <pre>
   *登录方式
   * </pre>
   *
   * Protobuf enum {@code LoginTypeEnum}
   */
  public enum LoginTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *手动
     * </pre>
     *
     * <code>MANUAL = 0;</code>
     */
    MANUAL(0),
    /**
     * <pre>
     *自动
     * </pre>
     *
     * <code>AUTO = 1;</code>
     */
    AUTO(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *手动
     * </pre>
     *
     * <code>MANUAL = 0;</code>
     */
    public static final int MANUAL_VALUE = 0;
    /**
     * <pre>
     *自动
     * </pre>
     *
     * <code>AUTO = 1;</code>
     */
    public static final int AUTO_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static LoginTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static LoginTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return MANUAL;
        case 1: return AUTO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoginTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LoginTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoginTypeEnum>() {
            public LoginTypeEnum findValueByNumber(int number) {
              return LoginTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(1);
    }

    private static final LoginTypeEnum[] VALUES = values();

    public static LoginTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LoginTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LoginTypeEnum)
  }

  /**
   * <pre>
   *设备类型
   * </pre>
   *
   * Protobuf enum {@code DeviceTypeEnum}
   */
  public enum DeviceTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *PC客户端
     * </pre>
     *
     * <code>PC = 0;</code>
     */
    PC(0),
    /**
     * <pre>
     *WEB端
     * </pre>
     *
     * <code>WEB = 1;</code>
     */
    WEB(1),
    /**
     * <pre>
     *Android
     * </pre>
     *
     * <code>ANDROID = 2;</code>
     */
    ANDROID(2),
    /**
     * <pre>
     *iOS
     * </pre>
     *
     * <code>IOS = 3;</code>
     */
    IOS(3),
    /**
     * <pre>
     *iPAD
     * </pre>
     *
     * <code>IPAD = 4;</code>
     */
    IPAD(4),
    /**
     * <pre>
     *WinPhone
     * </pre>
     *
     * <code>WINPHONE = 5;</code>
     */
    WINPHONE(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *PC客户端
     * </pre>
     *
     * <code>PC = 0;</code>
     */
    public static final int PC_VALUE = 0;
    /**
     * <pre>
     *WEB端
     * </pre>
     *
     * <code>WEB = 1;</code>
     */
    public static final int WEB_VALUE = 1;
    /**
     * <pre>
     *Android
     * </pre>
     *
     * <code>ANDROID = 2;</code>
     */
    public static final int ANDROID_VALUE = 2;
    /**
     * <pre>
     *iOS
     * </pre>
     *
     * <code>IOS = 3;</code>
     */
    public static final int IOS_VALUE = 3;
    /**
     * <pre>
     *iPAD
     * </pre>
     *
     * <code>IPAD = 4;</code>
     */
    public static final int IPAD_VALUE = 4;
    /**
     * <pre>
     *WinPhone
     * </pre>
     *
     * <code>WINPHONE = 5;</code>
     */
    public static final int WINPHONE_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static DeviceTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static DeviceTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return PC;
        case 1: return WEB;
        case 2: return ANDROID;
        case 3: return IOS;
        case 4: return IPAD;
        case 5: return WINPHONE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeviceTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceTypeEnum>() {
            public DeviceTypeEnum findValueByNumber(int number) {
              return DeviceTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(2);
    }

    private static final DeviceTypeEnum[] VALUES = values();

    public static DeviceTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeviceTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DeviceTypeEnum)
  }

  /**
   * <pre>
   *连接类型
   * </pre>
   *
   * Protobuf enum {@code ChannelTypeEnum}
   */
  public enum ChannelTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *直播间
     * </pre>
     *
     * <code>LIVE = 0;</code>
     */
    LIVE(0),
    /**
     * <pre>
     *gateway
     * </pre>
     *
     * <code>API_GATEWAY = 1;</code>
     */
    API_GATEWAY(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *直播间
     * </pre>
     *
     * <code>LIVE = 0;</code>
     */
    public static final int LIVE_VALUE = 0;
    /**
     * <pre>
     *gateway
     * </pre>
     *
     * <code>API_GATEWAY = 1;</code>
     */
    public static final int API_GATEWAY_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ChannelTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static ChannelTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return LIVE;
        case 1: return API_GATEWAY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ChannelTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ChannelTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ChannelTypeEnum>() {
            public ChannelTypeEnum findValueByNumber(int number) {
              return ChannelTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(3);
    }

    private static final ChannelTypeEnum[] VALUES = values();

    public static ChannelTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ChannelTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ChannelTypeEnum)
  }

  /**
   * <pre>
   *gateway请求类型
   * </pre>
   *
   * Protobuf enum {@code RequestEnum}
   */
  public enum RequestEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *Post请求
     * </pre>
     *
     * <code>POST = 0;</code>
     */
    POST(0),
    /**
     * <pre>
     *Get请求
     * </pre>
     *
     * <code>GET = 1;</code>
     */
    GET(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *Post请求
     * </pre>
     *
     * <code>POST = 0;</code>
     */
    public static final int POST_VALUE = 0;
    /**
     * <pre>
     *Get请求
     * </pre>
     *
     * <code>GET = 1;</code>
     */
    public static final int GET_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RequestEnum valueOf(int value) {
      return forNumber(value);
    }

    public static RequestEnum forNumber(int value) {
      switch (value) {
        case 0: return POST;
        case 1: return GET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestEnum>() {
            public RequestEnum findValueByNumber(int number) {
              return RequestEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(4);
    }

    private static final RequestEnum[] VALUES = values();

    public static RequestEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RequestEnum)
  }

  /**
   * <pre>
   *消息二级分类SubType
   * </pre>
   *
   * Protobuf enum {@code SubTypeEnum}
   */
  public enum SubTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>TEXT = 0;</code>
     */
    TEXT(0),
    /**
     * <pre>
     *图片
     * </pre>
     *
     * <code>IMAGE = 1;</code>
     */
    IMAGE(1),
    /**
     * <pre>
     *语音
     * </pre>
     *
     * <code>AUDIO = 2;</code>
     */
    AUDIO(2),
    /**
     * <pre>
     *视频
     * </pre>
     *
     * <code>VEDIO = 3;</code>
     */
    VEDIO(3),
    /**
     * <pre>
     *群聊事件消息
     * </pre>
     *
     * <code>GROUP_CREATE = 10;</code>
     */
    GROUP_CREATE(10),
    /**
     * <pre>
     *加入群组
     * </pre>
     *
     * <code>GROUP_JOIN = 11;</code>
     */
    GROUP_JOIN(11),
    /**
     * <pre>
     *成员退出
     * </pre>
     *
     * <code>GROUP_EXIT = 12;</code>
     */
    GROUP_EXIT(12),
    /**
     * <pre>
     *获取群组信息
     * </pre>
     *
     * <code>GROUP_INFO = 13;</code>
     */
    GROUP_INFO(13),
    /**
     * <pre>
     *修改群组信息
     * </pre>
     *
     * <code>GROUP_INFO_UPDATE = 14;</code>
     */
    GROUP_INFO_UPDATE(14),
    /**
     * <pre>
     *修改群管理员
     * </pre>
     *
     * <code>GROUP_ADMIN = 15;</code>
     */
    GROUP_ADMIN(15),
    /**
     * <pre>
     *获取群组中用户列表
     * </pre>
     *
     * <code>GROUP_USERS = 16;</code>
     */
    GROUP_USERS(16),
    /**
     * <pre>
     *获取用户的群列表
     * </pre>
     *
     * <code>GROUP_USERGROUPS = 17;</code>
     */
    GROUP_USERGROUPS(17),
    /**
     * <pre>
     *解散
     * </pre>
     *
     * <code>GROUP_DISSOLVE = 20;</code>
     */
    GROUP_DISSOLVE(20),
    /**
     * <pre>
     *单聊相关
     * </pre>
     *
     * <code>PULL_HISTORY_MSG = 21;</code>
     */
    PULL_HISTORY_MSG(21),
    /**
     * <pre>
     *事件消息
     * </pre>
     *
     * <code>EVENT_GROUPINFO = 30;</code>
     */
    EVENT_GROUPINFO(30),
    /**
     * <pre>
     *群成员变更
     * </pre>
     *
     * <code>EVENT_GROUPMEM = 31;</code>
     */
    EVENT_GROUPMEM(31),
    /**
     * <pre>
     *群删除操作
     * </pre>
     *
     * <code>EVENT_GROUPDISMISS = 32;</code>
     */
    EVENT_GROUPDISMISS(32),
    /**
     * <pre>
     *撤回了一条消息
     * </pre>
     *
     * <code>EVENT_CANCLE_MSG = 33;</code>
     */
    EVENT_CANCLE_MSG(33),
    /**
     * <pre>
     *更新pushtoken
     * </pre>
     *
     * <code>EVENT_UPDATE_PUSHTOKEN = 34;</code>
     */
    EVENT_UPDATE_PUSHTOKEN(34),
    /**
     * <pre>
     *即时事件 不存储
     * </pre>
     *
     * <code>EVENTTYPE_CHAT = 40;</code>
     */
    EVENTTYPE_CHAT(40),
    /**
     * <pre>
     *群聊消息已读
     * </pre>
     *
     * <code>EVENTTYPE_GROUPCHAT = 41;</code>
     */
    EVENTTYPE_GROUPCHAT(41),
    /**
     * <pre>
     *会话置顶事件
     * </pre>
     *
     * <code>EVENTTYPE_TOPSESSION = 42;</code>
     */
    EVENTTYPE_TOPSESSION(42),
    /**
     * <pre>
     *直播间禁言相关事件消息
     * </pre>
     *
     * <code>EVENT_ROOM_GAG_ADD_MSG = 35;</code>
     */
    EVENT_ROOM_GAG_ADD_MSG(35),
    /**
     * <pre>
     *直播间解禁/全员解禁消息
     * </pre>
     *
     * <code>EVENT_ROOM_GAG_DEL_MSG = 36;</code>
     */
    EVENT_ROOM_GAG_DEL_MSG(36),
    /**
     * <pre>
     *查询直播间禁言列表
     * </pre>
     *
     * <code>EVENT_ROOM_GET_GAG_LIST = 37;</code>
     */
    EVENT_ROOM_GET_GAG_LIST(37),
    /**
     * <pre>
     *查询直播间单个用户/全员的禁言状态
     * </pre>
     *
     * <code>EVENT_ROOM_GET_GAG_STATUS = 38;</code>
     */
    EVENT_ROOM_GET_GAG_STATUS(38),
    /**
     * <pre>
     *直播间拉黑/解除拉黑通知
     * </pre>
     *
     * <code>EVENT_ROOM_BLACK_NOTIFY = 39;</code>
     */
    EVENT_ROOM_BLACK_NOTIFY(39),
    /**
     * <pre>
     *处理messageList 的 subtype
     * </pre>
     *
     * <code>CHAT_MESSAGELIST_VALUE = 51;</code>
     */
    CHAT_MESSAGELIST_VALUE(51),
    /**
     * <pre>
     *处理room的messagelist消息
     * </pre>
     *
     * <code>ROOM_MESSAGELIST_VALUE = 52;</code>
     */
    ROOM_MESSAGELIST_VALUE(52),
    /**
     * <pre>
     *直播间消息
     * </pre>
     *
     * <code>ROOM_CREATE = 60;</code>
     */
    ROOM_CREATE(60),
    /**
     * <pre>
     *加入
     * </pre>
     *
     * <code>ROOM_LOGIN = 61;</code>
     */
    ROOM_LOGIN(61),
    /**
     * <pre>
     *退出
     * </pre>
     *
     * <code>ROOM_LOGOUT = 62;</code>
     */
    ROOM_LOGOUT(62),
    /**
     * <pre>
     *移出成员/踢人
     * </pre>
     *
     * <code>ROOM_KICK = 63;</code>
     */
    ROOM_KICK(63),
    /**
     * <pre>
     *禁言
     * </pre>
     *
     * <code>ROOM_GAG = 64;</code>
     */
    ROOM_GAG(64),
    /**
     * <pre>
     *系统消息
     * </pre>
     *
     * <code>ROOM_SYSTEM = 65;</code>
     */
    ROOM_SYSTEM(65),
    /**
     * <pre>
     *直播间通知
     * </pre>
     *
     * <code>ROOM_NOTICE = 66;</code>
     */
    ROOM_NOTICE(66),
    /**
     * <pre>
     *&#64;TA
     * </pre>
     *
     * <code>ROOM_AT = 67;</code>
     */
    ROOM_AT(67),
    /**
     * <pre>
     *黑名单
     * </pre>
     *
     * <code>ROOM_BLACK = 68;</code>
     */
    ROOM_BLACK(68),
    /**
     * <pre>
     *直播间结束
     * </pre>
     *
     * <code>ROOM_CLOSE = 69;</code>
     */
    ROOM_CLOSE(69),
    /**
     * <pre>
     *消息拉取
     * </pre>
     *
     * <code>ROOM_PULL = 70;</code>
     */
    ROOM_PULL(70),
    /**
     * <pre>
     *服务端清理
     * </pre>
     *
     * <code>ROOM_SERVER_REMOVE = 71;</code>
     */
    ROOM_SERVER_REMOVE(71),
    /**
     * <pre>
     *body自定义JSON  级别一级，必达消息
     * </pre>
     *
     * <code>ROOM_DIY = 80;</code>
     */
    ROOM_DIY(80),
    /**
     * <pre>
     *PUSH推送消息
     * </pre>
     *
     * <code>PUSH_OFFICIAL = 90;</code>
     */
    PUSH_OFFICIAL(90),
    /**
     * <pre>
     *运营活动
     * </pre>
     *
     * <code>PUSH_ACTIVITY = 91;</code>
     */
    PUSH_ACTIVITY(91),
    /**
     * <pre>
     *SYSTEM消息
     * </pre>
     *
     * <code>PULL_LOG = 100;</code>
     */
    PULL_LOG(100),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *文本
     * </pre>
     *
     * <code>TEXT = 0;</code>
     */
    public static final int TEXT_VALUE = 0;
    /**
     * <pre>
     *图片
     * </pre>
     *
     * <code>IMAGE = 1;</code>
     */
    public static final int IMAGE_VALUE = 1;
    /**
     * <pre>
     *语音
     * </pre>
     *
     * <code>AUDIO = 2;</code>
     */
    public static final int AUDIO_VALUE = 2;
    /**
     * <pre>
     *视频
     * </pre>
     *
     * <code>VEDIO = 3;</code>
     */
    public static final int VEDIO_VALUE = 3;
    /**
     * <pre>
     *群聊事件消息
     * </pre>
     *
     * <code>GROUP_CREATE = 10;</code>
     */
    public static final int GROUP_CREATE_VALUE = 10;
    /**
     * <pre>
     *加入群组
     * </pre>
     *
     * <code>GROUP_JOIN = 11;</code>
     */
    public static final int GROUP_JOIN_VALUE = 11;
    /**
     * <pre>
     *成员退出
     * </pre>
     *
     * <code>GROUP_EXIT = 12;</code>
     */
    public static final int GROUP_EXIT_VALUE = 12;
    /**
     * <pre>
     *获取群组信息
     * </pre>
     *
     * <code>GROUP_INFO = 13;</code>
     */
    public static final int GROUP_INFO_VALUE = 13;
    /**
     * <pre>
     *修改群组信息
     * </pre>
     *
     * <code>GROUP_INFO_UPDATE = 14;</code>
     */
    public static final int GROUP_INFO_UPDATE_VALUE = 14;
    /**
     * <pre>
     *修改群管理员
     * </pre>
     *
     * <code>GROUP_ADMIN = 15;</code>
     */
    public static final int GROUP_ADMIN_VALUE = 15;
    /**
     * <pre>
     *获取群组中用户列表
     * </pre>
     *
     * <code>GROUP_USERS = 16;</code>
     */
    public static final int GROUP_USERS_VALUE = 16;
    /**
     * <pre>
     *获取用户的群列表
     * </pre>
     *
     * <code>GROUP_USERGROUPS = 17;</code>
     */
    public static final int GROUP_USERGROUPS_VALUE = 17;
    /**
     * <pre>
     *解散
     * </pre>
     *
     * <code>GROUP_DISSOLVE = 20;</code>
     */
    public static final int GROUP_DISSOLVE_VALUE = 20;
    /**
     * <pre>
     *单聊相关
     * </pre>
     *
     * <code>PULL_HISTORY_MSG = 21;</code>
     */
    public static final int PULL_HISTORY_MSG_VALUE = 21;
    /**
     * <pre>
     *事件消息
     * </pre>
     *
     * <code>EVENT_GROUPINFO = 30;</code>
     */
    public static final int EVENT_GROUPINFO_VALUE = 30;
    /**
     * <pre>
     *群成员变更
     * </pre>
     *
     * <code>EVENT_GROUPMEM = 31;</code>
     */
    public static final int EVENT_GROUPMEM_VALUE = 31;
    /**
     * <pre>
     *群删除操作
     * </pre>
     *
     * <code>EVENT_GROUPDISMISS = 32;</code>
     */
    public static final int EVENT_GROUPDISMISS_VALUE = 32;
    /**
     * <pre>
     *撤回了一条消息
     * </pre>
     *
     * <code>EVENT_CANCLE_MSG = 33;</code>
     */
    public static final int EVENT_CANCLE_MSG_VALUE = 33;
    /**
     * <pre>
     *更新pushtoken
     * </pre>
     *
     * <code>EVENT_UPDATE_PUSHTOKEN = 34;</code>
     */
    public static final int EVENT_UPDATE_PUSHTOKEN_VALUE = 34;
    /**
     * <pre>
     *即时事件 不存储
     * </pre>
     *
     * <code>EVENTTYPE_CHAT = 40;</code>
     */
    public static final int EVENTTYPE_CHAT_VALUE = 40;
    /**
     * <pre>
     *群聊消息已读
     * </pre>
     *
     * <code>EVENTTYPE_GROUPCHAT = 41;</code>
     */
    public static final int EVENTTYPE_GROUPCHAT_VALUE = 41;
    /**
     * <pre>
     *会话置顶事件
     * </pre>
     *
     * <code>EVENTTYPE_TOPSESSION = 42;</code>
     */
    public static final int EVENTTYPE_TOPSESSION_VALUE = 42;
    /**
     * <pre>
     *直播间禁言相关事件消息
     * </pre>
     *
     * <code>EVENT_ROOM_GAG_ADD_MSG = 35;</code>
     */
    public static final int EVENT_ROOM_GAG_ADD_MSG_VALUE = 35;
    /**
     * <pre>
     *直播间解禁/全员解禁消息
     * </pre>
     *
     * <code>EVENT_ROOM_GAG_DEL_MSG = 36;</code>
     */
    public static final int EVENT_ROOM_GAG_DEL_MSG_VALUE = 36;
    /**
     * <pre>
     *查询直播间禁言列表
     * </pre>
     *
     * <code>EVENT_ROOM_GET_GAG_LIST = 37;</code>
     */
    public static final int EVENT_ROOM_GET_GAG_LIST_VALUE = 37;
    /**
     * <pre>
     *查询直播间单个用户/全员的禁言状态
     * </pre>
     *
     * <code>EVENT_ROOM_GET_GAG_STATUS = 38;</code>
     */
    public static final int EVENT_ROOM_GET_GAG_STATUS_VALUE = 38;
    /**
     * <pre>
     *直播间拉黑/解除拉黑通知
     * </pre>
     *
     * <code>EVENT_ROOM_BLACK_NOTIFY = 39;</code>
     */
    public static final int EVENT_ROOM_BLACK_NOTIFY_VALUE = 39;
    /**
     * <pre>
     *处理messageList 的 subtype
     * </pre>
     *
     * <code>CHAT_MESSAGELIST_VALUE = 51;</code>
     */
    public static final int CHAT_MESSAGELIST_VALUE_VALUE = 51;
    /**
     * <pre>
     *处理room的messagelist消息
     * </pre>
     *
     * <code>ROOM_MESSAGELIST_VALUE = 52;</code>
     */
    public static final int ROOM_MESSAGELIST_VALUE_VALUE = 52;
    /**
     * <pre>
     *直播间消息
     * </pre>
     *
     * <code>ROOM_CREATE = 60;</code>
     */
    public static final int ROOM_CREATE_VALUE = 60;
    /**
     * <pre>
     *加入
     * </pre>
     *
     * <code>ROOM_LOGIN = 61;</code>
     */
    public static final int ROOM_LOGIN_VALUE = 61;
    /**
     * <pre>
     *退出
     * </pre>
     *
     * <code>ROOM_LOGOUT = 62;</code>
     */
    public static final int ROOM_LOGOUT_VALUE = 62;
    /**
     * <pre>
     *移出成员/踢人
     * </pre>
     *
     * <code>ROOM_KICK = 63;</code>
     */
    public static final int ROOM_KICK_VALUE = 63;
    /**
     * <pre>
     *禁言
     * </pre>
     *
     * <code>ROOM_GAG = 64;</code>
     */
    public static final int ROOM_GAG_VALUE = 64;
    /**
     * <pre>
     *系统消息
     * </pre>
     *
     * <code>ROOM_SYSTEM = 65;</code>
     */
    public static final int ROOM_SYSTEM_VALUE = 65;
    /**
     * <pre>
     *直播间通知
     * </pre>
     *
     * <code>ROOM_NOTICE = 66;</code>
     */
    public static final int ROOM_NOTICE_VALUE = 66;
    /**
     * <pre>
     *&#64;TA
     * </pre>
     *
     * <code>ROOM_AT = 67;</code>
     */
    public static final int ROOM_AT_VALUE = 67;
    /**
     * <pre>
     *黑名单
     * </pre>
     *
     * <code>ROOM_BLACK = 68;</code>
     */
    public static final int ROOM_BLACK_VALUE = 68;
    /**
     * <pre>
     *直播间结束
     * </pre>
     *
     * <code>ROOM_CLOSE = 69;</code>
     */
    public static final int ROOM_CLOSE_VALUE = 69;
    /**
     * <pre>
     *消息拉取
     * </pre>
     *
     * <code>ROOM_PULL = 70;</code>
     */
    public static final int ROOM_PULL_VALUE = 70;
    /**
     * <pre>
     *服务端清理
     * </pre>
     *
     * <code>ROOM_SERVER_REMOVE = 71;</code>
     */
    public static final int ROOM_SERVER_REMOVE_VALUE = 71;
    /**
     * <pre>
     *body自定义JSON  级别一级，必达消息
     * </pre>
     *
     * <code>ROOM_DIY = 80;</code>
     */
    public static final int ROOM_DIY_VALUE = 80;
    /**
     * <pre>
     *PUSH推送消息
     * </pre>
     *
     * <code>PUSH_OFFICIAL = 90;</code>
     */
    public static final int PUSH_OFFICIAL_VALUE = 90;
    /**
     * <pre>
     *运营活动
     * </pre>
     *
     * <code>PUSH_ACTIVITY = 91;</code>
     */
    public static final int PUSH_ACTIVITY_VALUE = 91;
    /**
     * <pre>
     *SYSTEM消息
     * </pre>
     *
     * <code>PULL_LOG = 100;</code>
     */
    public static final int PULL_LOG_VALUE = 100;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static SubTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static SubTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return TEXT;
        case 1: return IMAGE;
        case 2: return AUDIO;
        case 3: return VEDIO;
        case 10: return GROUP_CREATE;
        case 11: return GROUP_JOIN;
        case 12: return GROUP_EXIT;
        case 13: return GROUP_INFO;
        case 14: return GROUP_INFO_UPDATE;
        case 15: return GROUP_ADMIN;
        case 16: return GROUP_USERS;
        case 17: return GROUP_USERGROUPS;
        case 20: return GROUP_DISSOLVE;
        case 21: return PULL_HISTORY_MSG;
        case 30: return EVENT_GROUPINFO;
        case 31: return EVENT_GROUPMEM;
        case 32: return EVENT_GROUPDISMISS;
        case 33: return EVENT_CANCLE_MSG;
        case 34: return EVENT_UPDATE_PUSHTOKEN;
        case 40: return EVENTTYPE_CHAT;
        case 41: return EVENTTYPE_GROUPCHAT;
        case 42: return EVENTTYPE_TOPSESSION;
        case 35: return EVENT_ROOM_GAG_ADD_MSG;
        case 36: return EVENT_ROOM_GAG_DEL_MSG;
        case 37: return EVENT_ROOM_GET_GAG_LIST;
        case 38: return EVENT_ROOM_GET_GAG_STATUS;
        case 39: return EVENT_ROOM_BLACK_NOTIFY;
        case 51: return CHAT_MESSAGELIST_VALUE;
        case 52: return ROOM_MESSAGELIST_VALUE;
        case 60: return ROOM_CREATE;
        case 61: return ROOM_LOGIN;
        case 62: return ROOM_LOGOUT;
        case 63: return ROOM_KICK;
        case 64: return ROOM_GAG;
        case 65: return ROOM_SYSTEM;
        case 66: return ROOM_NOTICE;
        case 67: return ROOM_AT;
        case 68: return ROOM_BLACK;
        case 69: return ROOM_CLOSE;
        case 70: return ROOM_PULL;
        case 71: return ROOM_SERVER_REMOVE;
        case 80: return ROOM_DIY;
        case 90: return PUSH_OFFICIAL;
        case 91: return PUSH_ACTIVITY;
        case 100: return PULL_LOG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SubTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SubTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SubTypeEnum>() {
            public SubTypeEnum findValueByNumber(int number) {
              return SubTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(5);
    }

    private static final SubTypeEnum[] VALUES = values();

    public static SubTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SubTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SubTypeEnum)
  }

  /**
   * <pre>
   *回执类型
   * </pre>
   *
   * Protobuf enum {@code AckTypeEnum}
   */
  public enum AckTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *连接
     * </pre>
     *
     * <code>CONNECT_ACK = 0;</code>
     */
    CONNECT_ACK(0),
    /**
     * <pre>
     *登录
     * </pre>
     *
     * <code>LOGIN_ACK = 1;</code>
     */
    LOGIN_ACK(1),
    /**
     * <pre>
     *退出
     * </pre>
     *
     * <code>LOGOUT_ACK = 2;</code>
     */
    LOGOUT_ACK(2),
    /**
     * <pre>
     *消息上行成功
     * </pre>
     *
     * <code>SEND_MSG_ACK = 3;</code>
     */
    SEND_MSG_ACK(3),
    /**
     * <pre>
     *消息下行成功
     * </pre>
     *
     * <code>INCEPT_MSG_ACK = 4;</code>
     */
    INCEPT_MSG_ACK(4),
    /**
     * <pre>
     *直播间创建
     * </pre>
     *
     * <code>ROOM_CREATE_ACK = 5;</code>
     */
    ROOM_CREATE_ACK(5),
    /**
     * <pre>
     *直播间登录
     * </pre>
     *
     * <code>ROOM_LOGIN_ACK = 6;</code>
     */
    ROOM_LOGIN_ACK(6),
    /**
     * <pre>
     *直播间退出
     * </pre>
     *
     * <code>ROOM_LOGOUT_ACK = 7;</code>
     */
    ROOM_LOGOUT_ACK(7),
    /**
     * <pre>
     *直播间踢人
     * </pre>
     *
     * <code>ROOM_KICK_ACK = 8;</code>
     */
    ROOM_KICK_ACK(8),
    /**
     * <pre>
     *直播间禁言
     * </pre>
     *
     * <code>ROOM_GAG_ACK = 9;</code>
     */
    ROOM_GAG_ACK(9),
    /**
     * <pre>
     *阅后即焚
     * </pre>
     *
     * <code>BURNED_ACK = 10;</code>
     */
    BURNED_ACK(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *连接
     * </pre>
     *
     * <code>CONNECT_ACK = 0;</code>
     */
    public static final int CONNECT_ACK_VALUE = 0;
    /**
     * <pre>
     *登录
     * </pre>
     *
     * <code>LOGIN_ACK = 1;</code>
     */
    public static final int LOGIN_ACK_VALUE = 1;
    /**
     * <pre>
     *退出
     * </pre>
     *
     * <code>LOGOUT_ACK = 2;</code>
     */
    public static final int LOGOUT_ACK_VALUE = 2;
    /**
     * <pre>
     *消息上行成功
     * </pre>
     *
     * <code>SEND_MSG_ACK = 3;</code>
     */
    public static final int SEND_MSG_ACK_VALUE = 3;
    /**
     * <pre>
     *消息下行成功
     * </pre>
     *
     * <code>INCEPT_MSG_ACK = 4;</code>
     */
    public static final int INCEPT_MSG_ACK_VALUE = 4;
    /**
     * <pre>
     *直播间创建
     * </pre>
     *
     * <code>ROOM_CREATE_ACK = 5;</code>
     */
    public static final int ROOM_CREATE_ACK_VALUE = 5;
    /**
     * <pre>
     *直播间登录
     * </pre>
     *
     * <code>ROOM_LOGIN_ACK = 6;</code>
     */
    public static final int ROOM_LOGIN_ACK_VALUE = 6;
    /**
     * <pre>
     *直播间退出
     * </pre>
     *
     * <code>ROOM_LOGOUT_ACK = 7;</code>
     */
    public static final int ROOM_LOGOUT_ACK_VALUE = 7;
    /**
     * <pre>
     *直播间踢人
     * </pre>
     *
     * <code>ROOM_KICK_ACK = 8;</code>
     */
    public static final int ROOM_KICK_ACK_VALUE = 8;
    /**
     * <pre>
     *直播间禁言
     * </pre>
     *
     * <code>ROOM_GAG_ACK = 9;</code>
     */
    public static final int ROOM_GAG_ACK_VALUE = 9;
    /**
     * <pre>
     *阅后即焚
     * </pre>
     *
     * <code>BURNED_ACK = 10;</code>
     */
    public static final int BURNED_ACK_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static AckTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static AckTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return CONNECT_ACK;
        case 1: return LOGIN_ACK;
        case 2: return LOGOUT_ACK;
        case 3: return SEND_MSG_ACK;
        case 4: return INCEPT_MSG_ACK;
        case 5: return ROOM_CREATE_ACK;
        case 6: return ROOM_LOGIN_ACK;
        case 7: return ROOM_LOGOUT_ACK;
        case 8: return ROOM_KICK_ACK;
        case 9: return ROOM_GAG_ACK;
        case 10: return BURNED_ACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AckTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AckTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AckTypeEnum>() {
            public AckTypeEnum findValueByNumber(int number) {
              return AckTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(6);
    }

    private static final AckTypeEnum[] VALUES = values();

    public static AckTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AckTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AckTypeEnum)
  }

  /**
   * <pre>
   *开关类型
   * </pre>
   *
   * Protobuf enum {@code SwitchFlagEnum}
   */
  public enum SwitchFlagEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *gateway长连接是否可用
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>GATEWAY_ENABLE = 1;</code>
     */
    GATEWAY_ENABLE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *gateway长连接是否可用
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>GATEWAY_ENABLE = 1;</code>
     */
    public static final int GATEWAY_ENABLE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static SwitchFlagEnum valueOf(int value) {
      return forNumber(value);
    }

    public static SwitchFlagEnum forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return GATEWAY_ENABLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SwitchFlagEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SwitchFlagEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SwitchFlagEnum>() {
            public SwitchFlagEnum findValueByNumber(int number) {
              return SwitchFlagEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(7);
    }

    private static final SwitchFlagEnum[] VALUES = values();

    public static SwitchFlagEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SwitchFlagEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SwitchFlagEnum)
  }

  /**
   * <pre>
   *回执状态码
   * </pre>
   *
   * Protobuf enum {@code AckCodeEnum}
   */
  public enum AckCodeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *成功
     * </pre>
     *
     * <code>SUCCESS = 0;</code>
     */
    SUCCESS(0),
    /**
     * <pre>
     *Token过期
     * </pre>
     *
     * <code>TOKEN_EXPIRE = 1;</code>
     */
    TOKEN_EXPIRE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *成功
     * </pre>
     *
     * <code>SUCCESS = 0;</code>
     */
    public static final int SUCCESS_VALUE = 0;
    /**
     * <pre>
     *Token过期
     * </pre>
     *
     * <code>TOKEN_EXPIRE = 1;</code>
     */
    public static final int TOKEN_EXPIRE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static AckCodeEnum valueOf(int value) {
      return forNumber(value);
    }

    public static AckCodeEnum forNumber(int value) {
      switch (value) {
        case 0: return SUCCESS;
        case 1: return TOKEN_EXPIRE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AckCodeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AckCodeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AckCodeEnum>() {
            public AckCodeEnum findValueByNumber(int number) {
              return AckCodeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageBuf.getDescriptor().getEnumTypes().get(8);
    }

    private static final AckCodeEnum[] VALUES = values();

    public static AckCodeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AckCodeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AckCodeEnum)
  }

  public interface GroupMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GroupMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string gname = 1;</code>
     */
    String getGname();
    /**
     * <code>optional string gname = 1;</code>
     */
    com.google.protobuf.ByteString
        getGnameBytes();

    /**
     * <code>optional string uid = 2;</code>
     */
    String getUid();
    /**
     * <code>optional string uid = 2;</code>
     */
    com.google.protobuf.ByteString
        getUidBytes();

    /**
     * <code>optional string nickname = 3;</code>
     */
    String getNickname();
    /**
     * <code>optional string nickname = 3;</code>
     */
    com.google.protobuf.ByteString
        getNicknameBytes();

    /**
     * <code>optional int32 role = 4;</code>
     */
    int getRole();

    /**
     * <code>optional string gid = 5;</code>
     */
    String getGid();
    /**
     * <code>optional string gid = 5;</code>
     */
    com.google.protobuf.ByteString
        getGidBytes();

    /**
     * <code>optional string admin = 6;</code>
     */
    String getAdmin();
    /**
     * <code>optional string admin = 6;</code>
     */
    com.google.protobuf.ByteString
        getAdminBytes();

    /**
     * <code>optional string topic = 7;</code>
     */
    String getTopic();
    /**
     * <code>optional string topic = 7;</code>
     */
    com.google.protobuf.ByteString
        getTopicBytes();
  }
  /**
   * Protobuf type {@code GroupMessage}
   */
  public  static final class GroupMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GroupMessage)
      GroupMessageOrBuilder {
    // Use GroupMessage.newBuilder() to construct.
    private GroupMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GroupMessage() {
      gname_ = "";
      uid_ = "";
      nickname_ = "";
      role_ = 0;
      gid_ = "";
      admin_ = "";
      topic_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GroupMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              gname_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              uid_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              nickname_ = s;
              break;
            }
            case 32: {

              role_ = input.readInt32();
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              gid_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              admin_ = s;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              topic_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_GroupMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_GroupMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GroupMessage.class, Builder.class);
    }

    public static final int GNAME_FIELD_NUMBER = 1;
    private volatile Object gname_;
    /**
     * <code>optional string gname = 1;</code>
     */
    public String getGname() {
      Object ref = gname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        gname_ = s;
        return s;
      }
    }
    /**
     * <code>optional string gname = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGnameBytes() {
      Object ref = gname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        gname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UID_FIELD_NUMBER = 2;
    private volatile Object uid_;
    /**
     * <code>optional string uid = 2;</code>
     */
    public String getUid() {
      Object ref = uid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uid_ = s;
        return s;
      }
    }
    /**
     * <code>optional string uid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUidBytes() {
      Object ref = uid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NICKNAME_FIELD_NUMBER = 3;
    private volatile Object nickname_;
    /**
     * <code>optional string nickname = 3;</code>
     */
    public String getNickname() {
      Object ref = nickname_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        nickname_ = s;
        return s;
      }
    }
    /**
     * <code>optional string nickname = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNicknameBytes() {
      Object ref = nickname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        nickname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROLE_FIELD_NUMBER = 4;
    private int role_;
    /**
     * <code>optional int32 role = 4;</code>
     */
    public int getRole() {
      return role_;
    }

    public static final int GID_FIELD_NUMBER = 5;
    private volatile Object gid_;
    /**
     * <code>optional string gid = 5;</code>
     */
    public String getGid() {
      Object ref = gid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        gid_ = s;
        return s;
      }
    }
    /**
     * <code>optional string gid = 5;</code>
     */
    public com.google.protobuf.ByteString
        getGidBytes() {
      Object ref = gid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        gid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADMIN_FIELD_NUMBER = 6;
    private volatile Object admin_;
    /**
     * <code>optional string admin = 6;</code>
     */
    public String getAdmin() {
      Object ref = admin_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        admin_ = s;
        return s;
      }
    }
    /**
     * <code>optional string admin = 6;</code>
     */
    public com.google.protobuf.ByteString
        getAdminBytes() {
      Object ref = admin_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        admin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOPIC_FIELD_NUMBER = 7;
    private volatile Object topic_;
    /**
     * <code>optional string topic = 7;</code>
     */
    public String getTopic() {
      Object ref = topic_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        topic_ = s;
        return s;
      }
    }
    /**
     * <code>optional string topic = 7;</code>
     */
    public com.google.protobuf.ByteString
        getTopicBytes() {
      Object ref = topic_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getGnameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, gname_);
      }
      if (!getUidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uid_);
      }
      if (!getNicknameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, nickname_);
      }
      if (role_ != 0) {
        output.writeInt32(4, role_);
      }
      if (!getGidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, gid_);
      }
      if (!getAdminBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, admin_);
      }
      if (!getTopicBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, topic_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getGnameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, gname_);
      }
      if (!getUidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uid_);
      }
      if (!getNicknameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, nickname_);
      }
      if (role_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, role_);
      }
      if (!getGidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, gid_);
      }
      if (!getAdminBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, admin_);
      }
      if (!getTopicBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, topic_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GroupMessage)) {
        return super.equals(obj);
      }
      GroupMessage other = (GroupMessage) obj;

      boolean result = true;
      result = result && getGname()
          .equals(other.getGname());
      result = result && getUid()
          .equals(other.getUid());
      result = result && getNickname()
          .equals(other.getNickname());
      result = result && (getRole()
          == other.getRole());
      result = result && getGid()
          .equals(other.getGid());
      result = result && getAdmin()
          .equals(other.getAdmin());
      result = result && getTopic()
          .equals(other.getTopic());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + GNAME_FIELD_NUMBER;
      hash = (53 * hash) + getGname().hashCode();
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + getUid().hashCode();
      hash = (37 * hash) + NICKNAME_FIELD_NUMBER;
      hash = (53 * hash) + getNickname().hashCode();
      hash = (37 * hash) + ROLE_FIELD_NUMBER;
      hash = (53 * hash) + getRole();
      hash = (37 * hash) + GID_FIELD_NUMBER;
      hash = (53 * hash) + getGid().hashCode();
      hash = (37 * hash) + ADMIN_FIELD_NUMBER;
      hash = (53 * hash) + getAdmin().hashCode();
      hash = (37 * hash) + TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getTopic().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GroupMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GroupMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GroupMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GroupMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GroupMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GroupMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GroupMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GroupMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GroupMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GroupMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GroupMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GroupMessage)
        GroupMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_GroupMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_GroupMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GroupMessage.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.GroupMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        gname_ = "";

        uid_ = "";

        nickname_ = "";

        role_ = 0;

        gid_ = "";

        admin_ = "";

        topic_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_GroupMessage_descriptor;
      }

      public GroupMessage getDefaultInstanceForType() {
        return GroupMessage.getDefaultInstance();
      }

      public GroupMessage build() {
        GroupMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GroupMessage buildPartial() {
        GroupMessage result = new GroupMessage(this);
        result.gname_ = gname_;
        result.uid_ = uid_;
        result.nickname_ = nickname_;
        result.role_ = role_;
        result.gid_ = gid_;
        result.admin_ = admin_;
        result.topic_ = topic_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GroupMessage) {
          return mergeFrom((GroupMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GroupMessage other) {
        if (other == GroupMessage.getDefaultInstance()) return this;
        if (!other.getGname().isEmpty()) {
          gname_ = other.gname_;
          onChanged();
        }
        if (!other.getUid().isEmpty()) {
          uid_ = other.uid_;
          onChanged();
        }
        if (!other.getNickname().isEmpty()) {
          nickname_ = other.nickname_;
          onChanged();
        }
        if (other.getRole() != 0) {
          setRole(other.getRole());
        }
        if (!other.getGid().isEmpty()) {
          gid_ = other.gid_;
          onChanged();
        }
        if (!other.getAdmin().isEmpty()) {
          admin_ = other.admin_;
          onChanged();
        }
        if (!other.getTopic().isEmpty()) {
          topic_ = other.topic_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GroupMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GroupMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object gname_ = "";
      /**
       * <code>optional string gname = 1;</code>
       */
      public String getGname() {
        Object ref = gname_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          gname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string gname = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGnameBytes() {
        Object ref = gname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          gname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gname = 1;</code>
       */
      public Builder setGname(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gname = 1;</code>
       */
      public Builder clearGname() {
        
        gname_ = getDefaultInstance().getGname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gname = 1;</code>
       */
      public Builder setGnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gname_ = value;
        onChanged();
        return this;
      }

      private Object uid_ = "";
      /**
       * <code>optional string uid = 2;</code>
       */
      public String getUid() {
        Object ref = uid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string uid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUidBytes() {
        Object ref = uid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uid = 2;</code>
       */
      public Builder setUid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 2;</code>
       */
      public Builder clearUid() {
        
        uid_ = getDefaultInstance().getUid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 2;</code>
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uid_ = value;
        onChanged();
        return this;
      }

      private Object nickname_ = "";
      /**
       * <code>optional string nickname = 3;</code>
       */
      public String getNickname() {
        Object ref = nickname_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          nickname_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string nickname = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNicknameBytes() {
        Object ref = nickname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          nickname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nickname = 3;</code>
       */
      public Builder setNickname(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nickname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nickname = 3;</code>
       */
      public Builder clearNickname() {
        
        nickname_ = getDefaultInstance().getNickname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nickname = 3;</code>
       */
      public Builder setNicknameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nickname_ = value;
        onChanged();
        return this;
      }

      private int role_ ;
      /**
       * <code>optional int32 role = 4;</code>
       */
      public int getRole() {
        return role_;
      }
      /**
       * <code>optional int32 role = 4;</code>
       */
      public Builder setRole(int value) {
        
        role_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 role = 4;</code>
       */
      public Builder clearRole() {
        
        role_ = 0;
        onChanged();
        return this;
      }

      private Object gid_ = "";
      /**
       * <code>optional string gid = 5;</code>
       */
      public String getGid() {
        Object ref = gid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          gid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string gid = 5;</code>
       */
      public com.google.protobuf.ByteString
          getGidBytes() {
        Object ref = gid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          gid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gid = 5;</code>
       */
      public Builder setGid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gid = 5;</code>
       */
      public Builder clearGid() {
        
        gid_ = getDefaultInstance().getGid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gid = 5;</code>
       */
      public Builder setGidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gid_ = value;
        onChanged();
        return this;
      }

      private Object admin_ = "";
      /**
       * <code>optional string admin = 6;</code>
       */
      public String getAdmin() {
        Object ref = admin_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          admin_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string admin = 6;</code>
       */
      public com.google.protobuf.ByteString
          getAdminBytes() {
        Object ref = admin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          admin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string admin = 6;</code>
       */
      public Builder setAdmin(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        admin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string admin = 6;</code>
       */
      public Builder clearAdmin() {
        
        admin_ = getDefaultInstance().getAdmin();
        onChanged();
        return this;
      }
      /**
       * <code>optional string admin = 6;</code>
       */
      public Builder setAdminBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        admin_ = value;
        onChanged();
        return this;
      }

      private Object topic_ = "";
      /**
       * <code>optional string topic = 7;</code>
       */
      public String getTopic() {
        Object ref = topic_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          topic_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string topic = 7;</code>
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        Object ref = topic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          topic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string topic = 7;</code>
       */
      public Builder setTopic(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string topic = 7;</code>
       */
      public Builder clearTopic() {
        
        topic_ = getDefaultInstance().getTopic();
        onChanged();
        return this;
      }
      /**
       * <code>optional string topic = 7;</code>
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        topic_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:GroupMessage)
    }

    // @@protoc_insertion_point(class_scope:GroupMessage)
    private static final GroupMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GroupMessage();
    }

    public static GroupMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GroupMessage>
        PARSER = new com.google.protobuf.AbstractParser<GroupMessage>() {
      public GroupMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GroupMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GroupMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GroupMessage> getParserForType() {
      return PARSER;
    }

    public GroupMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserOrBuilder extends
      // @@protoc_insertion_point(interface_extends:User)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *用户Id
     * </pre>
     *
     * <code>optional string userId = 1;</code>
     */
    String getUserId();
    /**
     * <pre>
     *用户Id
     * </pre>
     *
     * <code>optional string userId = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     *Token
     * </pre>
     *
     * <code>optional string token = 2;</code>
     */
    String getToken();
    /**
     * <pre>
     *Token
     * </pre>
     *
     * <code>optional string token = 2;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <pre>
     *应用ID: liveme
     * </pre>
     *
     * <code>optional string appId = 3;</code>
     */
    String getAppId();
    /**
     * <pre>
     *应用ID: liveme
     * </pre>
     *
     * <code>optional string appId = 3;</code>
     */
    com.google.protobuf.ByteString
        getAppIdBytes();

    /**
     * <pre>
     *登录方式 见枚举：LoginTypeEnum
     * </pre>
     *
     * <code>optional int32 loginType = 4;</code>
     */
    int getLoginType();

    /**
     * <pre>
     *设备类型 见枚举：DeviceTypeEnum
     * </pre>
     *
     * <code>optional int32 deviceType = 5;</code>
     */
    int getDeviceType();

    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 6;</code>
     */
    String getDeviceId();
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 6;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     *本地消息最新sequence  如没有传0
     * </pre>
     *
     * <code>optional int64 sequence = 7;</code>
     */
    long getSequence();

    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 8;</code>
     */
    long getCMsgId();

    /**
     * <pre>
     *客户端使用版本号
     * </pre>
     *
     * <code>optional string appVersion = 9;</code>
     */
    String getAppVersion();
    /**
     * <pre>
     *客户端使用版本号
     * </pre>
     *
     * <code>optional string appVersion = 9;</code>
     */
    com.google.protobuf.ByteString
        getAppVersionBytes();

    /**
     * <pre>
     *用户终身国家码
     * </pre>
     *
     * <code>optional string country = 10;</code>
     */
    String getCountry();
    /**
     * <pre>
     *用户终身国家码
     * </pre>
     *
     * <code>optional string country = 10;</code>
     */
    com.google.protobuf.ByteString
        getCountryBytes();

    /**
     * <pre>
     *连接类型 见枚举：ChannelTypeEnum
     * </pre>
     *
     * <code>optional int32 channelType = 11;</code>
     */
    int getChannelType();

    /**
     * <pre>
     *appkey
     * </pre>
     *
     * <code>optional string appKey = 12;</code>
     */
    String getAppKey();
    /**
     * <pre>
     *appkey
     * </pre>
     *
     * <code>optional string appKey = 12;</code>
     */
    com.google.protobuf.ByteString
        getAppKeyBytes();
  }
  /**
   * <pre>
   *用户登录信息,登录回执见:LoginAck
   * </pre>
   *
   * Protobuf type {@code User}
   */
  public  static final class User extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:User)
      UserOrBuilder {
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private User() {
      userId_ = "";
      token_ = "";
      appId_ = "";
      loginType_ = 0;
      deviceType_ = 0;
      deviceId_ = "";
      sequence_ = 0L;
      cMsgId_ = 0L;
      appVersion_ = "";
      country_ = "";
      channelType_ = 0;
      appKey_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              userId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              appId_ = s;
              break;
            }
            case 32: {

              loginType_ = input.readInt32();
              break;
            }
            case 40: {

              deviceType_ = input.readInt32();
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 56: {

              sequence_ = input.readInt64();
              break;
            }
            case 64: {

              cMsgId_ = input.readInt64();
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              appVersion_ = s;
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              country_ = s;
              break;
            }
            case 88: {

              channelType_ = input.readInt32();
              break;
            }
            case 98: {
              String s = input.readStringRequireUtf8();

              appKey_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_User_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_User_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              User.class, Builder.class);
    }

    public static final int USERID_FIELD_NUMBER = 1;
    private volatile Object userId_;
    /**
     * <pre>
     *用户Id
     * </pre>
     *
     * <code>optional string userId = 1;</code>
     */
    public String getUserId() {
      Object ref = userId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *用户Id
     * </pre>
     *
     * <code>optional string userId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOKEN_FIELD_NUMBER = 2;
    private volatile Object token_;
    /**
     * <pre>
     *Token
     * </pre>
     *
     * <code>optional string token = 2;</code>
     */
    public String getToken() {
      Object ref = token_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Token
     * </pre>
     *
     * <code>optional string token = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      Object ref = token_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APPID_FIELD_NUMBER = 3;
    private volatile Object appId_;
    /**
     * <pre>
     *应用ID: liveme
     * </pre>
     *
     * <code>optional string appId = 3;</code>
     */
    public String getAppId() {
      Object ref = appId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *应用ID: liveme
     * </pre>
     *
     * <code>optional string appId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getAppIdBytes() {
      Object ref = appId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        appId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOGINTYPE_FIELD_NUMBER = 4;
    private int loginType_;
    /**
     * <pre>
     *登录方式 见枚举：LoginTypeEnum
     * </pre>
     *
     * <code>optional int32 loginType = 4;</code>
     */
    public int getLoginType() {
      return loginType_;
    }

    public static final int DEVICETYPE_FIELD_NUMBER = 5;
    private int deviceType_;
    /**
     * <pre>
     *设备类型 见枚举：DeviceTypeEnum
     * </pre>
     *
     * <code>optional int32 deviceType = 5;</code>
     */
    public int getDeviceType() {
      return deviceType_;
    }

    public static final int DEVICEID_FIELD_NUMBER = 6;
    private volatile Object deviceId_;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 6;</code>
     */
    public String getDeviceId() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQUENCE_FIELD_NUMBER = 7;
    private long sequence_;
    /**
     * <pre>
     *本地消息最新sequence  如没有传0
     * </pre>
     *
     * <code>optional int64 sequence = 7;</code>
     */
    public long getSequence() {
      return sequence_;
    }

    public static final int CMSGID_FIELD_NUMBER = 8;
    private long cMsgId_;
    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 8;</code>
     */
    public long getCMsgId() {
      return cMsgId_;
    }

    public static final int APPVERSION_FIELD_NUMBER = 9;
    private volatile Object appVersion_;
    /**
     * <pre>
     *客户端使用版本号
     * </pre>
     *
     * <code>optional string appVersion = 9;</code>
     */
    public String getAppVersion() {
      Object ref = appVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appVersion_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *客户端使用版本号
     * </pre>
     *
     * <code>optional string appVersion = 9;</code>
     */
    public com.google.protobuf.ByteString
        getAppVersionBytes() {
      Object ref = appVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        appVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COUNTRY_FIELD_NUMBER = 10;
    private volatile Object country_;
    /**
     * <pre>
     *用户终身国家码
     * </pre>
     *
     * <code>optional string country = 10;</code>
     */
    public String getCountry() {
      Object ref = country_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        country_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *用户终身国家码
     * </pre>
     *
     * <code>optional string country = 10;</code>
     */
    public com.google.protobuf.ByteString
        getCountryBytes() {
      Object ref = country_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        country_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNELTYPE_FIELD_NUMBER = 11;
    private int channelType_;
    /**
     * <pre>
     *连接类型 见枚举：ChannelTypeEnum
     * </pre>
     *
     * <code>optional int32 channelType = 11;</code>
     */
    public int getChannelType() {
      return channelType_;
    }

    public static final int APPKEY_FIELD_NUMBER = 12;
    private volatile Object appKey_;
    /**
     * <pre>
     *appkey
     * </pre>
     *
     * <code>optional string appKey = 12;</code>
     */
    public String getAppKey() {
      Object ref = appKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *appkey
     * </pre>
     *
     * <code>optional string appKey = 12;</code>
     */
    public com.google.protobuf.ByteString
        getAppKeyBytes() {
      Object ref = appKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        appKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUserIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, userId_);
      }
      if (!getTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, token_);
      }
      if (!getAppIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, appId_);
      }
      if (loginType_ != 0) {
        output.writeInt32(4, loginType_);
      }
      if (deviceType_ != 0) {
        output.writeInt32(5, deviceType_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, deviceId_);
      }
      if (sequence_ != 0L) {
        output.writeInt64(7, sequence_);
      }
      if (cMsgId_ != 0L) {
        output.writeInt64(8, cMsgId_);
      }
      if (!getAppVersionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, appVersion_);
      }
      if (!getCountryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, country_);
      }
      if (channelType_ != 0) {
        output.writeInt32(11, channelType_);
      }
      if (!getAppKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, appKey_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUserIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, userId_);
      }
      if (!getTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, token_);
      }
      if (!getAppIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, appId_);
      }
      if (loginType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, loginType_);
      }
      if (deviceType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, deviceType_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, deviceId_);
      }
      if (sequence_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, sequence_);
      }
      if (cMsgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, cMsgId_);
      }
      if (!getAppVersionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, appVersion_);
      }
      if (!getCountryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, country_);
      }
      if (channelType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, channelType_);
      }
      if (!getAppKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, appKey_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof User)) {
        return super.equals(obj);
      }
      User other = (User) obj;

      boolean result = true;
      result = result && getUserId()
          .equals(other.getUserId());
      result = result && getToken()
          .equals(other.getToken());
      result = result && getAppId()
          .equals(other.getAppId());
      result = result && (getLoginType()
          == other.getLoginType());
      result = result && (getDeviceType()
          == other.getDeviceType());
      result = result && getDeviceId()
          .equals(other.getDeviceId());
      result = result && (getSequence()
          == other.getSequence());
      result = result && (getCMsgId()
          == other.getCMsgId());
      result = result && getAppVersion()
          .equals(other.getAppVersion());
      result = result && getCountry()
          .equals(other.getCountry());
      result = result && (getChannelType()
          == other.getChannelType());
      result = result && getAppKey()
          .equals(other.getAppKey());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      hash = (37 * hash) + APPID_FIELD_NUMBER;
      hash = (53 * hash) + getAppId().hashCode();
      hash = (37 * hash) + LOGINTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getLoginType();
      hash = (37 * hash) + DEVICETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceType();
      hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequence());
      hash = (37 * hash) + CMSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCMsgId());
      hash = (37 * hash) + APPVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getAppVersion().hashCode();
      hash = (37 * hash) + COUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + getCountry().hashCode();
      hash = (37 * hash) + CHANNELTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getChannelType();
      hash = (37 * hash) + APPKEY_FIELD_NUMBER;
      hash = (53 * hash) + getAppKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(User prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *用户登录信息,登录回执见:LoginAck
     * </pre>
     *
     * Protobuf type {@code User}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:User)
        UserOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_User_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_User_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                User.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        userId_ = "";

        token_ = "";

        appId_ = "";

        loginType_ = 0;

        deviceType_ = 0;

        deviceId_ = "";

        sequence_ = 0L;

        cMsgId_ = 0L;

        appVersion_ = "";

        country_ = "";

        channelType_ = 0;

        appKey_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_User_descriptor;
      }

      public User getDefaultInstanceForType() {
        return User.getDefaultInstance();
      }

      public User build() {
        User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public User buildPartial() {
        User result = new User(this);
        result.userId_ = userId_;
        result.token_ = token_;
        result.appId_ = appId_;
        result.loginType_ = loginType_;
        result.deviceType_ = deviceType_;
        result.deviceId_ = deviceId_;
        result.sequence_ = sequence_;
        result.cMsgId_ = cMsgId_;
        result.appVersion_ = appVersion_;
        result.country_ = country_;
        result.channelType_ = channelType_;
        result.appKey_ = appKey_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof User) {
          return mergeFrom((User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(User other) {
        if (other == User.getDefaultInstance()) return this;
        if (!other.getUserId().isEmpty()) {
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (!other.getAppId().isEmpty()) {
          appId_ = other.appId_;
          onChanged();
        }
        if (other.getLoginType() != 0) {
          setLoginType(other.getLoginType());
        }
        if (other.getDeviceType() != 0) {
          setDeviceType(other.getDeviceType());
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.getSequence() != 0L) {
          setSequence(other.getSequence());
        }
        if (other.getCMsgId() != 0L) {
          setCMsgId(other.getCMsgId());
        }
        if (!other.getAppVersion().isEmpty()) {
          appVersion_ = other.appVersion_;
          onChanged();
        }
        if (!other.getCountry().isEmpty()) {
          country_ = other.country_;
          onChanged();
        }
        if (other.getChannelType() != 0) {
          setChannelType(other.getChannelType());
        }
        if (!other.getAppKey().isEmpty()) {
          appKey_ = other.appKey_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (User) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object userId_ = "";
      /**
       * <pre>
       *用户Id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public String getUserId() {
        Object ref = userId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *用户Id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *用户Id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public Builder setUserId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户Id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public Builder clearUserId() {
        
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户Id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userId_ = value;
        onChanged();
        return this;
      }

      private Object token_ = "";
      /**
       * <pre>
       *Token
       * </pre>
       *
       * <code>optional string token = 2;</code>
       */
      public String getToken() {
        Object ref = token_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *Token
       * </pre>
       *
       * <code>optional string token = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Token
       * </pre>
       *
       * <code>optional string token = 2;</code>
       */
      public Builder setToken(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Token
       * </pre>
       *
       * <code>optional string token = 2;</code>
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Token
       * </pre>
       *
       * <code>optional string token = 2;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private Object appId_ = "";
      /**
       * <pre>
       *应用ID: liveme
       * </pre>
       *
       * <code>optional string appId = 3;</code>
       */
      public String getAppId() {
        Object ref = appId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          appId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *应用ID: liveme
       * </pre>
       *
       * <code>optional string appId = 3;</code>
       */
      public com.google.protobuf.ByteString
          getAppIdBytes() {
        Object ref = appId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          appId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *应用ID: liveme
       * </pre>
       *
       * <code>optional string appId = 3;</code>
       */
      public Builder setAppId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        appId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用ID: liveme
       * </pre>
       *
       * <code>optional string appId = 3;</code>
       */
      public Builder clearAppId() {
        
        appId_ = getDefaultInstance().getAppId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用ID: liveme
       * </pre>
       *
       * <code>optional string appId = 3;</code>
       */
      public Builder setAppIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        appId_ = value;
        onChanged();
        return this;
      }

      private int loginType_ ;
      /**
       * <pre>
       *登录方式 见枚举：LoginTypeEnum
       * </pre>
       *
       * <code>optional int32 loginType = 4;</code>
       */
      public int getLoginType() {
        return loginType_;
      }
      /**
       * <pre>
       *登录方式 见枚举：LoginTypeEnum
       * </pre>
       *
       * <code>optional int32 loginType = 4;</code>
       */
      public Builder setLoginType(int value) {
        
        loginType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *登录方式 见枚举：LoginTypeEnum
       * </pre>
       *
       * <code>optional int32 loginType = 4;</code>
       */
      public Builder clearLoginType() {
        
        loginType_ = 0;
        onChanged();
        return this;
      }

      private int deviceType_ ;
      /**
       * <pre>
       *设备类型 见枚举：DeviceTypeEnum
       * </pre>
       *
       * <code>optional int32 deviceType = 5;</code>
       */
      public int getDeviceType() {
        return deviceType_;
      }
      /**
       * <pre>
       *设备类型 见枚举：DeviceTypeEnum
       * </pre>
       *
       * <code>optional int32 deviceType = 5;</code>
       */
      public Builder setDeviceType(int value) {
        
        deviceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备类型 见枚举：DeviceTypeEnum
       * </pre>
       *
       * <code>optional int32 deviceType = 5;</code>
       */
      public Builder clearDeviceType() {
        
        deviceType_ = 0;
        onChanged();
        return this;
      }

      private Object deviceId_ = "";
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 6;</code>
       */
      public String getDeviceId() {
        Object ref = deviceId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 6;</code>
       */
      public Builder setDeviceId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 6;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 6;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private long sequence_ ;
      /**
       * <pre>
       *本地消息最新sequence  如没有传0
       * </pre>
       *
       * <code>optional int64 sequence = 7;</code>
       */
      public long getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       *本地消息最新sequence  如没有传0
       * </pre>
       *
       * <code>optional int64 sequence = 7;</code>
       */
      public Builder setSequence(long value) {
        
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *本地消息最新sequence  如没有传0
       * </pre>
       *
       * <code>optional int64 sequence = 7;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = 0L;
        onChanged();
        return this;
      }

      private long cMsgId_ ;
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 8;</code>
       */
      public long getCMsgId() {
        return cMsgId_;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 8;</code>
       */
      public Builder setCMsgId(long value) {
        
        cMsgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 8;</code>
       */
      public Builder clearCMsgId() {
        
        cMsgId_ = 0L;
        onChanged();
        return this;
      }

      private Object appVersion_ = "";
      /**
       * <pre>
       *客户端使用版本号
       * </pre>
       *
       * <code>optional string appVersion = 9;</code>
       */
      public String getAppVersion() {
        Object ref = appVersion_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          appVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *客户端使用版本号
       * </pre>
       *
       * <code>optional string appVersion = 9;</code>
       */
      public com.google.protobuf.ByteString
          getAppVersionBytes() {
        Object ref = appVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          appVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *客户端使用版本号
       * </pre>
       *
       * <code>optional string appVersion = 9;</code>
       */
      public Builder setAppVersion(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        appVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端使用版本号
       * </pre>
       *
       * <code>optional string appVersion = 9;</code>
       */
      public Builder clearAppVersion() {
        
        appVersion_ = getDefaultInstance().getAppVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端使用版本号
       * </pre>
       *
       * <code>optional string appVersion = 9;</code>
       */
      public Builder setAppVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        appVersion_ = value;
        onChanged();
        return this;
      }

      private Object country_ = "";
      /**
       * <pre>
       *用户终身国家码
       * </pre>
       *
       * <code>optional string country = 10;</code>
       */
      public String getCountry() {
        Object ref = country_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          country_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *用户终身国家码
       * </pre>
       *
       * <code>optional string country = 10;</code>
       */
      public com.google.protobuf.ByteString
          getCountryBytes() {
        Object ref = country_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          country_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *用户终身国家码
       * </pre>
       *
       * <code>optional string country = 10;</code>
       */
      public Builder setCountry(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        country_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户终身国家码
       * </pre>
       *
       * <code>optional string country = 10;</code>
       */
      public Builder clearCountry() {
        
        country_ = getDefaultInstance().getCountry();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户终身国家码
       * </pre>
       *
       * <code>optional string country = 10;</code>
       */
      public Builder setCountryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        country_ = value;
        onChanged();
        return this;
      }

      private int channelType_ ;
      /**
       * <pre>
       *连接类型 见枚举：ChannelTypeEnum
       * </pre>
       *
       * <code>optional int32 channelType = 11;</code>
       */
      public int getChannelType() {
        return channelType_;
      }
      /**
       * <pre>
       *连接类型 见枚举：ChannelTypeEnum
       * </pre>
       *
       * <code>optional int32 channelType = 11;</code>
       */
      public Builder setChannelType(int value) {
        
        channelType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *连接类型 见枚举：ChannelTypeEnum
       * </pre>
       *
       * <code>optional int32 channelType = 11;</code>
       */
      public Builder clearChannelType() {
        
        channelType_ = 0;
        onChanged();
        return this;
      }

      private Object appKey_ = "";
      /**
       * <pre>
       *appkey
       * </pre>
       *
       * <code>optional string appKey = 12;</code>
       */
      public String getAppKey() {
        Object ref = appKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          appKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *appkey
       * </pre>
       *
       * <code>optional string appKey = 12;</code>
       */
      public com.google.protobuf.ByteString
          getAppKeyBytes() {
        Object ref = appKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          appKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *appkey
       * </pre>
       *
       * <code>optional string appKey = 12;</code>
       */
      public Builder setAppKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        appKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *appkey
       * </pre>
       *
       * <code>optional string appKey = 12;</code>
       */
      public Builder clearAppKey() {
        
        appKey_ = getDefaultInstance().getAppKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *appkey
       * </pre>
       *
       * <code>optional string appKey = 12;</code>
       */
      public Builder setAppKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        appKey_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:User)
    }

    // @@protoc_insertion_point(class_scope:User)
    private static final User DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new User();
    }

    public static User getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<User>
        PARSER = new com.google.protobuf.AbstractParser<User>() {
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new User(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<User> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    public User getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HttpRawIMMsgResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HttpRawIMMsgResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *结果编码：200 成功，1 失败
     * </pre>
     *
     * <code>optional int32 ecode = 1;</code>
     */
    int getEcode();

    /**
     * <pre>
     *结果描述，成功，失败原因
     * </pre>
     *
     * <code>optional string emsg = 2;</code>
     */
    String getEmsg();
    /**
     * <pre>
     *结果描述，成功，失败原因
     * </pre>
     *
     * <code>optional string emsg = 2;</code>
     */
    com.google.protobuf.ByteString
        getEmsgBytes();

    /**
     * <pre>
     *未读消息数
     * </pre>
     *
     * <code>optional int32 unReadNum = 3;</code>
     */
    int getUnReadNum();

    /**
     * <pre>
     *客户端IP
     * </pre>
     *
     * <code>optional string clientIp = 4;</code>
     */
    String getClientIp();
    /**
     * <pre>
     *客户端IP
     * </pre>
     *
     * <code>optional string clientIp = 4;</code>
     */
    com.google.protobuf.ByteString
        getClientIpBytes();

    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    java.util.List<IMMessage>
        getMsgsList();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    IMMessage getMsgs(int index);
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    int getMsgsCount();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    java.util.List<? extends IMMessageOrBuilder>
        getMsgsOrBuilderList();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    IMMessageOrBuilder getMsgsOrBuilder(
        int index);
  }
  /**
   * <pre>
   *消息的HTTP请求的结果----------------------------------------------------------------------
   * </pre>
   *
   * Protobuf type {@code HttpRawIMMsgResponse}
   */
  public  static final class HttpRawIMMsgResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HttpRawIMMsgResponse)
      HttpRawIMMsgResponseOrBuilder {
    // Use HttpRawIMMsgResponse.newBuilder() to construct.
    private HttpRawIMMsgResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HttpRawIMMsgResponse() {
      ecode_ = 0;
      emsg_ = "";
      unReadNum_ = 0;
      clientIp_ = "";
      msgs_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HttpRawIMMsgResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              ecode_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              emsg_ = s;
              break;
            }
            case 24: {

              unReadNum_ = input.readInt32();
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              clientIp_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                msgs_ = new java.util.ArrayList<IMMessage>();
                mutable_bitField0_ |= 0x00000010;
              }
              msgs_.add(
                  input.readMessage(IMMessage.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          msgs_ = java.util.Collections.unmodifiableList(msgs_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_HttpRawIMMsgResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_HttpRawIMMsgResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HttpRawIMMsgResponse.class, Builder.class);
    }

    private int bitField0_;
    public static final int ECODE_FIELD_NUMBER = 1;
    private int ecode_;
    /**
     * <pre>
     *结果编码：200 成功，1 失败
     * </pre>
     *
     * <code>optional int32 ecode = 1;</code>
     */
    public int getEcode() {
      return ecode_;
    }

    public static final int EMSG_FIELD_NUMBER = 2;
    private volatile Object emsg_;
    /**
     * <pre>
     *结果描述，成功，失败原因
     * </pre>
     *
     * <code>optional string emsg = 2;</code>
     */
    public String getEmsg() {
      Object ref = emsg_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        emsg_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *结果描述，成功，失败原因
     * </pre>
     *
     * <code>optional string emsg = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEmsgBytes() {
      Object ref = emsg_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        emsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UNREADNUM_FIELD_NUMBER = 3;
    private int unReadNum_;
    /**
     * <pre>
     *未读消息数
     * </pre>
     *
     * <code>optional int32 unReadNum = 3;</code>
     */
    public int getUnReadNum() {
      return unReadNum_;
    }

    public static final int CLIENTIP_FIELD_NUMBER = 4;
    private volatile Object clientIp_;
    /**
     * <pre>
     *客户端IP
     * </pre>
     *
     * <code>optional string clientIp = 4;</code>
     */
    public String getClientIp() {
      Object ref = clientIp_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        clientIp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *客户端IP
     * </pre>
     *
     * <code>optional string clientIp = 4;</code>
     */
    public com.google.protobuf.ByteString
        getClientIpBytes() {
      Object ref = clientIp_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        clientIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MSGS_FIELD_NUMBER = 5;
    private java.util.List<IMMessage> msgs_;
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    public java.util.List<IMMessage> getMsgsList() {
      return msgs_;
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    public java.util.List<? extends IMMessageOrBuilder>
        getMsgsOrBuilderList() {
      return msgs_;
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    public int getMsgsCount() {
      return msgs_.size();
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    public IMMessage getMsgs(int index) {
      return msgs_.get(index);
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msgs = 5;</code>
     */
    public IMMessageOrBuilder getMsgsOrBuilder(
        int index) {
      return msgs_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ecode_ != 0) {
        output.writeInt32(1, ecode_);
      }
      if (!getEmsgBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, emsg_);
      }
      if (unReadNum_ != 0) {
        output.writeInt32(3, unReadNum_);
      }
      if (!getClientIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clientIp_);
      }
      for (int i = 0; i < msgs_.size(); i++) {
        output.writeMessage(5, msgs_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ecode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ecode_);
      }
      if (!getEmsgBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, emsg_);
      }
      if (unReadNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, unReadNum_);
      }
      if (!getClientIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clientIp_);
      }
      for (int i = 0; i < msgs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, msgs_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HttpRawIMMsgResponse)) {
        return super.equals(obj);
      }
      HttpRawIMMsgResponse other = (HttpRawIMMsgResponse) obj;

      boolean result = true;
      result = result && (getEcode()
          == other.getEcode());
      result = result && getEmsg()
          .equals(other.getEmsg());
      result = result && (getUnReadNum()
          == other.getUnReadNum());
      result = result && getClientIp()
          .equals(other.getClientIp());
      result = result && getMsgsList()
          .equals(other.getMsgsList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ECODE_FIELD_NUMBER;
      hash = (53 * hash) + getEcode();
      hash = (37 * hash) + EMSG_FIELD_NUMBER;
      hash = (53 * hash) + getEmsg().hashCode();
      hash = (37 * hash) + UNREADNUM_FIELD_NUMBER;
      hash = (53 * hash) + getUnReadNum();
      hash = (37 * hash) + CLIENTIP_FIELD_NUMBER;
      hash = (53 * hash) + getClientIp().hashCode();
      if (getMsgsCount() > 0) {
        hash = (37 * hash) + MSGS_FIELD_NUMBER;
        hash = (53 * hash) + getMsgsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HttpRawIMMsgResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HttpRawIMMsgResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HttpRawIMMsgResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HttpRawIMMsgResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HttpRawIMMsgResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HttpRawIMMsgResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HttpRawIMMsgResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HttpRawIMMsgResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HttpRawIMMsgResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HttpRawIMMsgResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HttpRawIMMsgResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *消息的HTTP请求的结果----------------------------------------------------------------------
     * </pre>
     *
     * Protobuf type {@code HttpRawIMMsgResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HttpRawIMMsgResponse)
        HttpRawIMMsgResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_HttpRawIMMsgResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_HttpRawIMMsgResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HttpRawIMMsgResponse.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.HttpRawIMMsgResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMsgsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        ecode_ = 0;

        emsg_ = "";

        unReadNum_ = 0;

        clientIp_ = "";

        if (msgsBuilder_ == null) {
          msgs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          msgsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_HttpRawIMMsgResponse_descriptor;
      }

      public HttpRawIMMsgResponse getDefaultInstanceForType() {
        return HttpRawIMMsgResponse.getDefaultInstance();
      }

      public HttpRawIMMsgResponse build() {
        HttpRawIMMsgResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HttpRawIMMsgResponse buildPartial() {
        HttpRawIMMsgResponse result = new HttpRawIMMsgResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.ecode_ = ecode_;
        result.emsg_ = emsg_;
        result.unReadNum_ = unReadNum_;
        result.clientIp_ = clientIp_;
        if (msgsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            msgs_ = java.util.Collections.unmodifiableList(msgs_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.msgs_ = msgs_;
        } else {
          result.msgs_ = msgsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HttpRawIMMsgResponse) {
          return mergeFrom((HttpRawIMMsgResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HttpRawIMMsgResponse other) {
        if (other == HttpRawIMMsgResponse.getDefaultInstance()) return this;
        if (other.getEcode() != 0) {
          setEcode(other.getEcode());
        }
        if (!other.getEmsg().isEmpty()) {
          emsg_ = other.emsg_;
          onChanged();
        }
        if (other.getUnReadNum() != 0) {
          setUnReadNum(other.getUnReadNum());
        }
        if (!other.getClientIp().isEmpty()) {
          clientIp_ = other.clientIp_;
          onChanged();
        }
        if (msgsBuilder_ == null) {
          if (!other.msgs_.isEmpty()) {
            if (msgs_.isEmpty()) {
              msgs_ = other.msgs_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMsgsIsMutable();
              msgs_.addAll(other.msgs_);
            }
            onChanged();
          }
        } else {
          if (!other.msgs_.isEmpty()) {
            if (msgsBuilder_.isEmpty()) {
              msgsBuilder_.dispose();
              msgsBuilder_ = null;
              msgs_ = other.msgs_;
              bitField0_ = (bitField0_ & ~0x00000010);
              msgsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMsgsFieldBuilder() : null;
            } else {
              msgsBuilder_.addAllMessages(other.msgs_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HttpRawIMMsgResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HttpRawIMMsgResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ecode_ ;
      /**
       * <pre>
       *结果编码：200 成功，1 失败
       * </pre>
       *
       * <code>optional int32 ecode = 1;</code>
       */
      public int getEcode() {
        return ecode_;
      }
      /**
       * <pre>
       *结果编码：200 成功，1 失败
       * </pre>
       *
       * <code>optional int32 ecode = 1;</code>
       */
      public Builder setEcode(int value) {
        
        ecode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结果编码：200 成功，1 失败
       * </pre>
       *
       * <code>optional int32 ecode = 1;</code>
       */
      public Builder clearEcode() {
        
        ecode_ = 0;
        onChanged();
        return this;
      }

      private Object emsg_ = "";
      /**
       * <pre>
       *结果描述，成功，失败原因
       * </pre>
       *
       * <code>optional string emsg = 2;</code>
       */
      public String getEmsg() {
        Object ref = emsg_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          emsg_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *结果描述，成功，失败原因
       * </pre>
       *
       * <code>optional string emsg = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEmsgBytes() {
        Object ref = emsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          emsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *结果描述，成功，失败原因
       * </pre>
       *
       * <code>optional string emsg = 2;</code>
       */
      public Builder setEmsg(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        emsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结果描述，成功，失败原因
       * </pre>
       *
       * <code>optional string emsg = 2;</code>
       */
      public Builder clearEmsg() {
        
        emsg_ = getDefaultInstance().getEmsg();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结果描述，成功，失败原因
       * </pre>
       *
       * <code>optional string emsg = 2;</code>
       */
      public Builder setEmsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        emsg_ = value;
        onChanged();
        return this;
      }

      private int unReadNum_ ;
      /**
       * <pre>
       *未读消息数
       * </pre>
       *
       * <code>optional int32 unReadNum = 3;</code>
       */
      public int getUnReadNum() {
        return unReadNum_;
      }
      /**
       * <pre>
       *未读消息数
       * </pre>
       *
       * <code>optional int32 unReadNum = 3;</code>
       */
      public Builder setUnReadNum(int value) {
        
        unReadNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *未读消息数
       * </pre>
       *
       * <code>optional int32 unReadNum = 3;</code>
       */
      public Builder clearUnReadNum() {
        
        unReadNum_ = 0;
        onChanged();
        return this;
      }

      private Object clientIp_ = "";
      /**
       * <pre>
       *客户端IP
       * </pre>
       *
       * <code>optional string clientIp = 4;</code>
       */
      public String getClientIp() {
        Object ref = clientIp_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          clientIp_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *客户端IP
       * </pre>
       *
       * <code>optional string clientIp = 4;</code>
       */
      public com.google.protobuf.ByteString
          getClientIpBytes() {
        Object ref = clientIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          clientIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *客户端IP
       * </pre>
       *
       * <code>optional string clientIp = 4;</code>
       */
      public Builder setClientIp(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clientIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端IP
       * </pre>
       *
       * <code>optional string clientIp = 4;</code>
       */
      public Builder clearClientIp() {
        
        clientIp_ = getDefaultInstance().getClientIp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端IP
       * </pre>
       *
       * <code>optional string clientIp = 4;</code>
       */
      public Builder setClientIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        clientIp_ = value;
        onChanged();
        return this;
      }

      private java.util.List<IMMessage> msgs_ =
        java.util.Collections.emptyList();
      private void ensureMsgsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          msgs_ = new java.util.ArrayList<IMMessage>(msgs_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          IMMessage, IMMessage.Builder, IMMessageOrBuilder> msgsBuilder_;

      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public java.util.List<IMMessage> getMsgsList() {
        if (msgsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(msgs_);
        } else {
          return msgsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public int getMsgsCount() {
        if (msgsBuilder_ == null) {
          return msgs_.size();
        } else {
          return msgsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public IMMessage getMsgs(int index) {
        if (msgsBuilder_ == null) {
          return msgs_.get(index);
        } else {
          return msgsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder setMsgs(
          int index, IMMessage value) {
        if (msgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgsIsMutable();
          msgs_.set(index, value);
          onChanged();
        } else {
          msgsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder setMsgs(
          int index, IMMessage.Builder builderForValue) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          msgs_.set(index, builderForValue.build());
          onChanged();
        } else {
          msgsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder addMsgs(IMMessage value) {
        if (msgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgsIsMutable();
          msgs_.add(value);
          onChanged();
        } else {
          msgsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder addMsgs(
          int index, IMMessage value) {
        if (msgsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgsIsMutable();
          msgs_.add(index, value);
          onChanged();
        } else {
          msgsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder addMsgs(
          IMMessage.Builder builderForValue) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          msgs_.add(builderForValue.build());
          onChanged();
        } else {
          msgsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder addMsgs(
          int index, IMMessage.Builder builderForValue) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          msgs_.add(index, builderForValue.build());
          onChanged();
        } else {
          msgsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder addAllMsgs(
          Iterable<? extends IMMessage> values) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, msgs_);
          onChanged();
        } else {
          msgsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder clearMsgs() {
        if (msgsBuilder_ == null) {
          msgs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          msgsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public Builder removeMsgs(int index) {
        if (msgsBuilder_ == null) {
          ensureMsgsIsMutable();
          msgs_.remove(index);
          onChanged();
        } else {
          msgsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public IMMessage.Builder getMsgsBuilder(
          int index) {
        return getMsgsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public IMMessageOrBuilder getMsgsOrBuilder(
          int index) {
        if (msgsBuilder_ == null) {
          return msgs_.get(index);  } else {
          return msgsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public java.util.List<? extends IMMessageOrBuilder>
           getMsgsOrBuilderList() {
        if (msgsBuilder_ != null) {
          return msgsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(msgs_);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public IMMessage.Builder addMsgsBuilder() {
        return getMsgsFieldBuilder().addBuilder(
            IMMessage.getDefaultInstance());
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public IMMessage.Builder addMsgsBuilder(
          int index) {
        return getMsgsFieldBuilder().addBuilder(
            index, IMMessage.getDefaultInstance());
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msgs = 5;</code>
       */
      public java.util.List<IMMessage.Builder>
           getMsgsBuilderList() {
        return getMsgsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          IMMessage, IMMessage.Builder, IMMessageOrBuilder>
          getMsgsFieldBuilder() {
        if (msgsBuilder_ == null) {
          msgsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              IMMessage, IMMessage.Builder, IMMessageOrBuilder>(
                  msgs_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          msgs_ = null;
        }
        return msgsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:HttpRawIMMsgResponse)
    }

    // @@protoc_insertion_point(class_scope:HttpRawIMMsgResponse)
    private static final HttpRawIMMsgResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HttpRawIMMsgResponse();
    }

    public static HttpRawIMMsgResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HttpRawIMMsgResponse>
        PARSER = new com.google.protobuf.AbstractParser<HttpRawIMMsgResponse>() {
      public HttpRawIMMsgResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HttpRawIMMsgResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HttpRawIMMsgResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HttpRawIMMsgResponse> getParserForType() {
      return PARSER;
    }

    public HttpRawIMMsgResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MessageList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 1;</code>
     */
    String getTo();
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 1;</code>
     */
    com.google.protobuf.ByteString
        getToBytes();

    /**
     * <pre>
     *设备id
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    String getDeviceId();
    /**
     * <pre>
     *设备id
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    java.util.List<IMMessage>
        getMsgList();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    IMMessage getMsg(int index);
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    int getMsgCount();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    java.util.List<? extends IMMessageOrBuilder>
        getMsgOrBuilderList();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    IMMessageOrBuilder getMsgOrBuilder(
        int index);

    /**
     * <code>optional string from = 4;</code>
     */
    String getFrom();
    /**
     * <code>optional string from = 4;</code>
     */
    com.google.protobuf.ByteString
        getFromBytes();

    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    java.util.List<com.google.protobuf.Any> 
        getDataList();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    com.google.protobuf.Any getData(int index);
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    int getDataCount();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    com.google.protobuf.AnyOrBuilder getDataOrBuilder(
        int index);

    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 6;</code>
     */
    long getCMsgId();

    /**
     * <pre>
     * deviceId 字段是否使用gzip压缩
     * </pre>
     *
     * <code>optional bool gzipDevices = 7;</code>
     */
    boolean getGzipDevices();

    /**
     * <code>optional int64 msgId = 8;</code>
     */
    long getMsgId();

    /**
     * <pre>
     *消息id列表
     * </pre>
     *
     * <code>repeated int64 msgIds = 9;</code>
     */
    java.util.List<Long> getMsgIdsList();
    /**
     * <pre>
     *消息id列表
     * </pre>
     *
     * <code>repeated int64 msgIds = 9;</code>
     */
    int getMsgIdsCount();
    /**
     * <pre>
     *消息id列表
     * </pre>
     *
     * <code>repeated int64 msgIds = 9;</code>
     */
    long getMsgIds(int index);

    /**
     * <pre>
     *应用id
     * </pre>
     *
     * <code>optional string appid = 10;</code>
     */
    String getAppid();
    /**
     * <pre>
     *应用id
     * </pre>
     *
     * <code>optional string appid = 10;</code>
     */
    com.google.protobuf.ByteString
        getAppidBytes();

    /**
     * <pre>
     * 消息批量发送 此字段存放经过gzip压缩后的deviceid列表
     * </pre>
     *
     * <code>optional bytes gzipDeviceIds = 29;</code>
     */
    com.google.protobuf.ByteString getGzipDeviceIds();
  }
  /**
   * <pre>
   *消息列表----------------------------------------------------------------------
   * </pre>
   *
   * Protobuf type {@code MessageList}
   */
  public  static final class MessageList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MessageList)
      MessageListOrBuilder {
    // Use MessageList.newBuilder() to construct.
    private MessageList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageList() {
      to_ = "";
      deviceId_ = "";
      msg_ = java.util.Collections.emptyList();
      from_ = "";
      data_ = java.util.Collections.emptyList();
      cMsgId_ = 0L;
      gzipDevices_ = false;
      msgId_ = 0L;
      msgIds_ = java.util.Collections.emptyList();
      appid_ = "";
      gzipDeviceIds_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MessageList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              to_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                msg_ = new java.util.ArrayList<IMMessage>();
                mutable_bitField0_ |= 0x00000004;
              }
              msg_.add(
                  input.readMessage(IMMessage.parser(), extensionRegistry));
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              from_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                data_ = new java.util.ArrayList<com.google.protobuf.Any>();
                mutable_bitField0_ |= 0x00000010;
              }
              data_.add(
                  input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry));
              break;
            }
            case 48: {

              cMsgId_ = input.readInt64();
              break;
            }
            case 56: {

              gzipDevices_ = input.readBool();
              break;
            }
            case 64: {

              msgId_ = input.readInt64();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                msgIds_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000100;
              }
              msgIds_.add(input.readInt64());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                msgIds_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                msgIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              appid_ = s;
              break;
            }
            case 234: {

              gzipDeviceIds_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          msg_ = java.util.Collections.unmodifiableList(msg_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          msgIds_ = java.util.Collections.unmodifiableList(msgIds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_MessageList_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_MessageList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MessageList.class, Builder.class);
    }

    private int bitField0_;
    public static final int TO_FIELD_NUMBER = 1;
    private volatile Object to_;
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 1;</code>
     */
    public String getTo() {
      Object ref = to_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        to_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 1;</code>
     */
    public com.google.protobuf.ByteString
        getToBytes() {
      Object ref = to_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        to_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICEID_FIELD_NUMBER = 2;
    private volatile Object deviceId_;
    /**
     * <pre>
     *设备id
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    public String getDeviceId() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *设备id
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MSG_FIELD_NUMBER = 3;
    private java.util.List<IMMessage> msg_;
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    public java.util.List<IMMessage> getMsgList() {
      return msg_;
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    public java.util.List<? extends IMMessageOrBuilder>
        getMsgOrBuilderList() {
      return msg_;
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    public int getMsgCount() {
      return msg_.size();
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    public IMMessage getMsg(int index) {
      return msg_.get(index);
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .IMMessage msg = 3;</code>
     */
    public IMMessageOrBuilder getMsgOrBuilder(
        int index) {
      return msg_.get(index);
    }

    public static final int FROM_FIELD_NUMBER = 4;
    private volatile Object from_;
    /**
     * <code>optional string from = 4;</code>
     */
    public String getFrom() {
      Object ref = from_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        from_ = s;
        return s;
      }
    }
    /**
     * <code>optional string from = 4;</code>
     */
    public com.google.protobuf.ByteString
        getFromBytes() {
      Object ref = from_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        from_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private java.util.List<com.google.protobuf.Any> data_;
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    public java.util.List<com.google.protobuf.Any> getDataList() {
      return data_;
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    public com.google.protobuf.Any getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     *消息List
     * </pre>
     *
     * <code>repeated .google.protobuf.Any data = 5;</code>
     */
    public com.google.protobuf.AnyOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    public static final int CMSGID_FIELD_NUMBER = 6;
    private long cMsgId_;
    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 6;</code>
     */
    public long getCMsgId() {
      return cMsgId_;
    }

    public static final int GZIPDEVICES_FIELD_NUMBER = 7;
    private boolean gzipDevices_;
    /**
     * <pre>
     * deviceId 字段是否使用gzip压缩
     * </pre>
     *
     * <code>optional bool gzipDevices = 7;</code>
     */
    public boolean getGzipDevices() {
      return gzipDevices_;
    }

    public static final int MSGID_FIELD_NUMBER = 8;
    private long msgId_;
    /**
     * <code>optional int64 msgId = 8;</code>
     */
    public long getMsgId() {
      return msgId_;
    }

    public static final int MSGIDS_FIELD_NUMBER = 9;
    private java.util.List<Long> msgIds_;
    /**
     * <pre>
     *消息id列表
     * </pre>
     *
     * <code>repeated int64 msgIds = 9;</code>
     */
    public java.util.List<Long>
        getMsgIdsList() {
      return msgIds_;
    }
    /**
     * <pre>
     *消息id列表
     * </pre>
     *
     * <code>repeated int64 msgIds = 9;</code>
     */
    public int getMsgIdsCount() {
      return msgIds_.size();
    }
    /**
     * <pre>
     *消息id列表
     * </pre>
     *
     * <code>repeated int64 msgIds = 9;</code>
     */
    public long getMsgIds(int index) {
      return msgIds_.get(index);
    }
    private int msgIdsMemoizedSerializedSize = -1;

    public static final int APPID_FIELD_NUMBER = 10;
    private volatile Object appid_;
    /**
     * <pre>
     *应用id
     * </pre>
     *
     * <code>optional string appid = 10;</code>
     */
    public String getAppid() {
      Object ref = appid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *应用id
     * </pre>
     *
     * <code>optional string appid = 10;</code>
     */
    public com.google.protobuf.ByteString
        getAppidBytes() {
      Object ref = appid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        appid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GZIPDEVICEIDS_FIELD_NUMBER = 29;
    private com.google.protobuf.ByteString gzipDeviceIds_;
    /**
     * <pre>
     * 消息批量发送 此字段存放经过gzip压缩后的deviceid列表
     * </pre>
     *
     * <code>optional bytes gzipDeviceIds = 29;</code>
     */
    public com.google.protobuf.ByteString getGzipDeviceIds() {
      return gzipDeviceIds_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, to_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceId_);
      }
      for (int i = 0; i < msg_.size(); i++) {
        output.writeMessage(3, msg_.get(i));
      }
      if (!getFromBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, from_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(5, data_.get(i));
      }
      if (cMsgId_ != 0L) {
        output.writeInt64(6, cMsgId_);
      }
      if (gzipDevices_ != false) {
        output.writeBool(7, gzipDevices_);
      }
      if (msgId_ != 0L) {
        output.writeInt64(8, msgId_);
      }
      if (getMsgIdsList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(msgIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < msgIds_.size(); i++) {
        output.writeInt64NoTag(msgIds_.get(i));
      }
      if (!getAppidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, appid_);
      }
      if (!gzipDeviceIds_.isEmpty()) {
        output.writeBytes(29, gzipDeviceIds_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, to_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceId_);
      }
      for (int i = 0; i < msg_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, msg_.get(i));
      }
      if (!getFromBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, from_);
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, data_.get(i));
      }
      if (cMsgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, cMsgId_);
      }
      if (gzipDevices_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, gzipDevices_);
      }
      if (msgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, msgId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < msgIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(msgIds_.get(i));
        }
        size += dataSize;
        if (!getMsgIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        msgIdsMemoizedSerializedSize = dataSize;
      }
      if (!getAppidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, appid_);
      }
      if (!gzipDeviceIds_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(29, gzipDeviceIds_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MessageList)) {
        return super.equals(obj);
      }
      MessageList other = (MessageList) obj;

      boolean result = true;
      result = result && getTo()
          .equals(other.getTo());
      result = result && getDeviceId()
          .equals(other.getDeviceId());
      result = result && getMsgList()
          .equals(other.getMsgList());
      result = result && getFrom()
          .equals(other.getFrom());
      result = result && getDataList()
          .equals(other.getDataList());
      result = result && (getCMsgId()
          == other.getCMsgId());
      result = result && (getGzipDevices()
          == other.getGzipDevices());
      result = result && (getMsgId()
          == other.getMsgId());
      result = result && getMsgIdsList()
          .equals(other.getMsgIdsList());
      result = result && getAppid()
          .equals(other.getAppid());
      result = result && getGzipDeviceIds()
          .equals(other.getGzipDeviceIds());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo().hashCode();
      hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      if (getMsgCount() > 0) {
        hash = (37 * hash) + MSG_FIELD_NUMBER;
        hash = (53 * hash) + getMsgList().hashCode();
      }
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + getFrom().hashCode();
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (37 * hash) + CMSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCMsgId());
      hash = (37 * hash) + GZIPDEVICES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getGzipDevices());
      hash = (37 * hash) + MSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMsgId());
      if (getMsgIdsCount() > 0) {
        hash = (37 * hash) + MSGIDS_FIELD_NUMBER;
        hash = (53 * hash) + getMsgIdsList().hashCode();
      }
      hash = (37 * hash) + APPID_FIELD_NUMBER;
      hash = (53 * hash) + getAppid().hashCode();
      hash = (37 * hash) + GZIPDEVICEIDS_FIELD_NUMBER;
      hash = (53 * hash) + getGzipDeviceIds().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MessageList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MessageList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MessageList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *消息列表----------------------------------------------------------------------
     * </pre>
     *
     * Protobuf type {@code MessageList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MessageList)
        MessageListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_MessageList_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_MessageList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MessageList.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.MessageList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMsgFieldBuilder();
          getDataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        to_ = "";

        deviceId_ = "";

        if (msgBuilder_ == null) {
          msg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          msgBuilder_.clear();
        }
        from_ = "";

        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          dataBuilder_.clear();
        }
        cMsgId_ = 0L;

        gzipDevices_ = false;

        msgId_ = 0L;

        msgIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        appid_ = "";

        gzipDeviceIds_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_MessageList_descriptor;
      }

      public MessageList getDefaultInstanceForType() {
        return MessageList.getDefaultInstance();
      }

      public MessageList build() {
        MessageList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MessageList buildPartial() {
        MessageList result = new MessageList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.to_ = to_;
        result.deviceId_ = deviceId_;
        if (msgBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            msg_ = java.util.Collections.unmodifiableList(msg_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.msg_ = msg_;
        } else {
          result.msg_ = msgBuilder_.build();
        }
        result.from_ = from_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.cMsgId_ = cMsgId_;
        result.gzipDevices_ = gzipDevices_;
        result.msgId_ = msgId_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          msgIds_ = java.util.Collections.unmodifiableList(msgIds_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.msgIds_ = msgIds_;
        result.appid_ = appid_;
        result.gzipDeviceIds_ = gzipDeviceIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MessageList) {
          return mergeFrom((MessageList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MessageList other) {
        if (other == MessageList.getDefaultInstance()) return this;
        if (!other.getTo().isEmpty()) {
          to_ = other.to_;
          onChanged();
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (msgBuilder_ == null) {
          if (!other.msg_.isEmpty()) {
            if (msg_.isEmpty()) {
              msg_ = other.msg_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMsgIsMutable();
              msg_.addAll(other.msg_);
            }
            onChanged();
          }
        } else {
          if (!other.msg_.isEmpty()) {
            if (msgBuilder_.isEmpty()) {
              msgBuilder_.dispose();
              msgBuilder_ = null;
              msg_ = other.msg_;
              bitField0_ = (bitField0_ & ~0x00000004);
              msgBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMsgFieldBuilder() : null;
            } else {
              msgBuilder_.addAllMessages(other.msg_);
            }
          }
        }
        if (!other.getFrom().isEmpty()) {
          from_ = other.from_;
          onChanged();
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000010);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        if (other.getCMsgId() != 0L) {
          setCMsgId(other.getCMsgId());
        }
        if (other.getGzipDevices() != false) {
          setGzipDevices(other.getGzipDevices());
        }
        if (other.getMsgId() != 0L) {
          setMsgId(other.getMsgId());
        }
        if (!other.msgIds_.isEmpty()) {
          if (msgIds_.isEmpty()) {
            msgIds_ = other.msgIds_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureMsgIdsIsMutable();
            msgIds_.addAll(other.msgIds_);
          }
          onChanged();
        }
        if (!other.getAppid().isEmpty()) {
          appid_ = other.appid_;
          onChanged();
        }
        if (other.getGzipDeviceIds() != com.google.protobuf.ByteString.EMPTY) {
          setGzipDeviceIds(other.getGzipDeviceIds());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MessageList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MessageList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object to_ = "";
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public String getTo() {
        Object ref = to_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          to_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public com.google.protobuf.ByteString
          getToBytes() {
        Object ref = to_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          to_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public Builder setTo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public Builder clearTo() {
        
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public Builder setToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        to_ = value;
        onChanged();
        return this;
      }

      private Object deviceId_ = "";
      /**
       * <pre>
       *设备id
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public String getDeviceId() {
        Object ref = deviceId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *设备id
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *设备id
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder setDeviceId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备id
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备id
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<IMMessage> msg_ =
        java.util.Collections.emptyList();
      private void ensureMsgIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          msg_ = new java.util.ArrayList<IMMessage>(msg_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          IMMessage, IMMessage.Builder, IMMessageOrBuilder> msgBuilder_;

      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public java.util.List<IMMessage> getMsgList() {
        if (msgBuilder_ == null) {
          return java.util.Collections.unmodifiableList(msg_);
        } else {
          return msgBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public int getMsgCount() {
        if (msgBuilder_ == null) {
          return msg_.size();
        } else {
          return msgBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public IMMessage getMsg(int index) {
        if (msgBuilder_ == null) {
          return msg_.get(index);
        } else {
          return msgBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder setMsg(
          int index, IMMessage value) {
        if (msgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgIsMutable();
          msg_.set(index, value);
          onChanged();
        } else {
          msgBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder setMsg(
          int index, IMMessage.Builder builderForValue) {
        if (msgBuilder_ == null) {
          ensureMsgIsMutable();
          msg_.set(index, builderForValue.build());
          onChanged();
        } else {
          msgBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder addMsg(IMMessage value) {
        if (msgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgIsMutable();
          msg_.add(value);
          onChanged();
        } else {
          msgBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder addMsg(
          int index, IMMessage value) {
        if (msgBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMsgIsMutable();
          msg_.add(index, value);
          onChanged();
        } else {
          msgBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder addMsg(
          IMMessage.Builder builderForValue) {
        if (msgBuilder_ == null) {
          ensureMsgIsMutable();
          msg_.add(builderForValue.build());
          onChanged();
        } else {
          msgBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder addMsg(
          int index, IMMessage.Builder builderForValue) {
        if (msgBuilder_ == null) {
          ensureMsgIsMutable();
          msg_.add(index, builderForValue.build());
          onChanged();
        } else {
          msgBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder addAllMsg(
          Iterable<? extends IMMessage> values) {
        if (msgBuilder_ == null) {
          ensureMsgIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, msg_);
          onChanged();
        } else {
          msgBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder clearMsg() {
        if (msgBuilder_ == null) {
          msg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          msgBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public Builder removeMsg(int index) {
        if (msgBuilder_ == null) {
          ensureMsgIsMutable();
          msg_.remove(index);
          onChanged();
        } else {
          msgBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public IMMessage.Builder getMsgBuilder(
          int index) {
        return getMsgFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public IMMessageOrBuilder getMsgOrBuilder(
          int index) {
        if (msgBuilder_ == null) {
          return msg_.get(index);  } else {
          return msgBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public java.util.List<? extends IMMessageOrBuilder>
           getMsgOrBuilderList() {
        if (msgBuilder_ != null) {
          return msgBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(msg_);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public IMMessage.Builder addMsgBuilder() {
        return getMsgFieldBuilder().addBuilder(
            IMMessage.getDefaultInstance());
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public IMMessage.Builder addMsgBuilder(
          int index) {
        return getMsgFieldBuilder().addBuilder(
            index, IMMessage.getDefaultInstance());
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .IMMessage msg = 3;</code>
       */
      public java.util.List<IMMessage.Builder>
           getMsgBuilderList() {
        return getMsgFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          IMMessage, IMMessage.Builder, IMMessageOrBuilder>
          getMsgFieldBuilder() {
        if (msgBuilder_ == null) {
          msgBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              IMMessage, IMMessage.Builder, IMMessageOrBuilder>(
                  msg_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          msg_ = null;
        }
        return msgBuilder_;
      }

      private Object from_ = "";
      /**
       * <code>optional string from = 4;</code>
       */
      public String getFrom() {
        Object ref = from_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          from_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string from = 4;</code>
       */
      public com.google.protobuf.ByteString
          getFromBytes() {
        Object ref = from_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string from = 4;</code>
       */
      public Builder setFrom(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string from = 4;</code>
       */
      public Builder clearFrom() {
        
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }
      /**
       * <code>optional string from = 4;</code>
       */
      public Builder setFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        from_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.google.protobuf.Any> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          data_ = new java.util.ArrayList<com.google.protobuf.Any>(data_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> dataBuilder_;

      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public java.util.List<com.google.protobuf.Any> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public com.google.protobuf.Any getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder setData(
          int index, com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder setData(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder addData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder addData(
          int index, com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder addData(
          com.google.protobuf.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder addData(
          int index, com.google.protobuf.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder addAllData(
          Iterable<? extends com.google.protobuf.Any> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public com.google.protobuf.Any.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public com.google.protobuf.AnyOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public com.google.protobuf.Any.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public com.google.protobuf.Any.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, com.google.protobuf.Any.getDefaultInstance());
      }
      /**
       * <pre>
       *消息List
       * </pre>
       *
       * <code>repeated .google.protobuf.Any data = 5;</code>
       */
      public java.util.List<com.google.protobuf.Any.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private long cMsgId_ ;
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 6;</code>
       */
      public long getCMsgId() {
        return cMsgId_;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 6;</code>
       */
      public Builder setCMsgId(long value) {
        
        cMsgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 6;</code>
       */
      public Builder clearCMsgId() {
        
        cMsgId_ = 0L;
        onChanged();
        return this;
      }

      private boolean gzipDevices_ ;
      /**
       * <pre>
       * deviceId 字段是否使用gzip压缩
       * </pre>
       *
       * <code>optional bool gzipDevices = 7;</code>
       */
      public boolean getGzipDevices() {
        return gzipDevices_;
      }
      /**
       * <pre>
       * deviceId 字段是否使用gzip压缩
       * </pre>
       *
       * <code>optional bool gzipDevices = 7;</code>
       */
      public Builder setGzipDevices(boolean value) {
        
        gzipDevices_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * deviceId 字段是否使用gzip压缩
       * </pre>
       *
       * <code>optional bool gzipDevices = 7;</code>
       */
      public Builder clearGzipDevices() {
        
        gzipDevices_ = false;
        onChanged();
        return this;
      }

      private long msgId_ ;
      /**
       * <code>optional int64 msgId = 8;</code>
       */
      public long getMsgId() {
        return msgId_;
      }
      /**
       * <code>optional int64 msgId = 8;</code>
       */
      public Builder setMsgId(long value) {
        
        msgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 msgId = 8;</code>
       */
      public Builder clearMsgId() {
        
        msgId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<Long> msgIds_ = java.util.Collections.emptyList();
      private void ensureMsgIdsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          msgIds_ = new java.util.ArrayList<Long>(msgIds_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <pre>
       *消息id列表
       * </pre>
       *
       * <code>repeated int64 msgIds = 9;</code>
       */
      public java.util.List<Long>
          getMsgIdsList() {
        return java.util.Collections.unmodifiableList(msgIds_);
      }
      /**
       * <pre>
       *消息id列表
       * </pre>
       *
       * <code>repeated int64 msgIds = 9;</code>
       */
      public int getMsgIdsCount() {
        return msgIds_.size();
      }
      /**
       * <pre>
       *消息id列表
       * </pre>
       *
       * <code>repeated int64 msgIds = 9;</code>
       */
      public long getMsgIds(int index) {
        return msgIds_.get(index);
      }
      /**
       * <pre>
       *消息id列表
       * </pre>
       *
       * <code>repeated int64 msgIds = 9;</code>
       */
      public Builder setMsgIds(
          int index, long value) {
        ensureMsgIdsIsMutable();
        msgIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息id列表
       * </pre>
       *
       * <code>repeated int64 msgIds = 9;</code>
       */
      public Builder addMsgIds(long value) {
        ensureMsgIdsIsMutable();
        msgIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息id列表
       * </pre>
       *
       * <code>repeated int64 msgIds = 9;</code>
       */
      public Builder addAllMsgIds(
          Iterable<? extends Long> values) {
        ensureMsgIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, msgIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息id列表
       * </pre>
       *
       * <code>repeated int64 msgIds = 9;</code>
       */
      public Builder clearMsgIds() {
        msgIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private Object appid_ = "";
      /**
       * <pre>
       *应用id
       * </pre>
       *
       * <code>optional string appid = 10;</code>
       */
      public String getAppid() {
        Object ref = appid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          appid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *应用id
       * </pre>
       *
       * <code>optional string appid = 10;</code>
       */
      public com.google.protobuf.ByteString
          getAppidBytes() {
        Object ref = appid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          appid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *应用id
       * </pre>
       *
       * <code>optional string appid = 10;</code>
       */
      public Builder setAppid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        appid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用id
       * </pre>
       *
       * <code>optional string appid = 10;</code>
       */
      public Builder clearAppid() {
        
        appid_ = getDefaultInstance().getAppid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用id
       * </pre>
       *
       * <code>optional string appid = 10;</code>
       */
      public Builder setAppidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        appid_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString gzipDeviceIds_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 消息批量发送 此字段存放经过gzip压缩后的deviceid列表
       * </pre>
       *
       * <code>optional bytes gzipDeviceIds = 29;</code>
       */
      public com.google.protobuf.ByteString getGzipDeviceIds() {
        return gzipDeviceIds_;
      }
      /**
       * <pre>
       * 消息批量发送 此字段存放经过gzip压缩后的deviceid列表
       * </pre>
       *
       * <code>optional bytes gzipDeviceIds = 29;</code>
       */
      public Builder setGzipDeviceIds(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gzipDeviceIds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息批量发送 此字段存放经过gzip压缩后的deviceid列表
       * </pre>
       *
       * <code>optional bytes gzipDeviceIds = 29;</code>
       */
      public Builder clearGzipDeviceIds() {
        
        gzipDeviceIds_ = getDefaultInstance().getGzipDeviceIds();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MessageList)
    }

    // @@protoc_insertion_point(class_scope:MessageList)
    private static final MessageList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MessageList();
    }

    public static MessageList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageList>
        PARSER = new com.google.protobuf.AbstractParser<MessageList>() {
      public MessageList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MessageList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageList> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MessageList> getParserForType() {
      return PARSER;
    }

    public MessageList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IMMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IMMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *应用ID
     * </pre>
     *
     * <code>optional string appId = 1;</code>
     */
    String getAppId();
    /**
     * <pre>
     *应用ID
     * </pre>
     *
     * <code>optional string appId = 1;</code>
     */
    com.google.protobuf.ByteString
        getAppIdBytes();

    /**
     * <pre>
     *发送者
     * </pre>
     *
     * <code>optional string from = 2;</code>
     */
    String getFrom();
    /**
     * <pre>
     *发送者
     * </pre>
     *
     * <code>optional string from = 2;</code>
     */
    com.google.protobuf.ByteString
        getFromBytes();

    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 3;</code>
     */
    String getTo();
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 3;</code>
     */
    com.google.protobuf.ByteString
        getToBytes();

    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 4;</code>
     */
    String getDeviceId();
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 4;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     *类型 同包头type，见枚举： TypeEnum
     * </pre>
     *
     * <code>optional int32 type = 5;</code>
     */
    int getType();

    /**
     * <pre>
     *二级类型 见枚举：SubTypeEnum
     * </pre>
     *
     * <code>optional int32 subType = 6;</code>
     */
    int getSubType();

    /**
     * <pre>
     *消息标题
     * </pre>
     *
     * <code>optional string title = 7;</code>
     */
    String getTitle();
    /**
     * <pre>
     *消息标题
     * </pre>
     *
     * <code>optional string title = 7;</code>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    /**
     * <pre>
     *消息id
     * </pre>
     *
     * <code>optional int64 msgId = 8;</code>
     */
    long getMsgId();

    /**
     * <pre>
     *消息Sequence,内容为server时间戳
     * </pre>
     *
     * <code>optional int64 sequence = 9;</code>
     */
    long getSequence();

    /**
     * <pre>
     *会话是否有&#64;我的标识符
     * </pre>
     *
     * <code>optional string flag = 10;</code>
     */
    String getFlag();
    /**
     * <pre>
     *会话是否有&#64;我的标识符
     * </pre>
     *
     * <code>optional string flag = 10;</code>
     */
    com.google.protobuf.ByteString
        getFlagBytes();

    /**
     * <pre>
     *消息内容
     * </pre>
     *
     * <code>optional string content = 11;</code>
     */
    String getContent();
    /**
     * <pre>
     *消息内容
     * </pre>
     *
     * <code>optional string content = 11;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    /**
     * <pre>
     *客户端时间
     * </pre>
     *
     * <code>optional int64 clientTime = 12;</code>
     */
    long getClientTime();

    /**
     * <pre>
     *服务端时间
     * </pre>
     *
     * <code>optional int64 serverTime = 13;</code>
     */
    long getServerTime();

    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 14;</code>
     */
    long getCMsgId();

    /**
     * <pre>
     *业务状态
     * </pre>
     *
     * <code>optional int32 bizStatus = 15;</code>
     */
    int getBizStatus();

    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>optional int32 deviceType = 16;</code>
     */
    int getDeviceType();

    /**
     * <pre>
     *消息的未读人数：消息已读/未读情况。会话消息未读数由端上计算
     * </pre>
     *
     * <code>optional int32 msgUnReadNum = 17;</code>
     */
    int getMsgUnReadNum();

    /**
     * <pre>
     *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
     * </pre>
     *
     * <code>optional string extend1 = 18;</code>
     */
    String getExtend1();
    /**
     * <pre>
     *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
     * </pre>
     *
     * <code>optional string extend1 = 18;</code>
     */
    com.google.protobuf.ByteString
        getExtend1Bytes();

    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend2 = 19;</code>
     */
    String getExtend2();
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend2 = 19;</code>
     */
    com.google.protobuf.ByteString
        getExtend2Bytes();

    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend3 = 20;</code>
     */
    String getExtend3();
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend3 = 20;</code>
     */
    com.google.protobuf.ByteString
        getExtend3Bytes();

    /**
     * <pre>
     *备用  二进制存储
     * </pre>
     *
     * <code>optional bytes extend4 = 21;</code>
     */
    com.google.protobuf.ByteString getExtend4();

    /**
     * <pre>
     *备用 群组消息:userId
     * </pre>
     *
     * <code>optional string extend5 = 22;</code>
     */
    String getExtend5();
    /**
     * <pre>
     *备用 群组消息:userId
     * </pre>
     *
     * <code>optional string extend5 = 22;</code>
     */
    com.google.protobuf.ByteString
        getExtend5Bytes();

    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend6 = 23;</code>
     */
    String getExtend6();
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend6 = 23;</code>
     */
    com.google.protobuf.ByteString
        getExtend6Bytes();

    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend7 = 24;</code>
     */
    String getExtend7();
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend7 = 24;</code>
     */
    com.google.protobuf.ByteString
        getExtend7Bytes();

    /**
     * <pre>
     *请求标识ID,采用UUID
     * </pre>
     *
     * <code>optional string requestId = 25;</code>
     */
    String getRequestId();
    /**
     * <pre>
     *请求标识ID,采用UUID
     * </pre>
     *
     * <code>optional string requestId = 25;</code>
     */
    com.google.protobuf.ByteString
        getRequestIdBytes();

    /**
     * <pre>
     *消息优先级  直播间根据消息优先级丢弃消息 0 1 2 3
     * </pre>
     *
     * <code>optional int32 priority = 26;</code>
     */
    int getPriority();

    /**
     * <pre>
     *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
     * </pre>
     *
     * <code>optional string toAppid = 27;</code>
     */
    String getToAppid();
    /**
     * <pre>
     *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
     * </pre>
     *
     * <code>optional string toAppid = 27;</code>
     */
    com.google.protobuf.ByteString
        getToAppidBytes();

    /**
     * <pre>
     * live ip  地址
     * </pre>
     *
     * <code>optional string liveip = 28;</code>
     */
    String getLiveip();
    /**
     * <pre>
     * live ip  地址
     * </pre>
     *
     * <code>optional string liveip = 28;</code>
     */
    com.google.protobuf.ByteString
        getLiveipBytes();
  }
  /**
   * <pre>
   *消息, 消息回执见:MessageAck
   * </pre>
   *
   * Protobuf type {@code IMMessage}
   */
  public  static final class IMMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IMMessage)
      IMMessageOrBuilder {
    // Use IMMessage.newBuilder() to construct.
    private IMMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IMMessage() {
      appId_ = "";
      from_ = "";
      to_ = "";
      deviceId_ = "";
      type_ = 0;
      subType_ = 0;
      title_ = "";
      msgId_ = 0L;
      sequence_ = 0L;
      flag_ = "";
      content_ = "";
      clientTime_ = 0L;
      serverTime_ = 0L;
      cMsgId_ = 0L;
      bizStatus_ = 0;
      deviceType_ = 0;
      msgUnReadNum_ = 0;
      extend1_ = "";
      extend2_ = "";
      extend3_ = "";
      extend4_ = com.google.protobuf.ByteString.EMPTY;
      extend5_ = "";
      extend6_ = "";
      extend7_ = "";
      requestId_ = "";
      priority_ = 0;
      toAppid_ = "";
      liveip_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private IMMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              appId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              from_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              to_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 40: {

              type_ = input.readInt32();
              break;
            }
            case 48: {

              subType_ = input.readInt32();
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              title_ = s;
              break;
            }
            case 64: {

              msgId_ = input.readInt64();
              break;
            }
            case 72: {

              sequence_ = input.readInt64();
              break;
            }
            case 82: {
              String s = input.readStringRequireUtf8();

              flag_ = s;
              break;
            }
            case 90: {
              String s = input.readStringRequireUtf8();

              content_ = s;
              break;
            }
            case 96: {

              clientTime_ = input.readInt64();
              break;
            }
            case 104: {

              serverTime_ = input.readInt64();
              break;
            }
            case 112: {

              cMsgId_ = input.readInt64();
              break;
            }
            case 120: {

              bizStatus_ = input.readInt32();
              break;
            }
            case 128: {

              deviceType_ = input.readInt32();
              break;
            }
            case 136: {

              msgUnReadNum_ = input.readInt32();
              break;
            }
            case 146: {
              String s = input.readStringRequireUtf8();

              extend1_ = s;
              break;
            }
            case 154: {
              String s = input.readStringRequireUtf8();

              extend2_ = s;
              break;
            }
            case 162: {
              String s = input.readStringRequireUtf8();

              extend3_ = s;
              break;
            }
            case 170: {

              extend4_ = input.readBytes();
              break;
            }
            case 178: {
              String s = input.readStringRequireUtf8();

              extend5_ = s;
              break;
            }
            case 186: {
              String s = input.readStringRequireUtf8();

              extend6_ = s;
              break;
            }
            case 194: {
              String s = input.readStringRequireUtf8();

              extend7_ = s;
              break;
            }
            case 202: {
              String s = input.readStringRequireUtf8();

              requestId_ = s;
              break;
            }
            case 208: {

              priority_ = input.readInt32();
              break;
            }
            case 218: {
              String s = input.readStringRequireUtf8();

              toAppid_ = s;
              break;
            }
            case 226: {
              String s = input.readStringRequireUtf8();

              liveip_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_IMMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_IMMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              IMMessage.class, Builder.class);
    }

    public static final int APPID_FIELD_NUMBER = 1;
    private volatile Object appId_;
    /**
     * <pre>
     *应用ID
     * </pre>
     *
     * <code>optional string appId = 1;</code>
     */
    public String getAppId() {
      Object ref = appId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *应用ID
     * </pre>
     *
     * <code>optional string appId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAppIdBytes() {
      Object ref = appId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        appId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FROM_FIELD_NUMBER = 2;
    private volatile Object from_;
    /**
     * <pre>
     *发送者
     * </pre>
     *
     * <code>optional string from = 2;</code>
     */
    public String getFrom() {
      Object ref = from_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        from_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *发送者
     * </pre>
     *
     * <code>optional string from = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFromBytes() {
      Object ref = from_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        from_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TO_FIELD_NUMBER = 3;
    private volatile Object to_;
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 3;</code>
     */
    public String getTo() {
      Object ref = to_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        to_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 3;</code>
     */
    public com.google.protobuf.ByteString
        getToBytes() {
      Object ref = to_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        to_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICEID_FIELD_NUMBER = 4;
    private volatile Object deviceId_;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 4;</code>
     */
    public String getDeviceId() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <pre>
     *类型 同包头type，见枚举： TypeEnum
     * </pre>
     *
     * <code>optional int32 type = 5;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int SUBTYPE_FIELD_NUMBER = 6;
    private int subType_;
    /**
     * <pre>
     *二级类型 见枚举：SubTypeEnum
     * </pre>
     *
     * <code>optional int32 subType = 6;</code>
     */
    public int getSubType() {
      return subType_;
    }

    public static final int TITLE_FIELD_NUMBER = 7;
    private volatile Object title_;
    /**
     * <pre>
     *消息标题
     * </pre>
     *
     * <code>optional string title = 7;</code>
     */
    public String getTitle() {
      Object ref = title_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        title_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *消息标题
     * </pre>
     *
     * <code>optional string title = 7;</code>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MSGID_FIELD_NUMBER = 8;
    private long msgId_;
    /**
     * <pre>
     *消息id
     * </pre>
     *
     * <code>optional int64 msgId = 8;</code>
     */
    public long getMsgId() {
      return msgId_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 9;
    private long sequence_;
    /**
     * <pre>
     *消息Sequence,内容为server时间戳
     * </pre>
     *
     * <code>optional int64 sequence = 9;</code>
     */
    public long getSequence() {
      return sequence_;
    }

    public static final int FLAG_FIELD_NUMBER = 10;
    private volatile Object flag_;
    /**
     * <pre>
     *会话是否有&#64;我的标识符
     * </pre>
     *
     * <code>optional string flag = 10;</code>
     */
    public String getFlag() {
      Object ref = flag_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        flag_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *会话是否有&#64;我的标识符
     * </pre>
     *
     * <code>optional string flag = 10;</code>
     */
    public com.google.protobuf.ByteString
        getFlagBytes() {
      Object ref = flag_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        flag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONTENT_FIELD_NUMBER = 11;
    private volatile Object content_;
    /**
     * <pre>
     *消息内容
     * </pre>
     *
     * <code>optional string content = 11;</code>
     */
    public String getContent() {
      Object ref = content_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        content_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *消息内容
     * </pre>
     *
     * <code>optional string content = 11;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      Object ref = content_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLIENTTIME_FIELD_NUMBER = 12;
    private long clientTime_;
    /**
     * <pre>
     *客户端时间
     * </pre>
     *
     * <code>optional int64 clientTime = 12;</code>
     */
    public long getClientTime() {
      return clientTime_;
    }

    public static final int SERVERTIME_FIELD_NUMBER = 13;
    private long serverTime_;
    /**
     * <pre>
     *服务端时间
     * </pre>
     *
     * <code>optional int64 serverTime = 13;</code>
     */
    public long getServerTime() {
      return serverTime_;
    }

    public static final int CMSGID_FIELD_NUMBER = 14;
    private long cMsgId_;
    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 14;</code>
     */
    public long getCMsgId() {
      return cMsgId_;
    }

    public static final int BIZSTATUS_FIELD_NUMBER = 15;
    private int bizStatus_;
    /**
     * <pre>
     *业务状态
     * </pre>
     *
     * <code>optional int32 bizStatus = 15;</code>
     */
    public int getBizStatus() {
      return bizStatus_;
    }

    public static final int DEVICETYPE_FIELD_NUMBER = 16;
    private int deviceType_;
    /**
     * <pre>
     *设备类型
     * </pre>
     *
     * <code>optional int32 deviceType = 16;</code>
     */
    public int getDeviceType() {
      return deviceType_;
    }

    public static final int MSGUNREADNUM_FIELD_NUMBER = 17;
    private int msgUnReadNum_;
    /**
     * <pre>
     *消息的未读人数：消息已读/未读情况。会话消息未读数由端上计算
     * </pre>
     *
     * <code>optional int32 msgUnReadNum = 17;</code>
     */
    public int getMsgUnReadNum() {
      return msgUnReadNum_;
    }

    public static final int EXTEND1_FIELD_NUMBER = 18;
    private volatile Object extend1_;
    /**
     * <pre>
     *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
     * </pre>
     *
     * <code>optional string extend1 = 18;</code>
     */
    public String getExtend1() {
      Object ref = extend1_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend1_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
     * </pre>
     *
     * <code>optional string extend1 = 18;</code>
     */
    public com.google.protobuf.ByteString
        getExtend1Bytes() {
      Object ref = extend1_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTEND2_FIELD_NUMBER = 19;
    private volatile Object extend2_;
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend2 = 19;</code>
     */
    public String getExtend2() {
      Object ref = extend2_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend2_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend2 = 19;</code>
     */
    public com.google.protobuf.ByteString
        getExtend2Bytes() {
      Object ref = extend2_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTEND3_FIELD_NUMBER = 20;
    private volatile Object extend3_;
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend3 = 20;</code>
     */
    public String getExtend3() {
      Object ref = extend3_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend3_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend3 = 20;</code>
     */
    public com.google.protobuf.ByteString
        getExtend3Bytes() {
      Object ref = extend3_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend3_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTEND4_FIELD_NUMBER = 21;
    private com.google.protobuf.ByteString extend4_;
    /**
     * <pre>
     *备用  二进制存储
     * </pre>
     *
     * <code>optional bytes extend4 = 21;</code>
     */
    public com.google.protobuf.ByteString getExtend4() {
      return extend4_;
    }

    public static final int EXTEND5_FIELD_NUMBER = 22;
    private volatile Object extend5_;
    /**
     * <pre>
     *备用 群组消息:userId
     * </pre>
     *
     * <code>optional string extend5 = 22;</code>
     */
    public String getExtend5() {
      Object ref = extend5_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend5_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *备用 群组消息:userId
     * </pre>
     *
     * <code>optional string extend5 = 22;</code>
     */
    public com.google.protobuf.ByteString
        getExtend5Bytes() {
      Object ref = extend5_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend5_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTEND6_FIELD_NUMBER = 23;
    private volatile Object extend6_;
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend6 = 23;</code>
     */
    public String getExtend6() {
      Object ref = extend6_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend6_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend6 = 23;</code>
     */
    public com.google.protobuf.ByteString
        getExtend6Bytes() {
      Object ref = extend6_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend6_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTEND7_FIELD_NUMBER = 24;
    private volatile Object extend7_;
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend7 = 24;</code>
     */
    public String getExtend7() {
      Object ref = extend7_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend7_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *备用
     * </pre>
     *
     * <code>optional string extend7 = 24;</code>
     */
    public com.google.protobuf.ByteString
        getExtend7Bytes() {
      Object ref = extend7_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend7_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUESTID_FIELD_NUMBER = 25;
    private volatile Object requestId_;
    /**
     * <pre>
     *请求标识ID,采用UUID
     * </pre>
     *
     * <code>optional string requestId = 25;</code>
     */
    public String getRequestId() {
      Object ref = requestId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        requestId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *请求标识ID,采用UUID
     * </pre>
     *
     * <code>optional string requestId = 25;</code>
     */
    public com.google.protobuf.ByteString
        getRequestIdBytes() {
      Object ref = requestId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        requestId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PRIORITY_FIELD_NUMBER = 26;
    private int priority_;
    /**
     * <pre>
     *消息优先级  直播间根据消息优先级丢弃消息 0 1 2 3
     * </pre>
     *
     * <code>optional int32 priority = 26;</code>
     */
    public int getPriority() {
      return priority_;
    }

    public static final int TOAPPID_FIELD_NUMBER = 27;
    private volatile Object toAppid_;
    /**
     * <pre>
     *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
     * </pre>
     *
     * <code>optional string toAppid = 27;</code>
     */
    public String getToAppid() {
      Object ref = toAppid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        toAppid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
     * </pre>
     *
     * <code>optional string toAppid = 27;</code>
     */
    public com.google.protobuf.ByteString
        getToAppidBytes() {
      Object ref = toAppid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        toAppid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIVEIP_FIELD_NUMBER = 28;
    private volatile Object liveip_;
    /**
     * <pre>
     * live ip  地址
     * </pre>
     *
     * <code>optional string liveip = 28;</code>
     */
    public String getLiveip() {
      Object ref = liveip_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        liveip_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * live ip  地址
     * </pre>
     *
     * <code>optional string liveip = 28;</code>
     */
    public com.google.protobuf.ByteString
        getLiveipBytes() {
      Object ref = liveip_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        liveip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAppIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, appId_);
      }
      if (!getFromBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, from_);
      }
      if (!getToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, to_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, deviceId_);
      }
      if (type_ != 0) {
        output.writeInt32(5, type_);
      }
      if (subType_ != 0) {
        output.writeInt32(6, subType_);
      }
      if (!getTitleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, title_);
      }
      if (msgId_ != 0L) {
        output.writeInt64(8, msgId_);
      }
      if (sequence_ != 0L) {
        output.writeInt64(9, sequence_);
      }
      if (!getFlagBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, flag_);
      }
      if (!getContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, content_);
      }
      if (clientTime_ != 0L) {
        output.writeInt64(12, clientTime_);
      }
      if (serverTime_ != 0L) {
        output.writeInt64(13, serverTime_);
      }
      if (cMsgId_ != 0L) {
        output.writeInt64(14, cMsgId_);
      }
      if (bizStatus_ != 0) {
        output.writeInt32(15, bizStatus_);
      }
      if (deviceType_ != 0) {
        output.writeInt32(16, deviceType_);
      }
      if (msgUnReadNum_ != 0) {
        output.writeInt32(17, msgUnReadNum_);
      }
      if (!getExtend1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 18, extend1_);
      }
      if (!getExtend2Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 19, extend2_);
      }
      if (!getExtend3Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, extend3_);
      }
      if (!extend4_.isEmpty()) {
        output.writeBytes(21, extend4_);
      }
      if (!getExtend5Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 22, extend5_);
      }
      if (!getExtend6Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 23, extend6_);
      }
      if (!getExtend7Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 24, extend7_);
      }
      if (!getRequestIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 25, requestId_);
      }
      if (priority_ != 0) {
        output.writeInt32(26, priority_);
      }
      if (!getToAppidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 27, toAppid_);
      }
      if (!getLiveipBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 28, liveip_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAppIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, appId_);
      }
      if (!getFromBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, from_);
      }
      if (!getToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, to_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, deviceId_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, type_);
      }
      if (subType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, subType_);
      }
      if (!getTitleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, title_);
      }
      if (msgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, msgId_);
      }
      if (sequence_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, sequence_);
      }
      if (!getFlagBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, flag_);
      }
      if (!getContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, content_);
      }
      if (clientTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, clientTime_);
      }
      if (serverTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, serverTime_);
      }
      if (cMsgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, cMsgId_);
      }
      if (bizStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, bizStatus_);
      }
      if (deviceType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, deviceType_);
      }
      if (msgUnReadNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, msgUnReadNum_);
      }
      if (!getExtend1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(18, extend1_);
      }
      if (!getExtend2Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, extend2_);
      }
      if (!getExtend3Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, extend3_);
      }
      if (!extend4_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, extend4_);
      }
      if (!getExtend5Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(22, extend5_);
      }
      if (!getExtend6Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, extend6_);
      }
      if (!getExtend7Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, extend7_);
      }
      if (!getRequestIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(25, requestId_);
      }
      if (priority_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, priority_);
      }
      if (!getToAppidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(27, toAppid_);
      }
      if (!getLiveipBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(28, liveip_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof IMMessage)) {
        return super.equals(obj);
      }
      IMMessage other = (IMMessage) obj;

      boolean result = true;
      result = result && getAppId()
          .equals(other.getAppId());
      result = result && getFrom()
          .equals(other.getFrom());
      result = result && getTo()
          .equals(other.getTo());
      result = result && getDeviceId()
          .equals(other.getDeviceId());
      result = result && (getType()
          == other.getType());
      result = result && (getSubType()
          == other.getSubType());
      result = result && getTitle()
          .equals(other.getTitle());
      result = result && (getMsgId()
          == other.getMsgId());
      result = result && (getSequence()
          == other.getSequence());
      result = result && getFlag()
          .equals(other.getFlag());
      result = result && getContent()
          .equals(other.getContent());
      result = result && (getClientTime()
          == other.getClientTime());
      result = result && (getServerTime()
          == other.getServerTime());
      result = result && (getCMsgId()
          == other.getCMsgId());
      result = result && (getBizStatus()
          == other.getBizStatus());
      result = result && (getDeviceType()
          == other.getDeviceType());
      result = result && (getMsgUnReadNum()
          == other.getMsgUnReadNum());
      result = result && getExtend1()
          .equals(other.getExtend1());
      result = result && getExtend2()
          .equals(other.getExtend2());
      result = result && getExtend3()
          .equals(other.getExtend3());
      result = result && getExtend4()
          .equals(other.getExtend4());
      result = result && getExtend5()
          .equals(other.getExtend5());
      result = result && getExtend6()
          .equals(other.getExtend6());
      result = result && getExtend7()
          .equals(other.getExtend7());
      result = result && getRequestId()
          .equals(other.getRequestId());
      result = result && (getPriority()
          == other.getPriority());
      result = result && getToAppid()
          .equals(other.getToAppid());
      result = result && getLiveip()
          .equals(other.getLiveip());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + APPID_FIELD_NUMBER;
      hash = (53 * hash) + getAppId().hashCode();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + getFrom().hashCode();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo().hashCode();
      hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + SUBTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSubType();
      hash = (37 * hash) + TITLE_FIELD_NUMBER;
      hash = (53 * hash) + getTitle().hashCode();
      hash = (37 * hash) + MSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMsgId());
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequence());
      hash = (37 * hash) + FLAG_FIELD_NUMBER;
      hash = (53 * hash) + getFlag().hashCode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (37 * hash) + CLIENTTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getClientTime());
      hash = (37 * hash) + SERVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getServerTime());
      hash = (37 * hash) + CMSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCMsgId());
      hash = (37 * hash) + BIZSTATUS_FIELD_NUMBER;
      hash = (53 * hash) + getBizStatus();
      hash = (37 * hash) + DEVICETYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceType();
      hash = (37 * hash) + MSGUNREADNUM_FIELD_NUMBER;
      hash = (53 * hash) + getMsgUnReadNum();
      hash = (37 * hash) + EXTEND1_FIELD_NUMBER;
      hash = (53 * hash) + getExtend1().hashCode();
      hash = (37 * hash) + EXTEND2_FIELD_NUMBER;
      hash = (53 * hash) + getExtend2().hashCode();
      hash = (37 * hash) + EXTEND3_FIELD_NUMBER;
      hash = (53 * hash) + getExtend3().hashCode();
      hash = (37 * hash) + EXTEND4_FIELD_NUMBER;
      hash = (53 * hash) + getExtend4().hashCode();
      hash = (37 * hash) + EXTEND5_FIELD_NUMBER;
      hash = (53 * hash) + getExtend5().hashCode();
      hash = (37 * hash) + EXTEND6_FIELD_NUMBER;
      hash = (53 * hash) + getExtend6().hashCode();
      hash = (37 * hash) + EXTEND7_FIELD_NUMBER;
      hash = (53 * hash) + getExtend7().hashCode();
      hash = (37 * hash) + REQUESTID_FIELD_NUMBER;
      hash = (53 * hash) + getRequestId().hashCode();
      hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
      hash = (53 * hash) + getPriority();
      hash = (37 * hash) + TOAPPID_FIELD_NUMBER;
      hash = (53 * hash) + getToAppid().hashCode();
      hash = (37 * hash) + LIVEIP_FIELD_NUMBER;
      hash = (53 * hash) + getLiveip().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static IMMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IMMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IMMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static IMMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static IMMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IMMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static IMMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static IMMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static IMMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static IMMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(IMMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *消息, 消息回执见:MessageAck
     * </pre>
     *
     * Protobuf type {@code IMMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IMMessage)
        IMMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_IMMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_IMMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                IMMessage.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.IMMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        appId_ = "";

        from_ = "";

        to_ = "";

        deviceId_ = "";

        type_ = 0;

        subType_ = 0;

        title_ = "";

        msgId_ = 0L;

        sequence_ = 0L;

        flag_ = "";

        content_ = "";

        clientTime_ = 0L;

        serverTime_ = 0L;

        cMsgId_ = 0L;

        bizStatus_ = 0;

        deviceType_ = 0;

        msgUnReadNum_ = 0;

        extend1_ = "";

        extend2_ = "";

        extend3_ = "";

        extend4_ = com.google.protobuf.ByteString.EMPTY;

        extend5_ = "";

        extend6_ = "";

        extend7_ = "";

        requestId_ = "";

        priority_ = 0;

        toAppid_ = "";

        liveip_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_IMMessage_descriptor;
      }

      public IMMessage getDefaultInstanceForType() {
        return IMMessage.getDefaultInstance();
      }

      public IMMessage build() {
        IMMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public IMMessage buildPartial() {
        IMMessage result = new IMMessage(this);
        result.appId_ = appId_;
        result.from_ = from_;
        result.to_ = to_;
        result.deviceId_ = deviceId_;
        result.type_ = type_;
        result.subType_ = subType_;
        result.title_ = title_;
        result.msgId_ = msgId_;
        result.sequence_ = sequence_;
        result.flag_ = flag_;
        result.content_ = content_;
        result.clientTime_ = clientTime_;
        result.serverTime_ = serverTime_;
        result.cMsgId_ = cMsgId_;
        result.bizStatus_ = bizStatus_;
        result.deviceType_ = deviceType_;
        result.msgUnReadNum_ = msgUnReadNum_;
        result.extend1_ = extend1_;
        result.extend2_ = extend2_;
        result.extend3_ = extend3_;
        result.extend4_ = extend4_;
        result.extend5_ = extend5_;
        result.extend6_ = extend6_;
        result.extend7_ = extend7_;
        result.requestId_ = requestId_;
        result.priority_ = priority_;
        result.toAppid_ = toAppid_;
        result.liveip_ = liveip_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof IMMessage) {
          return mergeFrom((IMMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(IMMessage other) {
        if (other == IMMessage.getDefaultInstance()) return this;
        if (!other.getAppId().isEmpty()) {
          appId_ = other.appId_;
          onChanged();
        }
        if (!other.getFrom().isEmpty()) {
          from_ = other.from_;
          onChanged();
        }
        if (!other.getTo().isEmpty()) {
          to_ = other.to_;
          onChanged();
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getSubType() != 0) {
          setSubType(other.getSubType());
        }
        if (!other.getTitle().isEmpty()) {
          title_ = other.title_;
          onChanged();
        }
        if (other.getMsgId() != 0L) {
          setMsgId(other.getMsgId());
        }
        if (other.getSequence() != 0L) {
          setSequence(other.getSequence());
        }
        if (!other.getFlag().isEmpty()) {
          flag_ = other.flag_;
          onChanged();
        }
        if (!other.getContent().isEmpty()) {
          content_ = other.content_;
          onChanged();
        }
        if (other.getClientTime() != 0L) {
          setClientTime(other.getClientTime());
        }
        if (other.getServerTime() != 0L) {
          setServerTime(other.getServerTime());
        }
        if (other.getCMsgId() != 0L) {
          setCMsgId(other.getCMsgId());
        }
        if (other.getBizStatus() != 0) {
          setBizStatus(other.getBizStatus());
        }
        if (other.getDeviceType() != 0) {
          setDeviceType(other.getDeviceType());
        }
        if (other.getMsgUnReadNum() != 0) {
          setMsgUnReadNum(other.getMsgUnReadNum());
        }
        if (!other.getExtend1().isEmpty()) {
          extend1_ = other.extend1_;
          onChanged();
        }
        if (!other.getExtend2().isEmpty()) {
          extend2_ = other.extend2_;
          onChanged();
        }
        if (!other.getExtend3().isEmpty()) {
          extend3_ = other.extend3_;
          onChanged();
        }
        if (other.getExtend4() != com.google.protobuf.ByteString.EMPTY) {
          setExtend4(other.getExtend4());
        }
        if (!other.getExtend5().isEmpty()) {
          extend5_ = other.extend5_;
          onChanged();
        }
        if (!other.getExtend6().isEmpty()) {
          extend6_ = other.extend6_;
          onChanged();
        }
        if (!other.getExtend7().isEmpty()) {
          extend7_ = other.extend7_;
          onChanged();
        }
        if (!other.getRequestId().isEmpty()) {
          requestId_ = other.requestId_;
          onChanged();
        }
        if (other.getPriority() != 0) {
          setPriority(other.getPriority());
        }
        if (!other.getToAppid().isEmpty()) {
          toAppid_ = other.toAppid_;
          onChanged();
        }
        if (!other.getLiveip().isEmpty()) {
          liveip_ = other.liveip_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        IMMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (IMMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object appId_ = "";
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 1;</code>
       */
      public String getAppId() {
        Object ref = appId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          appId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAppIdBytes() {
        Object ref = appId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          appId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 1;</code>
       */
      public Builder setAppId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        appId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 1;</code>
       */
      public Builder clearAppId() {
        
        appId_ = getDefaultInstance().getAppId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用ID
       * </pre>
       *
       * <code>optional string appId = 1;</code>
       */
      public Builder setAppIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        appId_ = value;
        onChanged();
        return this;
      }

      private Object from_ = "";
      /**
       * <pre>
       *发送者
       * </pre>
       *
       * <code>optional string from = 2;</code>
       */
      public String getFrom() {
        Object ref = from_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          from_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *发送者
       * </pre>
       *
       * <code>optional string from = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFromBytes() {
        Object ref = from_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          from_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *发送者
       * </pre>
       *
       * <code>optional string from = 2;</code>
       */
      public Builder setFrom(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发送者
       * </pre>
       *
       * <code>optional string from = 2;</code>
       */
      public Builder clearFrom() {
        
        from_ = getDefaultInstance().getFrom();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *发送者
       * </pre>
       *
       * <code>optional string from = 2;</code>
       */
      public Builder setFromBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        from_ = value;
        onChanged();
        return this;
      }

      private Object to_ = "";
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 3;</code>
       */
      public String getTo() {
        Object ref = to_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          to_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 3;</code>
       */
      public com.google.protobuf.ByteString
          getToBytes() {
        Object ref = to_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          to_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 3;</code>
       */
      public Builder setTo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 3;</code>
       */
      public Builder clearTo() {
        
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 3;</code>
       */
      public Builder setToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        to_ = value;
        onChanged();
        return this;
      }

      private Object deviceId_ = "";
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 4;</code>
       */
      public String getDeviceId() {
        Object ref = deviceId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 4;</code>
       */
      public Builder setDeviceId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 4;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 4;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *类型 同包头type，见枚举： TypeEnum
       * </pre>
       *
       * <code>optional int32 type = 5;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *类型 同包头type，见枚举： TypeEnum
       * </pre>
       *
       * <code>optional int32 type = 5;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *类型 同包头type，见枚举： TypeEnum
       * </pre>
       *
       * <code>optional int32 type = 5;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int subType_ ;
      /**
       * <pre>
       *二级类型 见枚举：SubTypeEnum
       * </pre>
       *
       * <code>optional int32 subType = 6;</code>
       */
      public int getSubType() {
        return subType_;
      }
      /**
       * <pre>
       *二级类型 见枚举：SubTypeEnum
       * </pre>
       *
       * <code>optional int32 subType = 6;</code>
       */
      public Builder setSubType(int value) {
        
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *二级类型 见枚举：SubTypeEnum
       * </pre>
       *
       * <code>optional int32 subType = 6;</code>
       */
      public Builder clearSubType() {
        
        subType_ = 0;
        onChanged();
        return this;
      }

      private Object title_ = "";
      /**
       * <pre>
       *消息标题
       * </pre>
       *
       * <code>optional string title = 7;</code>
       */
      public String getTitle() {
        Object ref = title_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *消息标题
       * </pre>
       *
       * <code>optional string title = 7;</code>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *消息标题
       * </pre>
       *
       * <code>optional string title = 7;</code>
       */
      public Builder setTitle(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        title_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息标题
       * </pre>
       *
       * <code>optional string title = 7;</code>
       */
      public Builder clearTitle() {
        
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息标题
       * </pre>
       *
       * <code>optional string title = 7;</code>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        title_ = value;
        onChanged();
        return this;
      }

      private long msgId_ ;
      /**
       * <pre>
       *消息id
       * </pre>
       *
       * <code>optional int64 msgId = 8;</code>
       */
      public long getMsgId() {
        return msgId_;
      }
      /**
       * <pre>
       *消息id
       * </pre>
       *
       * <code>optional int64 msgId = 8;</code>
       */
      public Builder setMsgId(long value) {
        
        msgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息id
       * </pre>
       *
       * <code>optional int64 msgId = 8;</code>
       */
      public Builder clearMsgId() {
        
        msgId_ = 0L;
        onChanged();
        return this;
      }

      private long sequence_ ;
      /**
       * <pre>
       *消息Sequence,内容为server时间戳
       * </pre>
       *
       * <code>optional int64 sequence = 9;</code>
       */
      public long getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       *消息Sequence,内容为server时间戳
       * </pre>
       *
       * <code>optional int64 sequence = 9;</code>
       */
      public Builder setSequence(long value) {
        
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息Sequence,内容为server时间戳
       * </pre>
       *
       * <code>optional int64 sequence = 9;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = 0L;
        onChanged();
        return this;
      }

      private Object flag_ = "";
      /**
       * <pre>
       *会话是否有&#64;我的标识符
       * </pre>
       *
       * <code>optional string flag = 10;</code>
       */
      public String getFlag() {
        Object ref = flag_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          flag_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *会话是否有&#64;我的标识符
       * </pre>
       *
       * <code>optional string flag = 10;</code>
       */
      public com.google.protobuf.ByteString
          getFlagBytes() {
        Object ref = flag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          flag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *会话是否有&#64;我的标识符
       * </pre>
       *
       * <code>optional string flag = 10;</code>
       */
      public Builder setFlag(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        flag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *会话是否有&#64;我的标识符
       * </pre>
       *
       * <code>optional string flag = 10;</code>
       */
      public Builder clearFlag() {
        
        flag_ = getDefaultInstance().getFlag();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *会话是否有&#64;我的标识符
       * </pre>
       *
       * <code>optional string flag = 10;</code>
       */
      public Builder setFlagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        flag_ = value;
        onChanged();
        return this;
      }

      private Object content_ = "";
      /**
       * <pre>
       *消息内容
       * </pre>
       *
       * <code>optional string content = 11;</code>
       */
      public String getContent() {
        Object ref = content_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *消息内容
       * </pre>
       *
       * <code>optional string content = 11;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *消息内容
       * </pre>
       *
       * <code>optional string content = 11;</code>
       */
      public Builder setContent(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息内容
       * </pre>
       *
       * <code>optional string content = 11;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息内容
       * </pre>
       *
       * <code>optional string content = 11;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        content_ = value;
        onChanged();
        return this;
      }

      private long clientTime_ ;
      /**
       * <pre>
       *客户端时间
       * </pre>
       *
       * <code>optional int64 clientTime = 12;</code>
       */
      public long getClientTime() {
        return clientTime_;
      }
      /**
       * <pre>
       *客户端时间
       * </pre>
       *
       * <code>optional int64 clientTime = 12;</code>
       */
      public Builder setClientTime(long value) {
        
        clientTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端时间
       * </pre>
       *
       * <code>optional int64 clientTime = 12;</code>
       */
      public Builder clearClientTime() {
        
        clientTime_ = 0L;
        onChanged();
        return this;
      }

      private long serverTime_ ;
      /**
       * <pre>
       *服务端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 13;</code>
       */
      public long getServerTime() {
        return serverTime_;
      }
      /**
       * <pre>
       *服务端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 13;</code>
       */
      public Builder setServerTime(long value) {
        
        serverTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *服务端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 13;</code>
       */
      public Builder clearServerTime() {
        
        serverTime_ = 0L;
        onChanged();
        return this;
      }

      private long cMsgId_ ;
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 14;</code>
       */
      public long getCMsgId() {
        return cMsgId_;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 14;</code>
       */
      public Builder setCMsgId(long value) {
        
        cMsgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 14;</code>
       */
      public Builder clearCMsgId() {
        
        cMsgId_ = 0L;
        onChanged();
        return this;
      }

      private int bizStatus_ ;
      /**
       * <pre>
       *业务状态
       * </pre>
       *
       * <code>optional int32 bizStatus = 15;</code>
       */
      public int getBizStatus() {
        return bizStatus_;
      }
      /**
       * <pre>
       *业务状态
       * </pre>
       *
       * <code>optional int32 bizStatus = 15;</code>
       */
      public Builder setBizStatus(int value) {
        
        bizStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务状态
       * </pre>
       *
       * <code>optional int32 bizStatus = 15;</code>
       */
      public Builder clearBizStatus() {
        
        bizStatus_ = 0;
        onChanged();
        return this;
      }

      private int deviceType_ ;
      /**
       * <pre>
       *设备类型
       * </pre>
       *
       * <code>optional int32 deviceType = 16;</code>
       */
      public int getDeviceType() {
        return deviceType_;
      }
      /**
       * <pre>
       *设备类型
       * </pre>
       *
       * <code>optional int32 deviceType = 16;</code>
       */
      public Builder setDeviceType(int value) {
        
        deviceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备类型
       * </pre>
       *
       * <code>optional int32 deviceType = 16;</code>
       */
      public Builder clearDeviceType() {
        
        deviceType_ = 0;
        onChanged();
        return this;
      }

      private int msgUnReadNum_ ;
      /**
       * <pre>
       *消息的未读人数：消息已读/未读情况。会话消息未读数由端上计算
       * </pre>
       *
       * <code>optional int32 msgUnReadNum = 17;</code>
       */
      public int getMsgUnReadNum() {
        return msgUnReadNum_;
      }
      /**
       * <pre>
       *消息的未读人数：消息已读/未读情况。会话消息未读数由端上计算
       * </pre>
       *
       * <code>optional int32 msgUnReadNum = 17;</code>
       */
      public Builder setMsgUnReadNum(int value) {
        
        msgUnReadNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息的未读人数：消息已读/未读情况。会话消息未读数由端上计算
       * </pre>
       *
       * <code>optional int32 msgUnReadNum = 17;</code>
       */
      public Builder clearMsgUnReadNum() {
        
        msgUnReadNum_ = 0;
        onChanged();
        return this;
      }

      private Object extend1_ = "";
      /**
       * <pre>
       *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
       * </pre>
       *
       * <code>optional string extend1 = 18;</code>
       */
      public String getExtend1() {
        Object ref = extend1_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend1_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
       * </pre>
       *
       * <code>optional string extend1 = 18;</code>
       */
      public com.google.protobuf.ByteString
          getExtend1Bytes() {
        Object ref = extend1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
       * </pre>
       *
       * <code>optional string extend1 = 18;</code>
       */
      public Builder setExtend1(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
       * </pre>
       *
       * <code>optional string extend1 = 18;</code>
       */
      public Builder clearExtend1() {
        
        extend1_ = getDefaultInstance().getExtend1();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *扩展字段，1，直播自定义消息类型存：APP:String  2,多端推送存:to   3，群组消息存：groupId   4，退出直播间：为空表普通用户， 1：主播退出  5,禁言：为空禁言，1：解禁
       * </pre>
       *
       * <code>optional string extend1 = 18;</code>
       */
      public Builder setExtend1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend1_ = value;
        onChanged();
        return this;
      }

      private Object extend2_ = "";
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend2 = 19;</code>
       */
      public String getExtend2() {
        Object ref = extend2_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend2_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend2 = 19;</code>
       */
      public com.google.protobuf.ByteString
          getExtend2Bytes() {
        Object ref = extend2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend2 = 19;</code>
       */
      public Builder setExtend2(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend2 = 19;</code>
       */
      public Builder clearExtend2() {
        
        extend2_ = getDefaultInstance().getExtend2();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend2 = 19;</code>
       */
      public Builder setExtend2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend2_ = value;
        onChanged();
        return this;
      }

      private Object extend3_ = "";
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend3 = 20;</code>
       */
      public String getExtend3() {
        Object ref = extend3_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend3_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend3 = 20;</code>
       */
      public com.google.protobuf.ByteString
          getExtend3Bytes() {
        Object ref = extend3_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend3_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend3 = 20;</code>
       */
      public Builder setExtend3(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend3_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend3 = 20;</code>
       */
      public Builder clearExtend3() {
        
        extend3_ = getDefaultInstance().getExtend3();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend3 = 20;</code>
       */
      public Builder setExtend3Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend3_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString extend4_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *备用  二进制存储
       * </pre>
       *
       * <code>optional bytes extend4 = 21;</code>
       */
      public com.google.protobuf.ByteString getExtend4() {
        return extend4_;
      }
      /**
       * <pre>
       *备用  二进制存储
       * </pre>
       *
       * <code>optional bytes extend4 = 21;</code>
       */
      public Builder setExtend4(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend4_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用  二进制存储
       * </pre>
       *
       * <code>optional bytes extend4 = 21;</code>
       */
      public Builder clearExtend4() {
        
        extend4_ = getDefaultInstance().getExtend4();
        onChanged();
        return this;
      }

      private Object extend5_ = "";
      /**
       * <pre>
       *备用 群组消息:userId
       * </pre>
       *
       * <code>optional string extend5 = 22;</code>
       */
      public String getExtend5() {
        Object ref = extend5_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend5_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *备用 群组消息:userId
       * </pre>
       *
       * <code>optional string extend5 = 22;</code>
       */
      public com.google.protobuf.ByteString
          getExtend5Bytes() {
        Object ref = extend5_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend5_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *备用 群组消息:userId
       * </pre>
       *
       * <code>optional string extend5 = 22;</code>
       */
      public Builder setExtend5(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend5_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用 群组消息:userId
       * </pre>
       *
       * <code>optional string extend5 = 22;</code>
       */
      public Builder clearExtend5() {
        
        extend5_ = getDefaultInstance().getExtend5();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用 群组消息:userId
       * </pre>
       *
       * <code>optional string extend5 = 22;</code>
       */
      public Builder setExtend5Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend5_ = value;
        onChanged();
        return this;
      }

      private Object extend6_ = "";
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend6 = 23;</code>
       */
      public String getExtend6() {
        Object ref = extend6_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend6_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend6 = 23;</code>
       */
      public com.google.protobuf.ByteString
          getExtend6Bytes() {
        Object ref = extend6_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend6_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend6 = 23;</code>
       */
      public Builder setExtend6(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend6_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend6 = 23;</code>
       */
      public Builder clearExtend6() {
        
        extend6_ = getDefaultInstance().getExtend6();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend6 = 23;</code>
       */
      public Builder setExtend6Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend6_ = value;
        onChanged();
        return this;
      }

      private Object extend7_ = "";
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend7 = 24;</code>
       */
      public String getExtend7() {
        Object ref = extend7_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend7_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend7 = 24;</code>
       */
      public com.google.protobuf.ByteString
          getExtend7Bytes() {
        Object ref = extend7_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend7_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend7 = 24;</code>
       */
      public Builder setExtend7(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend7_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend7 = 24;</code>
       */
      public Builder clearExtend7() {
        
        extend7_ = getDefaultInstance().getExtend7();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *备用
       * </pre>
       *
       * <code>optional string extend7 = 24;</code>
       */
      public Builder setExtend7Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend7_ = value;
        onChanged();
        return this;
      }

      private Object requestId_ = "";
      /**
       * <pre>
       *请求标识ID,采用UUID
       * </pre>
       *
       * <code>optional string requestId = 25;</code>
       */
      public String getRequestId() {
        Object ref = requestId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          requestId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *请求标识ID,采用UUID
       * </pre>
       *
       * <code>optional string requestId = 25;</code>
       */
      public com.google.protobuf.ByteString
          getRequestIdBytes() {
        Object ref = requestId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          requestId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *请求标识ID,采用UUID
       * </pre>
       *
       * <code>optional string requestId = 25;</code>
       */
      public Builder setRequestId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *请求标识ID,采用UUID
       * </pre>
       *
       * <code>optional string requestId = 25;</code>
       */
      public Builder clearRequestId() {
        
        requestId_ = getDefaultInstance().getRequestId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *请求标识ID,采用UUID
       * </pre>
       *
       * <code>optional string requestId = 25;</code>
       */
      public Builder setRequestIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        requestId_ = value;
        onChanged();
        return this;
      }

      private int priority_ ;
      /**
       * <pre>
       *消息优先级  直播间根据消息优先级丢弃消息 0 1 2 3
       * </pre>
       *
       * <code>optional int32 priority = 26;</code>
       */
      public int getPriority() {
        return priority_;
      }
      /**
       * <pre>
       *消息优先级  直播间根据消息优先级丢弃消息 0 1 2 3
       * </pre>
       *
       * <code>optional int32 priority = 26;</code>
       */
      public Builder setPriority(int value) {
        
        priority_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息优先级  直播间根据消息优先级丢弃消息 0 1 2 3
       * </pre>
       *
       * <code>optional int32 priority = 26;</code>
       */
      public Builder clearPriority() {
        
        priority_ = 0;
        onChanged();
        return this;
      }

      private Object toAppid_ = "";
      /**
       * <pre>
       *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
       * </pre>
       *
       * <code>optional string toAppid = 27;</code>
       */
      public String getToAppid() {
        Object ref = toAppid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          toAppid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
       * </pre>
       *
       * <code>optional string toAppid = 27;</code>
       */
      public com.google.protobuf.ByteString
          getToAppidBytes() {
        Object ref = toAppid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          toAppid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
       * </pre>
       *
       * <code>optional string toAppid = 27;</code>
       */
      public Builder setToAppid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        toAppid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
       * </pre>
       *
       * <code>optional string toAppid = 27;</code>
       */
      public Builder clearToAppid() {
        
        toAppid_ = getDefaultInstance().getToAppid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *跨应用通信中  a应用给b应用发消息  a应用消息上行消息体要包含toAppid 且toAppid值为b应用的appid
       * </pre>
       *
       * <code>optional string toAppid = 27;</code>
       */
      public Builder setToAppidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        toAppid_ = value;
        onChanged();
        return this;
      }

      private Object liveip_ = "";
      /**
       * <pre>
       * live ip  地址
       * </pre>
       *
       * <code>optional string liveip = 28;</code>
       */
      public String getLiveip() {
        Object ref = liveip_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          liveip_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * live ip  地址
       * </pre>
       *
       * <code>optional string liveip = 28;</code>
       */
      public com.google.protobuf.ByteString
          getLiveipBytes() {
        Object ref = liveip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          liveip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * live ip  地址
       * </pre>
       *
       * <code>optional string liveip = 28;</code>
       */
      public Builder setLiveip(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        liveip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * live ip  地址
       * </pre>
       *
       * <code>optional string liveip = 28;</code>
       */
      public Builder clearLiveip() {
        
        liveip_ = getDefaultInstance().getLiveip();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * live ip  地址
       * </pre>
       *
       * <code>optional string liveip = 28;</code>
       */
      public Builder setLiveipBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        liveip_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:IMMessage)
    }

    // @@protoc_insertion_point(class_scope:IMMessage)
    private static final IMMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new IMMessage();
    }

    public static IMMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IMMessage>
        PARSER = new com.google.protobuf.AbstractParser<IMMessage>() {
      public IMMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new IMMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IMMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<IMMessage> getParserForType() {
      return PARSER;
    }

    public IMMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Ack)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 1;</code>
     */
    String getTo();
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 1;</code>
     */
    com.google.protobuf.ByteString
        getToBytes();

    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    String getDeviceId();
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     *回执类型   见枚举:AckTypeEnum
     * </pre>
     *
     * <code>optional int32 type = 3;</code>
     */
    int getType();

    /**
     * <pre>
     *回执状态码  见枚举：AckCodeEnum 正确为：0，其它均为错误码，需输出
     * </pre>
     *
     * <code>optional int32 stateCode = 4;</code>
     */
    int getStateCode();

    /**
     * <pre>
     *登录回执对象
     * </pre>
     *
     * <code>optional .UserAck userAck = 5;</code>
     */
    boolean hasUserAck();
    /**
     * <pre>
     *登录回执对象
     * </pre>
     *
     * <code>optional .UserAck userAck = 5;</code>
     */
    UserAck getUserAck();
    /**
     * <pre>
     *登录回执对象
     * </pre>
     *
     * <code>optional .UserAck userAck = 5;</code>
     */
    UserAckOrBuilder getUserAckOrBuilder();

    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    java.util.List<MessageAck>
        getMessageAckList();
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    MessageAck getMessageAck(int index);
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    int getMessageAckCount();
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    java.util.List<? extends MessageAckOrBuilder>
        getMessageAckOrBuilderList();
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    MessageAckOrBuilder getMessageAckOrBuilder(
        int index);

    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    java.util.List<RoomMsgAck>
        getRoomMsgAckList();
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    RoomMsgAck getRoomMsgAck(int index);
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    int getRoomMsgAckCount();
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    java.util.List<? extends RoomMsgAckOrBuilder>
        getRoomMsgAckOrBuilderList();
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    RoomMsgAckOrBuilder getRoomMsgAckOrBuilder(
        int index);

    /**
     * <pre>
     *应用的标识
     * </pre>
     *
     * <code>optional string appId = 8;</code>
     */
    String getAppId();
    /**
     * <pre>
     *应用的标识
     * </pre>
     *
     * <code>optional string appId = 8;</code>
     */
    com.google.protobuf.ByteString
        getAppIdBytes();
  }
  /**
   * <pre>
   *回执对象
   *1，登录成功                     &#64;return UserAck
   *2，退出成功                     &#64;return UserAck
   *3，消息上行成功              &#64;return MessageAck List
   *4，消息下行成功              &#64;return MessageAck List
   *5，直播间创建/登录成功 &#64;return MessageAck List
   * </pre>
   *
   * Protobuf type {@code Ack}
   */
  public  static final class Ack extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Ack)
      AckOrBuilder {
    // Use Ack.newBuilder() to construct.
    private Ack(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ack() {
      to_ = "";
      deviceId_ = "";
      type_ = 0;
      stateCode_ = 0;
      messageAck_ = java.util.Collections.emptyList();
      roomMsgAck_ = java.util.Collections.emptyList();
      appId_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Ack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              to_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 24: {

              type_ = input.readInt32();
              break;
            }
            case 32: {

              stateCode_ = input.readInt32();
              break;
            }
            case 42: {
              UserAck.Builder subBuilder = null;
              if (userAck_ != null) {
                subBuilder = userAck_.toBuilder();
              }
              userAck_ = input.readMessage(UserAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userAck_);
                userAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                messageAck_ = new java.util.ArrayList<MessageAck>();
                mutable_bitField0_ |= 0x00000020;
              }
              messageAck_.add(
                  input.readMessage(MessageAck.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                roomMsgAck_ = new java.util.ArrayList<RoomMsgAck>();
                mutable_bitField0_ |= 0x00000040;
              }
              roomMsgAck_.add(
                  input.readMessage(RoomMsgAck.parser(), extensionRegistry));
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              appId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          messageAck_ = java.util.Collections.unmodifiableList(messageAck_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          roomMsgAck_ = java.util.Collections.unmodifiableList(roomMsgAck_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_Ack_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_Ack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Ack.class, Builder.class);
    }

    private int bitField0_;
    public static final int TO_FIELD_NUMBER = 1;
    private volatile Object to_;
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 1;</code>
     */
    public String getTo() {
      Object ref = to_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        to_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *接收者
     * </pre>
     *
     * <code>optional string to = 1;</code>
     */
    public com.google.protobuf.ByteString
        getToBytes() {
      Object ref = to_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        to_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICEID_FIELD_NUMBER = 2;
    private volatile Object deviceId_;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    public String getDeviceId() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <pre>
     *回执类型   见枚举:AckTypeEnum
     * </pre>
     *
     * <code>optional int32 type = 3;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int STATECODE_FIELD_NUMBER = 4;
    private int stateCode_;
    /**
     * <pre>
     *回执状态码  见枚举：AckCodeEnum 正确为：0，其它均为错误码，需输出
     * </pre>
     *
     * <code>optional int32 stateCode = 4;</code>
     */
    public int getStateCode() {
      return stateCode_;
    }

    public static final int USERACK_FIELD_NUMBER = 5;
    private UserAck userAck_;
    /**
     * <pre>
     *登录回执对象
     * </pre>
     *
     * <code>optional .UserAck userAck = 5;</code>
     */
    public boolean hasUserAck() {
      return userAck_ != null;
    }
    /**
     * <pre>
     *登录回执对象
     * </pre>
     *
     * <code>optional .UserAck userAck = 5;</code>
     */
    public UserAck getUserAck() {
      return userAck_ == null ? UserAck.getDefaultInstance() : userAck_;
    }
    /**
     * <pre>
     *登录回执对象
     * </pre>
     *
     * <code>optional .UserAck userAck = 5;</code>
     */
    public UserAckOrBuilder getUserAckOrBuilder() {
      return getUserAck();
    }

    public static final int MESSAGEACK_FIELD_NUMBER = 6;
    private java.util.List<MessageAck> messageAck_;
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    public java.util.List<MessageAck> getMessageAckList() {
      return messageAck_;
    }
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    public java.util.List<? extends MessageAckOrBuilder>
        getMessageAckOrBuilderList() {
      return messageAck_;
    }
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    public int getMessageAckCount() {
      return messageAck_.size();
    }
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    public MessageAck getMessageAck(int index) {
      return messageAck_.get(index);
    }
    /**
     * <pre>
     *消息回执对象
     * </pre>
     *
     * <code>repeated .MessageAck messageAck = 6;</code>
     */
    public MessageAckOrBuilder getMessageAckOrBuilder(
        int index) {
      return messageAck_.get(index);
    }

    public static final int ROOMMSGACK_FIELD_NUMBER = 7;
    private java.util.List<RoomMsgAck> roomMsgAck_;
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    public java.util.List<RoomMsgAck> getRoomMsgAckList() {
      return roomMsgAck_;
    }
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    public java.util.List<? extends RoomMsgAckOrBuilder>
        getRoomMsgAckOrBuilderList() {
      return roomMsgAck_;
    }
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    public int getRoomMsgAckCount() {
      return roomMsgAck_.size();
    }
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    public RoomMsgAck getRoomMsgAck(int index) {
      return roomMsgAck_.get(index);
    }
    /**
     * <pre>
     *直播间消息回执对象
     * </pre>
     *
     * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
     */
    public RoomMsgAckOrBuilder getRoomMsgAckOrBuilder(
        int index) {
      return roomMsgAck_.get(index);
    }

    public static final int APPID_FIELD_NUMBER = 8;
    private volatile Object appId_;
    /**
     * <pre>
     *应用的标识
     * </pre>
     *
     * <code>optional string appId = 8;</code>
     */
    public String getAppId() {
      Object ref = appId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        appId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *应用的标识
     * </pre>
     *
     * <code>optional string appId = 8;</code>
     */
    public com.google.protobuf.ByteString
        getAppIdBytes() {
      Object ref = appId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        appId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getToBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, to_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceId_);
      }
      if (type_ != 0) {
        output.writeInt32(3, type_);
      }
      if (stateCode_ != 0) {
        output.writeInt32(4, stateCode_);
      }
      if (userAck_ != null) {
        output.writeMessage(5, getUserAck());
      }
      for (int i = 0; i < messageAck_.size(); i++) {
        output.writeMessage(6, messageAck_.get(i));
      }
      for (int i = 0; i < roomMsgAck_.size(); i++) {
        output.writeMessage(7, roomMsgAck_.get(i));
      }
      if (!getAppIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, appId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getToBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, to_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceId_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      if (stateCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, stateCode_);
      }
      if (userAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getUserAck());
      }
      for (int i = 0; i < messageAck_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, messageAck_.get(i));
      }
      for (int i = 0; i < roomMsgAck_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, roomMsgAck_.get(i));
      }
      if (!getAppIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, appId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Ack)) {
        return super.equals(obj);
      }
      Ack other = (Ack) obj;

      boolean result = true;
      result = result && getTo()
          .equals(other.getTo());
      result = result && getDeviceId()
          .equals(other.getDeviceId());
      result = result && (getType()
          == other.getType());
      result = result && (getStateCode()
          == other.getStateCode());
      result = result && (hasUserAck() == other.hasUserAck());
      if (hasUserAck()) {
        result = result && getUserAck()
            .equals(other.getUserAck());
      }
      result = result && getMessageAckList()
          .equals(other.getMessageAckList());
      result = result && getRoomMsgAckList()
          .equals(other.getRoomMsgAckList());
      result = result && getAppId()
          .equals(other.getAppId());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + TO_FIELD_NUMBER;
      hash = (53 * hash) + getTo().hashCode();
      hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + STATECODE_FIELD_NUMBER;
      hash = (53 * hash) + getStateCode();
      if (hasUserAck()) {
        hash = (37 * hash) + USERACK_FIELD_NUMBER;
        hash = (53 * hash) + getUserAck().hashCode();
      }
      if (getMessageAckCount() > 0) {
        hash = (37 * hash) + MESSAGEACK_FIELD_NUMBER;
        hash = (53 * hash) + getMessageAckList().hashCode();
      }
      if (getRoomMsgAckCount() > 0) {
        hash = (37 * hash) + ROOMMSGACK_FIELD_NUMBER;
        hash = (53 * hash) + getRoomMsgAckList().hashCode();
      }
      hash = (37 * hash) + APPID_FIELD_NUMBER;
      hash = (53 * hash) + getAppId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Ack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Ack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Ack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Ack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Ack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Ack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Ack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Ack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Ack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Ack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Ack prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *回执对象
     *1，登录成功                     &#64;return UserAck
     *2，退出成功                     &#64;return UserAck
     *3，消息上行成功              &#64;return MessageAck List
     *4，消息下行成功              &#64;return MessageAck List
     *5，直播间创建/登录成功 &#64;return MessageAck List
     * </pre>
     *
     * Protobuf type {@code Ack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Ack)
        AckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_Ack_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_Ack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Ack.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.Ack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMessageAckFieldBuilder();
          getRoomMsgAckFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        to_ = "";

        deviceId_ = "";

        type_ = 0;

        stateCode_ = 0;

        if (userAckBuilder_ == null) {
          userAck_ = null;
        } else {
          userAck_ = null;
          userAckBuilder_ = null;
        }
        if (messageAckBuilder_ == null) {
          messageAck_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          messageAckBuilder_.clear();
        }
        if (roomMsgAckBuilder_ == null) {
          roomMsgAck_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          roomMsgAckBuilder_.clear();
        }
        appId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_Ack_descriptor;
      }

      public Ack getDefaultInstanceForType() {
        return Ack.getDefaultInstance();
      }

      public Ack build() {
        Ack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Ack buildPartial() {
        Ack result = new Ack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.to_ = to_;
        result.deviceId_ = deviceId_;
        result.type_ = type_;
        result.stateCode_ = stateCode_;
        if (userAckBuilder_ == null) {
          result.userAck_ = userAck_;
        } else {
          result.userAck_ = userAckBuilder_.build();
        }
        if (messageAckBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            messageAck_ = java.util.Collections.unmodifiableList(messageAck_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.messageAck_ = messageAck_;
        } else {
          result.messageAck_ = messageAckBuilder_.build();
        }
        if (roomMsgAckBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            roomMsgAck_ = java.util.Collections.unmodifiableList(roomMsgAck_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.roomMsgAck_ = roomMsgAck_;
        } else {
          result.roomMsgAck_ = roomMsgAckBuilder_.build();
        }
        result.appId_ = appId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Ack) {
          return mergeFrom((Ack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Ack other) {
        if (other == Ack.getDefaultInstance()) return this;
        if (!other.getTo().isEmpty()) {
          to_ = other.to_;
          onChanged();
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getStateCode() != 0) {
          setStateCode(other.getStateCode());
        }
        if (other.hasUserAck()) {
          mergeUserAck(other.getUserAck());
        }
        if (messageAckBuilder_ == null) {
          if (!other.messageAck_.isEmpty()) {
            if (messageAck_.isEmpty()) {
              messageAck_ = other.messageAck_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureMessageAckIsMutable();
              messageAck_.addAll(other.messageAck_);
            }
            onChanged();
          }
        } else {
          if (!other.messageAck_.isEmpty()) {
            if (messageAckBuilder_.isEmpty()) {
              messageAckBuilder_.dispose();
              messageAckBuilder_ = null;
              messageAck_ = other.messageAck_;
              bitField0_ = (bitField0_ & ~0x00000020);
              messageAckBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageAckFieldBuilder() : null;
            } else {
              messageAckBuilder_.addAllMessages(other.messageAck_);
            }
          }
        }
        if (roomMsgAckBuilder_ == null) {
          if (!other.roomMsgAck_.isEmpty()) {
            if (roomMsgAck_.isEmpty()) {
              roomMsgAck_ = other.roomMsgAck_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureRoomMsgAckIsMutable();
              roomMsgAck_.addAll(other.roomMsgAck_);
            }
            onChanged();
          }
        } else {
          if (!other.roomMsgAck_.isEmpty()) {
            if (roomMsgAckBuilder_.isEmpty()) {
              roomMsgAckBuilder_.dispose();
              roomMsgAckBuilder_ = null;
              roomMsgAck_ = other.roomMsgAck_;
              bitField0_ = (bitField0_ & ~0x00000040);
              roomMsgAckBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRoomMsgAckFieldBuilder() : null;
            } else {
              roomMsgAckBuilder_.addAllMessages(other.roomMsgAck_);
            }
          }
        }
        if (!other.getAppId().isEmpty()) {
          appId_ = other.appId_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Ack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Ack) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object to_ = "";
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public String getTo() {
        Object ref = to_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          to_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public com.google.protobuf.ByteString
          getToBytes() {
        Object ref = to_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          to_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public Builder setTo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        to_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public Builder clearTo() {
        
        to_ = getDefaultInstance().getTo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *接收者
       * </pre>
       *
       * <code>optional string to = 1;</code>
       */
      public Builder setToBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        to_ = value;
        onChanged();
        return this;
      }

      private Object deviceId_ = "";
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public String getDeviceId() {
        Object ref = deviceId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder setDeviceId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *回执类型   见枚举:AckTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 3;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *回执类型   见枚举:AckTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 3;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *回执类型   见枚举:AckTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int stateCode_ ;
      /**
       * <pre>
       *回执状态码  见枚举：AckCodeEnum 正确为：0，其它均为错误码，需输出
       * </pre>
       *
       * <code>optional int32 stateCode = 4;</code>
       */
      public int getStateCode() {
        return stateCode_;
      }
      /**
       * <pre>
       *回执状态码  见枚举：AckCodeEnum 正确为：0，其它均为错误码，需输出
       * </pre>
       *
       * <code>optional int32 stateCode = 4;</code>
       */
      public Builder setStateCode(int value) {
        
        stateCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *回执状态码  见枚举：AckCodeEnum 正确为：0，其它均为错误码，需输出
       * </pre>
       *
       * <code>optional int32 stateCode = 4;</code>
       */
      public Builder clearStateCode() {
        
        stateCode_ = 0;
        onChanged();
        return this;
      }

      private UserAck userAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          UserAck, UserAck.Builder, UserAckOrBuilder> userAckBuilder_;
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      public boolean hasUserAck() {
        return userAckBuilder_ != null || userAck_ != null;
      }
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      public UserAck getUserAck() {
        if (userAckBuilder_ == null) {
          return userAck_ == null ? UserAck.getDefaultInstance() : userAck_;
        } else {
          return userAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      public Builder setUserAck(UserAck value) {
        if (userAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userAck_ = value;
          onChanged();
        } else {
          userAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      public Builder setUserAck(
          UserAck.Builder builderForValue) {
        if (userAckBuilder_ == null) {
          userAck_ = builderForValue.build();
          onChanged();
        } else {
          userAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      public Builder mergeUserAck(UserAck value) {
        if (userAckBuilder_ == null) {
          if (userAck_ != null) {
            userAck_ =
              UserAck.newBuilder(userAck_).mergeFrom(value).buildPartial();
          } else {
            userAck_ = value;
          }
          onChanged();
        } else {
          userAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      public Builder clearUserAck() {
        if (userAckBuilder_ == null) {
          userAck_ = null;
          onChanged();
        } else {
          userAck_ = null;
          userAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      public UserAck.Builder getUserAckBuilder() {
        
        onChanged();
        return getUserAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      public UserAckOrBuilder getUserAckOrBuilder() {
        if (userAckBuilder_ != null) {
          return userAckBuilder_.getMessageOrBuilder();
        } else {
          return userAck_ == null ?
              UserAck.getDefaultInstance() : userAck_;
        }
      }
      /**
       * <pre>
       *登录回执对象
       * </pre>
       *
       * <code>optional .UserAck userAck = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          UserAck, UserAck.Builder, UserAckOrBuilder>
          getUserAckFieldBuilder() {
        if (userAckBuilder_ == null) {
          userAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              UserAck, UserAck.Builder, UserAckOrBuilder>(
                  getUserAck(),
                  getParentForChildren(),
                  isClean());
          userAck_ = null;
        }
        return userAckBuilder_;
      }

      private java.util.List<MessageAck> messageAck_ =
        java.util.Collections.emptyList();
      private void ensureMessageAckIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          messageAck_ = new java.util.ArrayList<MessageAck>(messageAck_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MessageAck, MessageAck.Builder, MessageAckOrBuilder> messageAckBuilder_;

      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public java.util.List<MessageAck> getMessageAckList() {
        if (messageAckBuilder_ == null) {
          return java.util.Collections.unmodifiableList(messageAck_);
        } else {
          return messageAckBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public int getMessageAckCount() {
        if (messageAckBuilder_ == null) {
          return messageAck_.size();
        } else {
          return messageAckBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public MessageAck getMessageAck(int index) {
        if (messageAckBuilder_ == null) {
          return messageAck_.get(index);
        } else {
          return messageAckBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder setMessageAck(
          int index, MessageAck value) {
        if (messageAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageAckIsMutable();
          messageAck_.set(index, value);
          onChanged();
        } else {
          messageAckBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder setMessageAck(
          int index, MessageAck.Builder builderForValue) {
        if (messageAckBuilder_ == null) {
          ensureMessageAckIsMutable();
          messageAck_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageAckBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder addMessageAck(MessageAck value) {
        if (messageAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageAckIsMutable();
          messageAck_.add(value);
          onChanged();
        } else {
          messageAckBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder addMessageAck(
          int index, MessageAck value) {
        if (messageAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageAckIsMutable();
          messageAck_.add(index, value);
          onChanged();
        } else {
          messageAckBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder addMessageAck(
          MessageAck.Builder builderForValue) {
        if (messageAckBuilder_ == null) {
          ensureMessageAckIsMutable();
          messageAck_.add(builderForValue.build());
          onChanged();
        } else {
          messageAckBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder addMessageAck(
          int index, MessageAck.Builder builderForValue) {
        if (messageAckBuilder_ == null) {
          ensureMessageAckIsMutable();
          messageAck_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageAckBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder addAllMessageAck(
          Iterable<? extends MessageAck> values) {
        if (messageAckBuilder_ == null) {
          ensureMessageAckIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, messageAck_);
          onChanged();
        } else {
          messageAckBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder clearMessageAck() {
        if (messageAckBuilder_ == null) {
          messageAck_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          messageAckBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public Builder removeMessageAck(int index) {
        if (messageAckBuilder_ == null) {
          ensureMessageAckIsMutable();
          messageAck_.remove(index);
          onChanged();
        } else {
          messageAckBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public MessageAck.Builder getMessageAckBuilder(
          int index) {
        return getMessageAckFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public MessageAckOrBuilder getMessageAckOrBuilder(
          int index) {
        if (messageAckBuilder_ == null) {
          return messageAck_.get(index);  } else {
          return messageAckBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public java.util.List<? extends MessageAckOrBuilder>
           getMessageAckOrBuilderList() {
        if (messageAckBuilder_ != null) {
          return messageAckBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(messageAck_);
        }
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public MessageAck.Builder addMessageAckBuilder() {
        return getMessageAckFieldBuilder().addBuilder(
            MessageAck.getDefaultInstance());
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public MessageAck.Builder addMessageAckBuilder(
          int index) {
        return getMessageAckFieldBuilder().addBuilder(
            index, MessageAck.getDefaultInstance());
      }
      /**
       * <pre>
       *消息回执对象
       * </pre>
       *
       * <code>repeated .MessageAck messageAck = 6;</code>
       */
      public java.util.List<MessageAck.Builder>
           getMessageAckBuilderList() {
        return getMessageAckFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MessageAck, MessageAck.Builder, MessageAckOrBuilder>
          getMessageAckFieldBuilder() {
        if (messageAckBuilder_ == null) {
          messageAckBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MessageAck, MessageAck.Builder, MessageAckOrBuilder>(
                  messageAck_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          messageAck_ = null;
        }
        return messageAckBuilder_;
      }

      private java.util.List<RoomMsgAck> roomMsgAck_ =
        java.util.Collections.emptyList();
      private void ensureRoomMsgAckIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          roomMsgAck_ = new java.util.ArrayList<RoomMsgAck>(roomMsgAck_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RoomMsgAck, RoomMsgAck.Builder, RoomMsgAckOrBuilder> roomMsgAckBuilder_;

      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public java.util.List<RoomMsgAck> getRoomMsgAckList() {
        if (roomMsgAckBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomMsgAck_);
        } else {
          return roomMsgAckBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public int getRoomMsgAckCount() {
        if (roomMsgAckBuilder_ == null) {
          return roomMsgAck_.size();
        } else {
          return roomMsgAckBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public RoomMsgAck getRoomMsgAck(int index) {
        if (roomMsgAckBuilder_ == null) {
          return roomMsgAck_.get(index);
        } else {
          return roomMsgAckBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder setRoomMsgAck(
          int index, RoomMsgAck value) {
        if (roomMsgAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomMsgAckIsMutable();
          roomMsgAck_.set(index, value);
          onChanged();
        } else {
          roomMsgAckBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder setRoomMsgAck(
          int index, RoomMsgAck.Builder builderForValue) {
        if (roomMsgAckBuilder_ == null) {
          ensureRoomMsgAckIsMutable();
          roomMsgAck_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomMsgAckBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder addRoomMsgAck(RoomMsgAck value) {
        if (roomMsgAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomMsgAckIsMutable();
          roomMsgAck_.add(value);
          onChanged();
        } else {
          roomMsgAckBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder addRoomMsgAck(
          int index, RoomMsgAck value) {
        if (roomMsgAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomMsgAckIsMutable();
          roomMsgAck_.add(index, value);
          onChanged();
        } else {
          roomMsgAckBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder addRoomMsgAck(
          RoomMsgAck.Builder builderForValue) {
        if (roomMsgAckBuilder_ == null) {
          ensureRoomMsgAckIsMutable();
          roomMsgAck_.add(builderForValue.build());
          onChanged();
        } else {
          roomMsgAckBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder addRoomMsgAck(
          int index, RoomMsgAck.Builder builderForValue) {
        if (roomMsgAckBuilder_ == null) {
          ensureRoomMsgAckIsMutable();
          roomMsgAck_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomMsgAckBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder addAllRoomMsgAck(
          Iterable<? extends RoomMsgAck> values) {
        if (roomMsgAckBuilder_ == null) {
          ensureRoomMsgAckIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, roomMsgAck_);
          onChanged();
        } else {
          roomMsgAckBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder clearRoomMsgAck() {
        if (roomMsgAckBuilder_ == null) {
          roomMsgAck_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          roomMsgAckBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public Builder removeRoomMsgAck(int index) {
        if (roomMsgAckBuilder_ == null) {
          ensureRoomMsgAckIsMutable();
          roomMsgAck_.remove(index);
          onChanged();
        } else {
          roomMsgAckBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public RoomMsgAck.Builder getRoomMsgAckBuilder(
          int index) {
        return getRoomMsgAckFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public RoomMsgAckOrBuilder getRoomMsgAckOrBuilder(
          int index) {
        if (roomMsgAckBuilder_ == null) {
          return roomMsgAck_.get(index);  } else {
          return roomMsgAckBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public java.util.List<? extends RoomMsgAckOrBuilder>
           getRoomMsgAckOrBuilderList() {
        if (roomMsgAckBuilder_ != null) {
          return roomMsgAckBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomMsgAck_);
        }
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public RoomMsgAck.Builder addRoomMsgAckBuilder() {
        return getRoomMsgAckFieldBuilder().addBuilder(
            RoomMsgAck.getDefaultInstance());
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public RoomMsgAck.Builder addRoomMsgAckBuilder(
          int index) {
        return getRoomMsgAckFieldBuilder().addBuilder(
            index, RoomMsgAck.getDefaultInstance());
      }
      /**
       * <pre>
       *直播间消息回执对象
       * </pre>
       *
       * <code>repeated .RoomMsgAck roomMsgAck = 7;</code>
       */
      public java.util.List<RoomMsgAck.Builder>
           getRoomMsgAckBuilderList() {
        return getRoomMsgAckFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RoomMsgAck, RoomMsgAck.Builder, RoomMsgAckOrBuilder>
          getRoomMsgAckFieldBuilder() {
        if (roomMsgAckBuilder_ == null) {
          roomMsgAckBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RoomMsgAck, RoomMsgAck.Builder, RoomMsgAckOrBuilder>(
                  roomMsgAck_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          roomMsgAck_ = null;
        }
        return roomMsgAckBuilder_;
      }

      private Object appId_ = "";
      /**
       * <pre>
       *应用的标识
       * </pre>
       *
       * <code>optional string appId = 8;</code>
       */
      public String getAppId() {
        Object ref = appId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          appId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *应用的标识
       * </pre>
       *
       * <code>optional string appId = 8;</code>
       */
      public com.google.protobuf.ByteString
          getAppIdBytes() {
        Object ref = appId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          appId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *应用的标识
       * </pre>
       *
       * <code>optional string appId = 8;</code>
       */
      public Builder setAppId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        appId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用的标识
       * </pre>
       *
       * <code>optional string appId = 8;</code>
       */
      public Builder clearAppId() {
        
        appId_ = getDefaultInstance().getAppId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *应用的标识
       * </pre>
       *
       * <code>optional string appId = 8;</code>
       */
      public Builder setAppIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        appId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Ack)
    }

    // @@protoc_insertion_point(class_scope:Ack)
    private static final Ack DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Ack();
    }

    public static Ack getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ack>
        PARSER = new com.google.protobuf.AbstractParser<Ack>() {
      public Ack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ack(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ack> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Ack> getParserForType() {
      return PARSER;
    }

    public Ack getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UserAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *用户id
     * </pre>
     *
     * <code>optional string userId = 1;</code>
     */
    String getUserId();
    /**
     * <pre>
     *用户id
     * </pre>
     *
     * <code>optional string userId = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    String getDeviceId();
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceIdBytes();

    /**
     * <pre>
     *当前Channel加密Key
     * </pre>
     *
     * <code>optional string sessionKey = 3;</code>
     */
    String getSessionKey();
    /**
     * <pre>
     *当前Channel加密Key
     * </pre>
     *
     * <code>optional string sessionKey = 3;</code>
     */
    com.google.protobuf.ByteString
        getSessionKeyBytes();

    /**
     * <pre>
     *服务器端时间
     * </pre>
     *
     * <code>optional int64 serverTime = 4;</code>
     */
    long getServerTime();

    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 5;</code>
     */
    long getCMsgId();

    /**
     * <pre>
     *是否重新刷新链接的配置
     * </pre>
     *
     * <code>optional int32 refreshConfig = 6;</code>
     */
    int getRefreshConfig();

    /**
     * <pre>
     *未读消息数，默认为0，反之返回未读消息数目
     * </pre>
     *
     * <code>optional int64 unReadMsgSize = 7;</code>
     */
    long getUnReadMsgSize();

    /**
     * <pre>
     *通用开关,见SwitchFlagEnum
     * </pre>
     *
     * <code>optional int32 switchFlags = 8;</code>
     */
    int getSwitchFlags();
  }
  /**
   * <pre>
   *登录回执
   * </pre>
   *
   * Protobuf type {@code UserAck}
   */
  public  static final class UserAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UserAck)
      UserAckOrBuilder {
    // Use UserAck.newBuilder() to construct.
    private UserAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserAck() {
      userId_ = "";
      deviceId_ = "";
      sessionKey_ = "";
      serverTime_ = 0L;
      cMsgId_ = 0L;
      refreshConfig_ = 0;
      unReadMsgSize_ = 0L;
      switchFlags_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private UserAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              userId_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              deviceId_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              sessionKey_ = s;
              break;
            }
            case 32: {

              serverTime_ = input.readInt64();
              break;
            }
            case 40: {

              cMsgId_ = input.readInt64();
              break;
            }
            case 48: {

              refreshConfig_ = input.readInt32();
              break;
            }
            case 56: {

              unReadMsgSize_ = input.readInt64();
              break;
            }
            case 64: {

              switchFlags_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_UserAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_UserAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UserAck.class, Builder.class);
    }

    public static final int USERID_FIELD_NUMBER = 1;
    private volatile Object userId_;
    /**
     * <pre>
     *用户id
     * </pre>
     *
     * <code>optional string userId = 1;</code>
     */
    public String getUserId() {
      Object ref = userId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *用户id
     * </pre>
     *
     * <code>optional string userId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICEID_FIELD_NUMBER = 2;
    private volatile Object deviceId_;
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    public String getDeviceId() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *设备ID
     * </pre>
     *
     * <code>optional string deviceId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      Object ref = deviceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SESSIONKEY_FIELD_NUMBER = 3;
    private volatile Object sessionKey_;
    /**
     * <pre>
     *当前Channel加密Key
     * </pre>
     *
     * <code>optional string sessionKey = 3;</code>
     */
    public String getSessionKey() {
      Object ref = sessionKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        sessionKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *当前Channel加密Key
     * </pre>
     *
     * <code>optional string sessionKey = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSessionKeyBytes() {
      Object ref = sessionKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sessionKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVERTIME_FIELD_NUMBER = 4;
    private long serverTime_;
    /**
     * <pre>
     *服务器端时间
     * </pre>
     *
     * <code>optional int64 serverTime = 4;</code>
     */
    public long getServerTime() {
      return serverTime_;
    }

    public static final int CMSGID_FIELD_NUMBER = 5;
    private long cMsgId_;
    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 5;</code>
     */
    public long getCMsgId() {
      return cMsgId_;
    }

    public static final int REFRESHCONFIG_FIELD_NUMBER = 6;
    private int refreshConfig_;
    /**
     * <pre>
     *是否重新刷新链接的配置
     * </pre>
     *
     * <code>optional int32 refreshConfig = 6;</code>
     */
    public int getRefreshConfig() {
      return refreshConfig_;
    }

    public static final int UNREADMSGSIZE_FIELD_NUMBER = 7;
    private long unReadMsgSize_;
    /**
     * <pre>
     *未读消息数，默认为0，反之返回未读消息数目
     * </pre>
     *
     * <code>optional int64 unReadMsgSize = 7;</code>
     */
    public long getUnReadMsgSize() {
      return unReadMsgSize_;
    }

    public static final int SWITCHFLAGS_FIELD_NUMBER = 8;
    private int switchFlags_;
    /**
     * <pre>
     *通用开关,见SwitchFlagEnum
     * </pre>
     *
     * <code>optional int32 switchFlags = 8;</code>
     */
    public int getSwitchFlags() {
      return switchFlags_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUserIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, userId_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceId_);
      }
      if (!getSessionKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sessionKey_);
      }
      if (serverTime_ != 0L) {
        output.writeInt64(4, serverTime_);
      }
      if (cMsgId_ != 0L) {
        output.writeInt64(5, cMsgId_);
      }
      if (refreshConfig_ != 0) {
        output.writeInt32(6, refreshConfig_);
      }
      if (unReadMsgSize_ != 0L) {
        output.writeInt64(7, unReadMsgSize_);
      }
      if (switchFlags_ != 0) {
        output.writeInt32(8, switchFlags_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUserIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, userId_);
      }
      if (!getDeviceIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceId_);
      }
      if (!getSessionKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sessionKey_);
      }
      if (serverTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, serverTime_);
      }
      if (cMsgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, cMsgId_);
      }
      if (refreshConfig_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, refreshConfig_);
      }
      if (unReadMsgSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, unReadMsgSize_);
      }
      if (switchFlags_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, switchFlags_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UserAck)) {
        return super.equals(obj);
      }
      UserAck other = (UserAck) obj;

      boolean result = true;
      result = result && getUserId()
          .equals(other.getUserId());
      result = result && getDeviceId()
          .equals(other.getDeviceId());
      result = result && getSessionKey()
          .equals(other.getSessionKey());
      result = result && (getServerTime()
          == other.getServerTime());
      result = result && (getCMsgId()
          == other.getCMsgId());
      result = result && (getRefreshConfig()
          == other.getRefreshConfig());
      result = result && (getUnReadMsgSize()
          == other.getUnReadMsgSize());
      result = result && (getSwitchFlags()
          == other.getSwitchFlags());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + USERID_FIELD_NUMBER;
      hash = (53 * hash) + getUserId().hashCode();
      hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceId().hashCode();
      hash = (37 * hash) + SESSIONKEY_FIELD_NUMBER;
      hash = (53 * hash) + getSessionKey().hashCode();
      hash = (37 * hash) + SERVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getServerTime());
      hash = (37 * hash) + CMSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCMsgId());
      hash = (37 * hash) + REFRESHCONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getRefreshConfig();
      hash = (37 * hash) + UNREADMSGSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUnReadMsgSize());
      hash = (37 * hash) + SWITCHFLAGS_FIELD_NUMBER;
      hash = (53 * hash) + getSwitchFlags();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UserAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UserAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UserAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UserAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UserAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UserAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UserAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UserAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UserAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UserAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UserAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *登录回执
     * </pre>
     *
     * Protobuf type {@code UserAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UserAck)
        UserAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_UserAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_UserAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UserAck.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.UserAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        userId_ = "";

        deviceId_ = "";

        sessionKey_ = "";

        serverTime_ = 0L;

        cMsgId_ = 0L;

        refreshConfig_ = 0;

        unReadMsgSize_ = 0L;

        switchFlags_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_UserAck_descriptor;
      }

      public UserAck getDefaultInstanceForType() {
        return UserAck.getDefaultInstance();
      }

      public UserAck build() {
        UserAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public UserAck buildPartial() {
        UserAck result = new UserAck(this);
        result.userId_ = userId_;
        result.deviceId_ = deviceId_;
        result.sessionKey_ = sessionKey_;
        result.serverTime_ = serverTime_;
        result.cMsgId_ = cMsgId_;
        result.refreshConfig_ = refreshConfig_;
        result.unReadMsgSize_ = unReadMsgSize_;
        result.switchFlags_ = switchFlags_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UserAck) {
          return mergeFrom((UserAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UserAck other) {
        if (other == UserAck.getDefaultInstance()) return this;
        if (!other.getUserId().isEmpty()) {
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.getDeviceId().isEmpty()) {
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (!other.getSessionKey().isEmpty()) {
          sessionKey_ = other.sessionKey_;
          onChanged();
        }
        if (other.getServerTime() != 0L) {
          setServerTime(other.getServerTime());
        }
        if (other.getCMsgId() != 0L) {
          setCMsgId(other.getCMsgId());
        }
        if (other.getRefreshConfig() != 0) {
          setRefreshConfig(other.getRefreshConfig());
        }
        if (other.getUnReadMsgSize() != 0L) {
          setUnReadMsgSize(other.getUnReadMsgSize());
        }
        if (other.getSwitchFlags() != 0) {
          setSwitchFlags(other.getSwitchFlags());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UserAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UserAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object userId_ = "";
      /**
       * <pre>
       *用户id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public String getUserId() {
        Object ref = userId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *用户id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *用户id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public Builder setUserId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public Builder clearUserId() {
        
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *用户id
       * </pre>
       *
       * <code>optional string userId = 1;</code>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        userId_ = value;
        onChanged();
        return this;
      }

      private Object deviceId_ = "";
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public String getDeviceId() {
        Object ref = deviceId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceIdBytes() {
        Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder setDeviceId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder clearDeviceId() {
        
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *设备ID
       * </pre>
       *
       * <code>optional string deviceId = 2;</code>
       */
      public Builder setDeviceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceId_ = value;
        onChanged();
        return this;
      }

      private Object sessionKey_ = "";
      /**
       * <pre>
       *当前Channel加密Key
       * </pre>
       *
       * <code>optional string sessionKey = 3;</code>
       */
      public String getSessionKey() {
        Object ref = sessionKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          sessionKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *当前Channel加密Key
       * </pre>
       *
       * <code>optional string sessionKey = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSessionKeyBytes() {
        Object ref = sessionKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sessionKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *当前Channel加密Key
       * </pre>
       *
       * <code>optional string sessionKey = 3;</code>
       */
      public Builder setSessionKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sessionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前Channel加密Key
       * </pre>
       *
       * <code>optional string sessionKey = 3;</code>
       */
      public Builder clearSessionKey() {
        
        sessionKey_ = getDefaultInstance().getSessionKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前Channel加密Key
       * </pre>
       *
       * <code>optional string sessionKey = 3;</code>
       */
      public Builder setSessionKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sessionKey_ = value;
        onChanged();
        return this;
      }

      private long serverTime_ ;
      /**
       * <pre>
       *服务器端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 4;</code>
       */
      public long getServerTime() {
        return serverTime_;
      }
      /**
       * <pre>
       *服务器端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 4;</code>
       */
      public Builder setServerTime(long value) {
        
        serverTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *服务器端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 4;</code>
       */
      public Builder clearServerTime() {
        
        serverTime_ = 0L;
        onChanged();
        return this;
      }

      private long cMsgId_ ;
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 5;</code>
       */
      public long getCMsgId() {
        return cMsgId_;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 5;</code>
       */
      public Builder setCMsgId(long value) {
        
        cMsgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 5;</code>
       */
      public Builder clearCMsgId() {
        
        cMsgId_ = 0L;
        onChanged();
        return this;
      }

      private int refreshConfig_ ;
      /**
       * <pre>
       *是否重新刷新链接的配置
       * </pre>
       *
       * <code>optional int32 refreshConfig = 6;</code>
       */
      public int getRefreshConfig() {
        return refreshConfig_;
      }
      /**
       * <pre>
       *是否重新刷新链接的配置
       * </pre>
       *
       * <code>optional int32 refreshConfig = 6;</code>
       */
      public Builder setRefreshConfig(int value) {
        
        refreshConfig_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否重新刷新链接的配置
       * </pre>
       *
       * <code>optional int32 refreshConfig = 6;</code>
       */
      public Builder clearRefreshConfig() {
        
        refreshConfig_ = 0;
        onChanged();
        return this;
      }

      private long unReadMsgSize_ ;
      /**
       * <pre>
       *未读消息数，默认为0，反之返回未读消息数目
       * </pre>
       *
       * <code>optional int64 unReadMsgSize = 7;</code>
       */
      public long getUnReadMsgSize() {
        return unReadMsgSize_;
      }
      /**
       * <pre>
       *未读消息数，默认为0，反之返回未读消息数目
       * </pre>
       *
       * <code>optional int64 unReadMsgSize = 7;</code>
       */
      public Builder setUnReadMsgSize(long value) {
        
        unReadMsgSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *未读消息数，默认为0，反之返回未读消息数目
       * </pre>
       *
       * <code>optional int64 unReadMsgSize = 7;</code>
       */
      public Builder clearUnReadMsgSize() {
        
        unReadMsgSize_ = 0L;
        onChanged();
        return this;
      }

      private int switchFlags_ ;
      /**
       * <pre>
       *通用开关,见SwitchFlagEnum
       * </pre>
       *
       * <code>optional int32 switchFlags = 8;</code>
       */
      public int getSwitchFlags() {
        return switchFlags_;
      }
      /**
       * <pre>
       *通用开关,见SwitchFlagEnum
       * </pre>
       *
       * <code>optional int32 switchFlags = 8;</code>
       */
      public Builder setSwitchFlags(int value) {
        
        switchFlags_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *通用开关,见SwitchFlagEnum
       * </pre>
       *
       * <code>optional int32 switchFlags = 8;</code>
       */
      public Builder clearSwitchFlags() {
        
        switchFlags_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:UserAck)
    }

    // @@protoc_insertion_point(class_scope:UserAck)
    private static final UserAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UserAck();
    }

    public static UserAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserAck>
        PARSER = new com.google.protobuf.AbstractParser<UserAck>() {
      public UserAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UserAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UserAck> getParserForType() {
      return PARSER;
    }

    public UserAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MessageAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *消息Id
     * </pre>
     *
     * <code>optional int64 msgId = 1;</code>
     */
    long getMsgId();

    /**
     * <pre>
     *消息类型，见枚举： MsgTypeEnum
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    int getType();

    /**
     * <pre>
     *客户端临时ID
     * </pre>
     *
     * <code>optional int64 cMsgId = 3;</code>
     */
    long getCMsgId();

    /**
     * <pre>
     *服务器端时间
     * </pre>
     *
     * <code>optional int64 serverTime = 4;</code>
     */
    long getServerTime();

    /**
     * <pre>
     *消息sequence
     * </pre>
     *
     * <code>optional int64 sequence = 5;</code>
     */
    long getSequence();

    /**
     * <pre>
     *webim:msgId字符串类型
     * </pre>
     *
     * <code>optional string extend1 = 6;</code>
     */
    String getExtend1();
    /**
     * <pre>
     *webim:msgId字符串类型
     * </pre>
     *
     * <code>optional string extend1 = 6;</code>
     */
    com.google.protobuf.ByteString
        getExtend1Bytes();

    /**
     * <pre>
     *webim:sequence字符串类型
     * </pre>
     *
     * <code>optional string extend2 = 7;</code>
     */
    String getExtend2();
    /**
     * <pre>
     *webim:sequence字符串类型
     * </pre>
     *
     * <code>optional string extend2 = 7;</code>
     */
    com.google.protobuf.ByteString
        getExtend2Bytes();

    /**
     * <pre>
     * </pre>
     *
     * <code>optional string extend3 = 8;</code>
     */
    String getExtend3();
    /**
     * <pre>
     * </pre>
     *
     * <code>optional string extend3 = 8;</code>
     */
    com.google.protobuf.ByteString
        getExtend3Bytes();

    /**
     * <pre>
     * </pre>
     *
     * <code>optional string extend4 = 9;</code>
     */
    String getExtend4();
    /**
     * <pre>
     * </pre>
     *
     * <code>optional string extend4 = 9;</code>
     */
    com.google.protobuf.ByteString
        getExtend4Bytes();
  }
  /**
   * <pre>
   *消息类型回执内容
   * </pre>
   *
   * Protobuf type {@code MessageAck}
   */
  public  static final class MessageAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MessageAck)
      MessageAckOrBuilder {
    // Use MessageAck.newBuilder() to construct.
    private MessageAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageAck() {
      msgId_ = 0L;
      type_ = 0;
      cMsgId_ = 0L;
      serverTime_ = 0L;
      sequence_ = 0L;
      extend1_ = "";
      extend2_ = "";
      extend3_ = "";
      extend4_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MessageAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              msgId_ = input.readInt64();
              break;
            }
            case 16: {

              type_ = input.readInt32();
              break;
            }
            case 24: {

              cMsgId_ = input.readInt64();
              break;
            }
            case 32: {

              serverTime_ = input.readInt64();
              break;
            }
            case 40: {

              sequence_ = input.readInt64();
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              extend1_ = s;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              extend2_ = s;
              break;
            }
            case 66: {
              String s = input.readStringRequireUtf8();

              extend3_ = s;
              break;
            }
            case 74: {
              String s = input.readStringRequireUtf8();

              extend4_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_MessageAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_MessageAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MessageAck.class, Builder.class);
    }

    public static final int MSGID_FIELD_NUMBER = 1;
    private long msgId_;
    /**
     * <pre>
     *消息Id
     * </pre>
     *
     * <code>optional int64 msgId = 1;</code>
     */
    public long getMsgId() {
      return msgId_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     *消息类型，见枚举： MsgTypeEnum
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int CMSGID_FIELD_NUMBER = 3;
    private long cMsgId_;
    /**
     * <pre>
     *客户端临时ID
     * </pre>
     *
     * <code>optional int64 cMsgId = 3;</code>
     */
    public long getCMsgId() {
      return cMsgId_;
    }

    public static final int SERVERTIME_FIELD_NUMBER = 4;
    private long serverTime_;
    /**
     * <pre>
     *服务器端时间
     * </pre>
     *
     * <code>optional int64 serverTime = 4;</code>
     */
    public long getServerTime() {
      return serverTime_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 5;
    private long sequence_;
    /**
     * <pre>
     *消息sequence
     * </pre>
     *
     * <code>optional int64 sequence = 5;</code>
     */
    public long getSequence() {
      return sequence_;
    }

    public static final int EXTEND1_FIELD_NUMBER = 6;
    private volatile Object extend1_;
    /**
     * <pre>
     *webim:msgId字符串类型
     * </pre>
     *
     * <code>optional string extend1 = 6;</code>
     */
    public String getExtend1() {
      Object ref = extend1_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend1_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *webim:msgId字符串类型
     * </pre>
     *
     * <code>optional string extend1 = 6;</code>
     */
    public com.google.protobuf.ByteString
        getExtend1Bytes() {
      Object ref = extend1_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTEND2_FIELD_NUMBER = 7;
    private volatile Object extend2_;
    /**
     * <pre>
     *webim:sequence字符串类型
     * </pre>
     *
     * <code>optional string extend2 = 7;</code>
     */
    public String getExtend2() {
      Object ref = extend2_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend2_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *webim:sequence字符串类型
     * </pre>
     *
     * <code>optional string extend2 = 7;</code>
     */
    public com.google.protobuf.ByteString
        getExtend2Bytes() {
      Object ref = extend2_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTEND3_FIELD_NUMBER = 8;
    private volatile Object extend3_;
    /**
     * <pre>
     * </pre>
     *
     * <code>optional string extend3 = 8;</code>
     */
    public String getExtend3() {
      Object ref = extend3_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend3_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>optional string extend3 = 8;</code>
     */
    public com.google.protobuf.ByteString
        getExtend3Bytes() {
      Object ref = extend3_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend3_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTEND4_FIELD_NUMBER = 9;
    private volatile Object extend4_;
    /**
     * <pre>
     * </pre>
     *
     * <code>optional string extend4 = 9;</code>
     */
    public String getExtend4() {
      Object ref = extend4_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        extend4_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>optional string extend4 = 9;</code>
     */
    public com.google.protobuf.ByteString
        getExtend4Bytes() {
      Object ref = extend4_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend4_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (msgId_ != 0L) {
        output.writeInt64(1, msgId_);
      }
      if (type_ != 0) {
        output.writeInt32(2, type_);
      }
      if (cMsgId_ != 0L) {
        output.writeInt64(3, cMsgId_);
      }
      if (serverTime_ != 0L) {
        output.writeInt64(4, serverTime_);
      }
      if (sequence_ != 0L) {
        output.writeInt64(5, sequence_);
      }
      if (!getExtend1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, extend1_);
      }
      if (!getExtend2Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, extend2_);
      }
      if (!getExtend3Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, extend3_);
      }
      if (!getExtend4Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, extend4_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (msgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, msgId_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (cMsgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, cMsgId_);
      }
      if (serverTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, serverTime_);
      }
      if (sequence_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, sequence_);
      }
      if (!getExtend1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, extend1_);
      }
      if (!getExtend2Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, extend2_);
      }
      if (!getExtend3Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, extend3_);
      }
      if (!getExtend4Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, extend4_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MessageAck)) {
        return super.equals(obj);
      }
      MessageAck other = (MessageAck) obj;

      boolean result = true;
      result = result && (getMsgId()
          == other.getMsgId());
      result = result && (getType()
          == other.getType());
      result = result && (getCMsgId()
          == other.getCMsgId());
      result = result && (getServerTime()
          == other.getServerTime());
      result = result && (getSequence()
          == other.getSequence());
      result = result && getExtend1()
          .equals(other.getExtend1());
      result = result && getExtend2()
          .equals(other.getExtend2());
      result = result && getExtend3()
          .equals(other.getExtend3());
      result = result && getExtend4()
          .equals(other.getExtend4());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + MSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMsgId());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + CMSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCMsgId());
      hash = (37 * hash) + SERVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getServerTime());
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequence());
      hash = (37 * hash) + EXTEND1_FIELD_NUMBER;
      hash = (53 * hash) + getExtend1().hashCode();
      hash = (37 * hash) + EXTEND2_FIELD_NUMBER;
      hash = (53 * hash) + getExtend2().hashCode();
      hash = (37 * hash) + EXTEND3_FIELD_NUMBER;
      hash = (53 * hash) + getExtend3().hashCode();
      hash = (37 * hash) + EXTEND4_FIELD_NUMBER;
      hash = (53 * hash) + getExtend4().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MessageAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MessageAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MessageAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *消息类型回执内容
     * </pre>
     *
     * Protobuf type {@code MessageAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MessageAck)
        MessageAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_MessageAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_MessageAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MessageAck.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.MessageAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        msgId_ = 0L;

        type_ = 0;

        cMsgId_ = 0L;

        serverTime_ = 0L;

        sequence_ = 0L;

        extend1_ = "";

        extend2_ = "";

        extend3_ = "";

        extend4_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_MessageAck_descriptor;
      }

      public MessageAck getDefaultInstanceForType() {
        return MessageAck.getDefaultInstance();
      }

      public MessageAck build() {
        MessageAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public MessageAck buildPartial() {
        MessageAck result = new MessageAck(this);
        result.msgId_ = msgId_;
        result.type_ = type_;
        result.cMsgId_ = cMsgId_;
        result.serverTime_ = serverTime_;
        result.sequence_ = sequence_;
        result.extend1_ = extend1_;
        result.extend2_ = extend2_;
        result.extend3_ = extend3_;
        result.extend4_ = extend4_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MessageAck) {
          return mergeFrom((MessageAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MessageAck other) {
        if (other == MessageAck.getDefaultInstance()) return this;
        if (other.getMsgId() != 0L) {
          setMsgId(other.getMsgId());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getCMsgId() != 0L) {
          setCMsgId(other.getCMsgId());
        }
        if (other.getServerTime() != 0L) {
          setServerTime(other.getServerTime());
        }
        if (other.getSequence() != 0L) {
          setSequence(other.getSequence());
        }
        if (!other.getExtend1().isEmpty()) {
          extend1_ = other.extend1_;
          onChanged();
        }
        if (!other.getExtend2().isEmpty()) {
          extend2_ = other.extend2_;
          onChanged();
        }
        if (!other.getExtend3().isEmpty()) {
          extend3_ = other.extend3_;
          onChanged();
        }
        if (!other.getExtend4().isEmpty()) {
          extend4_ = other.extend4_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MessageAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MessageAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long msgId_ ;
      /**
       * <pre>
       *消息Id
       * </pre>
       *
       * <code>optional int64 msgId = 1;</code>
       */
      public long getMsgId() {
        return msgId_;
      }
      /**
       * <pre>
       *消息Id
       * </pre>
       *
       * <code>optional int64 msgId = 1;</code>
       */
      public Builder setMsgId(long value) {
        
        msgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息Id
       * </pre>
       *
       * <code>optional int64 msgId = 1;</code>
       */
      public Builder clearMsgId() {
        
        msgId_ = 0L;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *消息类型，见枚举： MsgTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *消息类型，见枚举： MsgTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息类型，见枚举： MsgTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long cMsgId_ ;
      /**
       * <pre>
       *客户端临时ID
       * </pre>
       *
       * <code>optional int64 cMsgId = 3;</code>
       */
      public long getCMsgId() {
        return cMsgId_;
      }
      /**
       * <pre>
       *客户端临时ID
       * </pre>
       *
       * <code>optional int64 cMsgId = 3;</code>
       */
      public Builder setCMsgId(long value) {
        
        cMsgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端临时ID
       * </pre>
       *
       * <code>optional int64 cMsgId = 3;</code>
       */
      public Builder clearCMsgId() {
        
        cMsgId_ = 0L;
        onChanged();
        return this;
      }

      private long serverTime_ ;
      /**
       * <pre>
       *服务器端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 4;</code>
       */
      public long getServerTime() {
        return serverTime_;
      }
      /**
       * <pre>
       *服务器端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 4;</code>
       */
      public Builder setServerTime(long value) {
        
        serverTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *服务器端时间
       * </pre>
       *
       * <code>optional int64 serverTime = 4;</code>
       */
      public Builder clearServerTime() {
        
        serverTime_ = 0L;
        onChanged();
        return this;
      }

      private long sequence_ ;
      /**
       * <pre>
       *消息sequence
       * </pre>
       *
       * <code>optional int64 sequence = 5;</code>
       */
      public long getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       *消息sequence
       * </pre>
       *
       * <code>optional int64 sequence = 5;</code>
       */
      public Builder setSequence(long value) {
        
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息sequence
       * </pre>
       *
       * <code>optional int64 sequence = 5;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = 0L;
        onChanged();
        return this;
      }

      private Object extend1_ = "";
      /**
       * <pre>
       *webim:msgId字符串类型
       * </pre>
       *
       * <code>optional string extend1 = 6;</code>
       */
      public String getExtend1() {
        Object ref = extend1_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend1_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *webim:msgId字符串类型
       * </pre>
       *
       * <code>optional string extend1 = 6;</code>
       */
      public com.google.protobuf.ByteString
          getExtend1Bytes() {
        Object ref = extend1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *webim:msgId字符串类型
       * </pre>
       *
       * <code>optional string extend1 = 6;</code>
       */
      public Builder setExtend1(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *webim:msgId字符串类型
       * </pre>
       *
       * <code>optional string extend1 = 6;</code>
       */
      public Builder clearExtend1() {
        
        extend1_ = getDefaultInstance().getExtend1();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *webim:msgId字符串类型
       * </pre>
       *
       * <code>optional string extend1 = 6;</code>
       */
      public Builder setExtend1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend1_ = value;
        onChanged();
        return this;
      }

      private Object extend2_ = "";
      /**
       * <pre>
       *webim:sequence字符串类型
       * </pre>
       *
       * <code>optional string extend2 = 7;</code>
       */
      public String getExtend2() {
        Object ref = extend2_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend2_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *webim:sequence字符串类型
       * </pre>
       *
       * <code>optional string extend2 = 7;</code>
       */
      public com.google.protobuf.ByteString
          getExtend2Bytes() {
        Object ref = extend2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *webim:sequence字符串类型
       * </pre>
       *
       * <code>optional string extend2 = 7;</code>
       */
      public Builder setExtend2(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *webim:sequence字符串类型
       * </pre>
       *
       * <code>optional string extend2 = 7;</code>
       */
      public Builder clearExtend2() {
        
        extend2_ = getDefaultInstance().getExtend2();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *webim:sequence字符串类型
       * </pre>
       *
       * <code>optional string extend2 = 7;</code>
       */
      public Builder setExtend2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend2_ = value;
        onChanged();
        return this;
      }

      private Object extend3_ = "";
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend3 = 8;</code>
       */
      public String getExtend3() {
        Object ref = extend3_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend3_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend3 = 8;</code>
       */
      public com.google.protobuf.ByteString
          getExtend3Bytes() {
        Object ref = extend3_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend3_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend3 = 8;</code>
       */
      public Builder setExtend3(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend3_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend3 = 8;</code>
       */
      public Builder clearExtend3() {
        
        extend3_ = getDefaultInstance().getExtend3();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend3 = 8;</code>
       */
      public Builder setExtend3Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend3_ = value;
        onChanged();
        return this;
      }

      private Object extend4_ = "";
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend4 = 9;</code>
       */
      public String getExtend4() {
        Object ref = extend4_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          extend4_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend4 = 9;</code>
       */
      public com.google.protobuf.ByteString
          getExtend4Bytes() {
        Object ref = extend4_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend4_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend4 = 9;</code>
       */
      public Builder setExtend4(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        extend4_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend4 = 9;</code>
       */
      public Builder clearExtend4() {
        
        extend4_ = getDefaultInstance().getExtend4();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional string extend4 = 9;</code>
       */
      public Builder setExtend4Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        extend4_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:MessageAck)
    }

    // @@protoc_insertion_point(class_scope:MessageAck)
    private static final MessageAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MessageAck();
    }

    public static MessageAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageAck>
        PARSER = new com.google.protobuf.AbstractParser<MessageAck>() {
      public MessageAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MessageAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MessageAck> getParserForType() {
      return PARSER;
    }

    public MessageAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RoomMsgAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RoomMsgAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *消息Id
     * </pre>
     *
     * <code>optional int64 msgId = 1;</code>
     */
    long getMsgId();

    /**
     * <pre>
     *消息类型，见枚举： MsgTypeEnum
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    int getType();

    /**
     * <pre>
     *客户端临时ID
     * </pre>
     *
     * <code>optional int64 subType = 3;</code>
     */
    long getSubType();

    /**
     * <pre>
     *直播间消息类型
     * </pre>
     *
     * <code>optional int32 diyType = 4;</code>
     */
    int getDiyType();

    /**
     * <pre>
     *消息发送者
     * </pre>
     *
     * <code>optional int64 from = 5;</code>
     */
    long getFrom();

    /**
     * <pre>
     *直播间ID
     * </pre>
     *
     * <code>optional int64 roomId = 6;</code>
     */
    long getRoomId();

    /**
     * <pre>
     *消息sequence
     * </pre>
     *
     * <code>optional int64 sequence = 7;</code>
     */
    long getSequence();

    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 8;</code>
     */
    long getCMsgId();
  }
  /**
   * <pre>
   *直播间白名单消息回执内容
   * </pre>
   *
   * Protobuf type {@code RoomMsgAck}
   */
  public  static final class RoomMsgAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RoomMsgAck)
      RoomMsgAckOrBuilder {
    // Use RoomMsgAck.newBuilder() to construct.
    private RoomMsgAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RoomMsgAck() {
      msgId_ = 0L;
      type_ = 0;
      subType_ = 0L;
      diyType_ = 0;
      from_ = 0L;
      roomId_ = 0L;
      sequence_ = 0L;
      cMsgId_ = 0L;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RoomMsgAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              msgId_ = input.readInt64();
              break;
            }
            case 16: {

              type_ = input.readInt32();
              break;
            }
            case 24: {

              subType_ = input.readInt64();
              break;
            }
            case 32: {

              diyType_ = input.readInt32();
              break;
            }
            case 40: {

              from_ = input.readInt64();
              break;
            }
            case 48: {

              roomId_ = input.readInt64();
              break;
            }
            case 56: {

              sequence_ = input.readInt64();
              break;
            }
            case 64: {

              cMsgId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageBuf.internal_static_RoomMsgAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageBuf.internal_static_RoomMsgAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RoomMsgAck.class, Builder.class);
    }

    public static final int MSGID_FIELD_NUMBER = 1;
    private long msgId_;
    /**
     * <pre>
     *消息Id
     * </pre>
     *
     * <code>optional int64 msgId = 1;</code>
     */
    public long getMsgId() {
      return msgId_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     *消息类型，见枚举： MsgTypeEnum
     * </pre>
     *
     * <code>optional int32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int SUBTYPE_FIELD_NUMBER = 3;
    private long subType_;
    /**
     * <pre>
     *客户端临时ID
     * </pre>
     *
     * <code>optional int64 subType = 3;</code>
     */
    public long getSubType() {
      return subType_;
    }

    public static final int DIYTYPE_FIELD_NUMBER = 4;
    private int diyType_;
    /**
     * <pre>
     *直播间消息类型
     * </pre>
     *
     * <code>optional int32 diyType = 4;</code>
     */
    public int getDiyType() {
      return diyType_;
    }

    public static final int FROM_FIELD_NUMBER = 5;
    private long from_;
    /**
     * <pre>
     *消息发送者
     * </pre>
     *
     * <code>optional int64 from = 5;</code>
     */
    public long getFrom() {
      return from_;
    }

    public static final int ROOMID_FIELD_NUMBER = 6;
    private long roomId_;
    /**
     * <pre>
     *直播间ID
     * </pre>
     *
     * <code>optional int64 roomId = 6;</code>
     */
    public long getRoomId() {
      return roomId_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 7;
    private long sequence_;
    /**
     * <pre>
     *消息sequence
     * </pre>
     *
     * <code>optional int64 sequence = 7;</code>
     */
    public long getSequence() {
      return sequence_;
    }

    public static final int CMSGID_FIELD_NUMBER = 8;
    private long cMsgId_;
    /**
     * <pre>
     *客户端唯一消息id
     * </pre>
     *
     * <code>optional int64 cMsgId = 8;</code>
     */
    public long getCMsgId() {
      return cMsgId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (msgId_ != 0L) {
        output.writeInt64(1, msgId_);
      }
      if (type_ != 0) {
        output.writeInt32(2, type_);
      }
      if (subType_ != 0L) {
        output.writeInt64(3, subType_);
      }
      if (diyType_ != 0) {
        output.writeInt32(4, diyType_);
      }
      if (from_ != 0L) {
        output.writeInt64(5, from_);
      }
      if (roomId_ != 0L) {
        output.writeInt64(6, roomId_);
      }
      if (sequence_ != 0L) {
        output.writeInt64(7, sequence_);
      }
      if (cMsgId_ != 0L) {
        output.writeInt64(8, cMsgId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (msgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, msgId_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (subType_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, subType_);
      }
      if (diyType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, diyType_);
      }
      if (from_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, from_);
      }
      if (roomId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, roomId_);
      }
      if (sequence_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, sequence_);
      }
      if (cMsgId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, cMsgId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RoomMsgAck)) {
        return super.equals(obj);
      }
      RoomMsgAck other = (RoomMsgAck) obj;

      boolean result = true;
      result = result && (getMsgId()
          == other.getMsgId());
      result = result && (getType()
          == other.getType());
      result = result && (getSubType()
          == other.getSubType());
      result = result && (getDiyType()
          == other.getDiyType());
      result = result && (getFrom()
          == other.getFrom());
      result = result && (getRoomId()
          == other.getRoomId());
      result = result && (getSequence()
          == other.getSequence());
      result = result && (getCMsgId()
          == other.getCMsgId());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + MSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMsgId());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + SUBTYPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSubType());
      hash = (37 * hash) + DIYTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDiyType();
      hash = (37 * hash) + FROM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFrom());
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRoomId());
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequence());
      hash = (37 * hash) + CMSGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCMsgId());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RoomMsgAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomMsgAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomMsgAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RoomMsgAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RoomMsgAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RoomMsgAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RoomMsgAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RoomMsgAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RoomMsgAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RoomMsgAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RoomMsgAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *直播间白名单消息回执内容
     * </pre>
     *
     * Protobuf type {@code RoomMsgAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RoomMsgAck)
        RoomMsgAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageBuf.internal_static_RoomMsgAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageBuf.internal_static_RoomMsgAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RoomMsgAck.class, Builder.class);
      }

      // Construct using com.xl.rpc.message.MessageBuf.RoomMsgAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        msgId_ = 0L;

        type_ = 0;

        subType_ = 0L;

        diyType_ = 0;

        from_ = 0L;

        roomId_ = 0L;

        sequence_ = 0L;

        cMsgId_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageBuf.internal_static_RoomMsgAck_descriptor;
      }

      public RoomMsgAck getDefaultInstanceForType() {
        return RoomMsgAck.getDefaultInstance();
      }

      public RoomMsgAck build() {
        RoomMsgAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RoomMsgAck buildPartial() {
        RoomMsgAck result = new RoomMsgAck(this);
        result.msgId_ = msgId_;
        result.type_ = type_;
        result.subType_ = subType_;
        result.diyType_ = diyType_;
        result.from_ = from_;
        result.roomId_ = roomId_;
        result.sequence_ = sequence_;
        result.cMsgId_ = cMsgId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RoomMsgAck) {
          return mergeFrom((RoomMsgAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RoomMsgAck other) {
        if (other == RoomMsgAck.getDefaultInstance()) return this;
        if (other.getMsgId() != 0L) {
          setMsgId(other.getMsgId());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getSubType() != 0L) {
          setSubType(other.getSubType());
        }
        if (other.getDiyType() != 0) {
          setDiyType(other.getDiyType());
        }
        if (other.getFrom() != 0L) {
          setFrom(other.getFrom());
        }
        if (other.getRoomId() != 0L) {
          setRoomId(other.getRoomId());
        }
        if (other.getSequence() != 0L) {
          setSequence(other.getSequence());
        }
        if (other.getCMsgId() != 0L) {
          setCMsgId(other.getCMsgId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RoomMsgAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RoomMsgAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long msgId_ ;
      /**
       * <pre>
       *消息Id
       * </pre>
       *
       * <code>optional int64 msgId = 1;</code>
       */
      public long getMsgId() {
        return msgId_;
      }
      /**
       * <pre>
       *消息Id
       * </pre>
       *
       * <code>optional int64 msgId = 1;</code>
       */
      public Builder setMsgId(long value) {
        
        msgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息Id
       * </pre>
       *
       * <code>optional int64 msgId = 1;</code>
       */
      public Builder clearMsgId() {
        
        msgId_ = 0L;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *消息类型，见枚举： MsgTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *消息类型，见枚举： MsgTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息类型，见枚举： MsgTypeEnum
       * </pre>
       *
       * <code>optional int32 type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private long subType_ ;
      /**
       * <pre>
       *客户端临时ID
       * </pre>
       *
       * <code>optional int64 subType = 3;</code>
       */
      public long getSubType() {
        return subType_;
      }
      /**
       * <pre>
       *客户端临时ID
       * </pre>
       *
       * <code>optional int64 subType = 3;</code>
       */
      public Builder setSubType(long value) {
        
        subType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端临时ID
       * </pre>
       *
       * <code>optional int64 subType = 3;</code>
       */
      public Builder clearSubType() {
        
        subType_ = 0L;
        onChanged();
        return this;
      }

      private int diyType_ ;
      /**
       * <pre>
       *直播间消息类型
       * </pre>
       *
       * <code>optional int32 diyType = 4;</code>
       */
      public int getDiyType() {
        return diyType_;
      }
      /**
       * <pre>
       *直播间消息类型
       * </pre>
       *
       * <code>optional int32 diyType = 4;</code>
       */
      public Builder setDiyType(int value) {
        
        diyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *直播间消息类型
       * </pre>
       *
       * <code>optional int32 diyType = 4;</code>
       */
      public Builder clearDiyType() {
        
        diyType_ = 0;
        onChanged();
        return this;
      }

      private long from_ ;
      /**
       * <pre>
       *消息发送者
       * </pre>
       *
       * <code>optional int64 from = 5;</code>
       */
      public long getFrom() {
        return from_;
      }
      /**
       * <pre>
       *消息发送者
       * </pre>
       *
       * <code>optional int64 from = 5;</code>
       */
      public Builder setFrom(long value) {
        
        from_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息发送者
       * </pre>
       *
       * <code>optional int64 from = 5;</code>
       */
      public Builder clearFrom() {
        
        from_ = 0L;
        onChanged();
        return this;
      }

      private long roomId_ ;
      /**
       * <pre>
       *直播间ID
       * </pre>
       *
       * <code>optional int64 roomId = 6;</code>
       */
      public long getRoomId() {
        return roomId_;
      }
      /**
       * <pre>
       *直播间ID
       * </pre>
       *
       * <code>optional int64 roomId = 6;</code>
       */
      public Builder setRoomId(long value) {
        
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *直播间ID
       * </pre>
       *
       * <code>optional int64 roomId = 6;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = 0L;
        onChanged();
        return this;
      }

      private long sequence_ ;
      /**
       * <pre>
       *消息sequence
       * </pre>
       *
       * <code>optional int64 sequence = 7;</code>
       */
      public long getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       *消息sequence
       * </pre>
       *
       * <code>optional int64 sequence = 7;</code>
       */
      public Builder setSequence(long value) {
        
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *消息sequence
       * </pre>
       *
       * <code>optional int64 sequence = 7;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = 0L;
        onChanged();
        return this;
      }

      private long cMsgId_ ;
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 8;</code>
       */
      public long getCMsgId() {
        return cMsgId_;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 8;</code>
       */
      public Builder setCMsgId(long value) {
        
        cMsgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *客户端唯一消息id
       * </pre>
       *
       * <code>optional int64 cMsgId = 8;</code>
       */
      public Builder clearCMsgId() {
        
        cMsgId_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RoomMsgAck)
    }

    // @@protoc_insertion_point(class_scope:RoomMsgAck)
    private static final RoomMsgAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RoomMsgAck();
    }

    public static RoomMsgAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoomMsgAck>
        PARSER = new com.google.protobuf.AbstractParser<RoomMsgAck>() {
      public RoomMsgAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RoomMsgAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RoomMsgAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RoomMsgAck> getParserForType() {
      return PARSER;
    }

    public RoomMsgAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GroupMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GroupMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_User_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_User_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HttpRawIMMsgResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HttpRawIMMsgResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MessageList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MessageList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IMMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IMMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Ack_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Ack_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UserAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UserAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MessageAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MessageAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RoomMsgAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RoomMsgAck_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017liveme.im.proto\032\031google/protobuf/any.p" +
      "roto\"u\n\014GroupMessage\022\r\n\005gname\030\001 \001(\t\022\013\n\003u" +
      "id\030\002 \001(\t\022\020\n\010nickname\030\003 \001(\t\022\014\n\004role\030\004 \001(\005" +
      "\022\013\n\003gid\030\005 \001(\t\022\r\n\005admin\030\006 \001(\t\022\r\n\005topic\030\007 " +
      "\001(\t\"\331\001\n\004User\022\016\n\006userId\030\001 \001(\t\022\r\n\005token\030\002 " +
      "\001(\t\022\r\n\005appId\030\003 \001(\t\022\021\n\tloginType\030\004 \001(\005\022\022\n" +
      "\ndeviceType\030\005 \001(\005\022\020\n\010deviceId\030\006 \001(\t\022\020\n\010s" +
      "equence\030\007 \001(\003\022\016\n\006cMsgId\030\010 \001(\003\022\022\n\nappVers" +
      "ion\030\t \001(\t\022\017\n\007country\030\n \001(\t\022\023\n\013channelTyp" +
      "e\030\013 \001(\005\022\016\n\006appKey\030\014 \001(\t\"r\n\024HttpRawIMMsgR",
      "esponse\022\r\n\005ecode\030\001 \001(\005\022\014\n\004emsg\030\002 \001(\t\022\021\n\t" +
      "unReadNum\030\003 \001(\005\022\020\n\010clientIp\030\004 \001(\t\022\030\n\004msg" +
      "s\030\005 \003(\0132\n.IMMessage\"\340\001\n\013MessageList\022\n\n\002t" +
      "o\030\001 \001(\t\022\020\n\010deviceId\030\002 \001(\t\022\027\n\003msg\030\003 \003(\0132\n" +
      ".IMMessage\022\014\n\004from\030\004 \001(\t\022\"\n\004data\030\005 \003(\0132\024" +
      ".google.protobuf.Any\022\016\n\006cMsgId\030\006 \001(\003\022\023\n\013" +
      "gzipDevices\030\007 \001(\010\022\r\n\005msgId\030\010 \001(\003\022\016\n\006msgI" +
      "ds\030\t \003(\003\022\r\n\005appid\030\n \001(\t\022\025\n\rgzipDeviceIds" +
      "\030\035 \001(\014\"\346\003\n\tIMMessage\022\r\n\005appId\030\001 \001(\t\022\014\n\004f" +
      "rom\030\002 \001(\t\022\n\n\002to\030\003 \001(\t\022\020\n\010deviceId\030\004 \001(\t\022",
      "\014\n\004type\030\005 \001(\005\022\017\n\007subType\030\006 \001(\005\022\r\n\005title\030" +
      "\007 \001(\t\022\r\n\005msgId\030\010 \001(\003\022\020\n\010sequence\030\t \001(\003\022\014" +
      "\n\004flag\030\n \001(\t\022\017\n\007content\030\013 \001(\t\022\022\n\nclientT" +
      "ime\030\014 \001(\003\022\022\n\nserverTime\030\r \001(\003\022\016\n\006cMsgId\030" +
      "\016 \001(\003\022\021\n\tbizStatus\030\017 \001(\005\022\022\n\ndeviceType\030\020" +
      " \001(\005\022\024\n\014msgUnReadNum\030\021 \001(\005\022\017\n\007extend1\030\022 " +
      "\001(\t\022\017\n\007extend2\030\023 \001(\t\022\017\n\007extend3\030\024 \001(\t\022\017\n" +
      "\007extend4\030\025 \001(\014\022\017\n\007extend5\030\026 \001(\t\022\017\n\007exten" +
      "d6\030\027 \001(\t\022\017\n\007extend7\030\030 \001(\t\022\021\n\trequestId\030\031" +
      " \001(\t\022\020\n\010priority\030\032 \001(\005\022\017\n\007toAppid\030\033 \001(\t\022",
      "\016\n\006liveip\030\034 \001(\t\"\260\001\n\003Ack\022\n\n\002to\030\001 \001(\t\022\020\n\010d" +
      "eviceId\030\002 \001(\t\022\014\n\004type\030\003 \001(\005\022\021\n\tstateCode" +
      "\030\004 \001(\005\022\031\n\007userAck\030\005 \001(\0132\010.UserAck\022\037\n\nmes" +
      "sageAck\030\006 \003(\0132\013.MessageAck\022\037\n\nroomMsgAck" +
      "\030\007 \003(\0132\013.RoomMsgAck\022\r\n\005appId\030\010 \001(\t\"\246\001\n\007U" +
      "serAck\022\016\n\006userId\030\001 \001(\t\022\020\n\010deviceId\030\002 \001(\t" +
      "\022\022\n\nsessionKey\030\003 \001(\t\022\022\n\nserverTime\030\004 \001(\003" +
      "\022\016\n\006cMsgId\030\005 \001(\003\022\025\n\rrefreshConfig\030\006 \001(\005\022" +
      "\025\n\runReadMsgSize\030\007 \001(\003\022\023\n\013switchFlags\030\010 " +
      "\001(\005\"\243\001\n\nMessageAck\022\r\n\005msgId\030\001 \001(\003\022\014\n\004typ",
      "e\030\002 \001(\005\022\016\n\006cMsgId\030\003 \001(\003\022\022\n\nserverTime\030\004 " +
      "\001(\003\022\020\n\010sequence\030\005 \001(\003\022\017\n\007extend1\030\006 \001(\t\022\017" +
      "\n\007extend2\030\007 \001(\t\022\017\n\007extend3\030\010 \001(\t\022\017\n\007exte" +
      "nd4\030\t \001(\t\"\213\001\n\nRoomMsgAck\022\r\n\005msgId\030\001 \001(\003\022" +
      "\014\n\004type\030\002 \001(\005\022\017\n\007subType\030\003 \001(\003\022\017\n\007diyTyp" +
      "e\030\004 \001(\005\022\014\n\004from\030\005 \001(\003\022\016\n\006roomId\030\006 \001(\003\022\020\n" +
      "\010sequence\030\007 \001(\003\022\016\n\006cMsgId\030\010 \001(\003*\330\002\n\010Type" +
      "Enum\022\t\n\005LOGIN\020\000\022\n\n\006LOGOUT\020\001\022\007\n\003ACK\020\002\022\010\n\004" +
      "CHAT\020\n\022\r\n\tGROUPCHAT\020\013\022\010\n\004PUSH\020\014\022\017\n\013GROUP" +
      "MANAGE\020\r\022\023\n\017GROUPMANAGELIST\020\016\022\010\n\004ROOM\020\024\022",
      "\016\n\nROOM_BATCH\020\025\022\t\n\005EVENT\020\036\022\014\n\010OFFICIAL\020\037" +
      "\022\n\n\006SYSTEM\020(\022\010\n\004LIST\0202\022\013\n\007GATEWAY\020<\022\022\n\005C" +
      "LOSE\020\377\377\377\377\377\377\377\377\377\001\022\034\n\017LIMIT_QPS_CLOSE\020\376\377\377\377\377" +
      "\377\377\377\377\001\022\026\n\tAPP_CLOSE\020\375\377\377\377\377\377\377\377\377\001\022\030\n\013APP_STA" +
      "TICS\020\374\377\377\377\377\377\377\377\377\001\022\026\n\tKEEPALIVE\020\235\377\377\377\377\377\377\377\377\001\022" +
      "\021\n\004PULL\020\234\377\377\377\377\377\377\377\377\001*%\n\rLoginTypeEnum\022\n\n\006M" +
      "ANUAL\020\000\022\010\n\004AUTO\020\001*O\n\016DeviceTypeEnum\022\006\n\002P" +
      "C\020\000\022\007\n\003WEB\020\001\022\013\n\007ANDROID\020\002\022\007\n\003IOS\020\003\022\010\n\004IP" +
      "AD\020\004\022\014\n\010WINPHONE\020\005*,\n\017ChannelTypeEnum\022\010\n" +
      "\004LIVE\020\000\022\017\n\013API_GATEWAY\020\001* \n\013RequestEnum\022",
      "\010\n\004POST\020\000\022\007\n\003GET\020\001*\375\006\n\013SubTypeEnum\022\010\n\004TE" +
      "XT\020\000\022\t\n\005IMAGE\020\001\022\t\n\005AUDIO\020\002\022\t\n\005VEDIO\020\003\022\020\n" +
      "\014GROUP_CREATE\020\n\022\016\n\nGROUP_JOIN\020\013\022\016\n\nGROUP" +
      "_EXIT\020\014\022\016\n\nGROUP_INFO\020\r\022\025\n\021GROUP_INFO_UP" +
      "DATE\020\016\022\017\n\013GROUP_ADMIN\020\017\022\017\n\013GROUP_USERS\020\020" +
      "\022\024\n\020GROUP_USERGROUPS\020\021\022\022\n\016GROUP_DISSOLVE" +
      "\020\024\022\024\n\020PULL_HISTORY_MSG\020\025\022\023\n\017EVENT_GROUPI" +
      "NFO\020\036\022\022\n\016EVENT_GROUPMEM\020\037\022\026\n\022EVENT_GROUP" +
      "DISMISS\020 \022\024\n\020EVENT_CANCLE_MSG\020!\022\032\n\026EVENT" +
      "_UPDATE_PUSHTOKEN\020\"\022\022\n\016EVENTTYPE_CHAT\020(\022",
      "\027\n\023EVENTTYPE_GROUPCHAT\020)\022\030\n\024EVENTTYPE_TO" +
      "PSESSION\020*\022\032\n\026EVENT_ROOM_GAG_ADD_MSG\020#\022\032" +
      "\n\026EVENT_ROOM_GAG_DEL_MSG\020$\022\033\n\027EVENT_ROOM" +
      "_GET_GAG_LIST\020%\022\035\n\031EVENT_ROOM_GET_GAG_ST" +
      "ATUS\020&\022\033\n\027EVENT_ROOM_BLACK_NOTIFY\020\'\022\032\n\026C" +
      "HAT_MESSAGELIST_VALUE\0203\022\032\n\026ROOM_MESSAGEL" +
      "IST_VALUE\0204\022\017\n\013ROOM_CREATE\020<\022\016\n\nROOM_LOG" +
      "IN\020=\022\017\n\013ROOM_LOGOUT\020>\022\r\n\tROOM_KICK\020?\022\014\n\010" +
      "ROOM_GAG\020@\022\017\n\013ROOM_SYSTEM\020A\022\017\n\013ROOM_NOTI" +
      "CE\020B\022\013\n\007ROOM_AT\020C\022\016\n\nROOM_BLACK\020D\022\016\n\nROO",
      "M_CLOSE\020E\022\r\n\tROOM_PULL\020F\022\026\n\022ROOM_SERVER_" +
      "REMOVE\020G\022\014\n\010ROOM_DIY\020P\022\021\n\rPUSH_OFFICIAL\020" +
      "Z\022\021\n\rPUSH_ACTIVITY\020[\022\014\n\010PULL_LOG\020d*\326\001\n\013A" +
      "ckTypeEnum\022\017\n\013CONNECT_ACK\020\000\022\r\n\tLOGIN_ACK" +
      "\020\001\022\016\n\nLOGOUT_ACK\020\002\022\020\n\014SEND_MSG_ACK\020\003\022\022\n\016" +
      "INCEPT_MSG_ACK\020\004\022\023\n\017ROOM_CREATE_ACK\020\005\022\022\n" +
      "\016ROOM_LOGIN_ACK\020\006\022\023\n\017ROOM_LOGOUT_ACK\020\007\022\021" +
      "\n\rROOM_KICK_ACK\020\010\022\020\n\014ROOM_GAG_ACK\020\t\022\016\n\nB" +
      "URNED_ACK\020\n*.\n\016SwitchFlagEnum\022\010\n\004NONE\020\000\022" +
      "\022\n\016GATEWAY_ENABLE\020\001*,\n\013AckCodeEnum\022\013\n\007SU",
      "CCESS\020\000\022\020\n\014TOKEN_EXPIRE\020\001B \n\022com.xl.rpc." +
      "messageB\nMessageBufb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_GroupMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GroupMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GroupMessage_descriptor,
        new String[] { "Gname", "Uid", "Nickname", "Role", "Gid", "Admin", "Topic", });
    internal_static_User_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_User_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_User_descriptor,
        new String[] { "UserId", "Token", "AppId", "LoginType", "DeviceType", "DeviceId", "Sequence", "CMsgId", "AppVersion", "Country", "ChannelType", "AppKey", });
    internal_static_HttpRawIMMsgResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_HttpRawIMMsgResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HttpRawIMMsgResponse_descriptor,
        new String[] { "Ecode", "Emsg", "UnReadNum", "ClientIp", "Msgs", });
    internal_static_MessageList_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_MessageList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MessageList_descriptor,
        new String[] { "To", "DeviceId", "Msg", "From", "Data", "CMsgId", "GzipDevices", "MsgId", "MsgIds", "Appid", "GzipDeviceIds", });
    internal_static_IMMessage_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_IMMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IMMessage_descriptor,
        new String[] { "AppId", "From", "To", "DeviceId", "Type", "SubType", "Title", "MsgId", "Sequence", "Flag", "Content", "ClientTime", "ServerTime", "CMsgId", "BizStatus", "DeviceType", "MsgUnReadNum", "Extend1", "Extend2", "Extend3", "Extend4", "Extend5", "Extend6", "Extend7", "RequestId", "Priority", "ToAppid", "Liveip", });
    internal_static_Ack_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Ack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Ack_descriptor,
        new String[] { "To", "DeviceId", "Type", "StateCode", "UserAck", "MessageAck", "RoomMsgAck", "AppId", });
    internal_static_UserAck_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_UserAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UserAck_descriptor,
        new String[] { "UserId", "DeviceId", "SessionKey", "ServerTime", "CMsgId", "RefreshConfig", "UnReadMsgSize", "SwitchFlags", });
    internal_static_MessageAck_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_MessageAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MessageAck_descriptor,
        new String[] { "MsgId", "Type", "CMsgId", "ServerTime", "Sequence", "Extend1", "Extend2", "Extend3", "Extend4", });
    internal_static_RoomMsgAck_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_RoomMsgAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RoomMsgAck_descriptor,
        new String[] { "MsgId", "Type", "SubType", "DiyType", "From", "RoomId", "Sequence", "CMsgId", });
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
